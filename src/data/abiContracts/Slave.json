{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_link",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenUSDC",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenAUSDC",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_circleTokenMessengerAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_circleMessageTansmiterAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_POOL_ADDRESS_PROVIDER_ADDRESS",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_POOL_DATA_PROVIDER_ADDRESS",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_MASTER_CONTRACT",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "InvalidRouter",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "currentBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "calculatedFees",
          "type": "uint256"
        }
      ],
      "name": "NotEnoughBalance",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "sourceChainSelector",
          "type": "uint64"
        }
      ],
      "name": "MessageReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "destinationChainSelector",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fees",
          "type": "uint256"
        }
      ],
      "name": "MessageSent",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MASTER_CHAIN",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MASTER_CONTRACT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POOL_ADDRESS_PROVIDER_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POOL_DATA_PROVIDER_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aUsdcTokenSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aWrpTotalSupplySlaveView",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "calculateSharesValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "destTokenAmounts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Client.Any2EVMMessage",
          "name": "message",
          "type": "tuple"
        }
      ],
      "name": "ccipReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "circleMessageTansmiterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "circleTokenMessengerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "attestation",
          "type": "bytes"
        }
      ],
      "name": "claimAssetsFromBridge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getUserNonces",
      "outputs": [
        {
          "internalType": "uint128[]",
          "name": "",
          "type": "uint128[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isNodeActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mainNonceDeposits",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newNonceAndSupply",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "name": "nonceDataDeposits",
      "outputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sendAaveData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_nonce",
          "type": "uint128"
        }
      ],
      "name": "sendDepositByNonce",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "destTokenAmounts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Client.Any2EVMMessage",
          "name": "_any2EvmMessage",
          "type": "tuple"
        }
      ],
      "name": "setTotalSupplyAndNonce",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testerBalanceUsdc",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testerSuccess",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testingActivateNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testingReturnFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenAUSDC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenUSDC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userNoncesDeposits",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "name": "userNoncesWithdraw",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "destTokenAmounts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Client.Any2EVMMessage",
          "name": "_any2EvmMessage",
          "type": "tuple"
        }
      ],
      "name": "warpAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "warpIdToDestinationChain",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "circleChainId",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "destinationAddress",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "warpIds",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "destTokenAmounts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Client.Any2EVMMessage",
          "name": "_any2EvmMessage",
          "type": "tuple"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/IERC20.sol",
    "1": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
    "10": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol",
    "11": "contracts/Slave.sol",
    "12": "interfaces/IMessageTransmitter.sol",
    "13": "interfaces/IPool.sol",
    "14": "interfaces/IPoolAddressesProvider.sol",
    "15": "interfaces/IPoolDataProvider.sol",
    "16": "interfaces/ITokenMessenger.sol",
    "2": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol",
    "3": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
    "4": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/libraries/Client.sol",
    "9": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol"
  },
  "ast": {
    "absolutePath": "contracts/Slave.sol",
    "exportedSymbols": {
      "CCIPReceiver": [
        1264
      ],
      "Client": [
        1371
      ],
      "DataTypes": [
        2981
      ],
      "IERC20": [
        1144
      ],
      "IMessageTransmitter": [
        1495
      ],
      "IPool": [
        2134
      ],
      "IPoolAddressesProvider": [
        2629
      ],
      "IPoolDataProvider": [
        2358
      ],
      "IRouterClient": [
        1316
      ],
      "ITokenMessenger": [
        2374
      ],
      "LinkTokenInterface": [
        1482
      ],
      "OwnerIsCreator": [
        1387
      ],
      "Slave": [
        1066
      ]
    },
    "id": 1067,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:11"
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/libraries/Client.sol",
        "file": "@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1067,
        "sourceUnit": 1372,
        "src": "57:79:11",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "Client",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1371,
              "src": "65:6:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "file": "@chainlink/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1067,
        "sourceUnit": 1265,
        "src": "137:94:11",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "CCIPReceiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1264,
              "src": "145:12:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
        "file": "@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1067,
        "sourceUnit": 1317,
        "src": "232:94:11",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6,
              "name": "IRouterClient",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1316,
              "src": "240:13:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/access/OwnerIsCreator.sol",
        "file": "@chainlink/contracts/src/v0.8/shared/access/OwnerIsCreator.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1067,
        "sourceUnit": 1388,
        "src": "327:94:11",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8,
              "name": "OwnerIsCreator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1387,
              "src": "335:14:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
        "file": "@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
        "id": 11,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1067,
        "sourceUnit": 1483,
        "src": "423:106:11",
        "symbolAliases": [
          {
            "foreign": {
              "id": 10,
              "name": "LinkTokenInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1482,
              "src": "431:18:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 12,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1067,
        "sourceUnit": 1145,
        "src": "531:56:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ITokenMessenger.sol",
        "file": "../interfaces/ITokenMessenger.sol",
        "id": 13,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1067,
        "sourceUnit": 2375,
        "src": "588:43:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IMessageTransmitter.sol",
        "file": "../interfaces/IMessageTransmitter.sol",
        "id": 14,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1067,
        "sourceUnit": 1496,
        "src": "632:47:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IPool.sol",
        "file": "../interfaces/IPool.sol",
        "id": 15,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1067,
        "sourceUnit": 2135,
        "src": "680:33:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IPoolDataProvider.sol",
        "file": "../interfaces/IPoolDataProvider.sol",
        "id": 16,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1067,
        "sourceUnit": 2359,
        "src": "714:45:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 17,
              "name": "CCIPReceiver",
              "nameLocations": [
                "779:12:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1264,
              "src": "779:12:11"
            },
            "id": 18,
            "nodeType": "InheritanceSpecifier",
            "src": "779:12:11"
          }
        ],
        "canonicalName": "Slave",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1066,
        "linearizedBaseContracts": [
          1066,
          1264,
          2399,
          2387
        ],
        "name": "Slave",
        "nameLocation": "770:5:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "eventSelector": "556d717a59d7ef2969f5a9f2c6f9199f9a4e78cb7704aa4162ee70f7d2b771f1",
            "id": 24,
            "name": "MessageReceived",
            "nameLocation": "872:15:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "messageId",
                  "nameLocation": "913:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "897:25:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "897:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sourceChainSelector",
                  "nameLocation": "980:19:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "965:34:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "887:161:11"
            },
            "src": "866:183:11"
          },
          {
            "errorSelector": "8f0f4206",
            "id": 30,
            "name": "NotEnoughBalance",
            "nameLocation": "1060:16:11",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "currentBalance",
                  "nameLocation": "1085:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "1077:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1077:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "calculatedFees",
                  "nameLocation": "1109:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "1101:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1101:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1076:48:11"
            },
            "src": "1054:71:11"
          },
          {
            "anonymous": false,
            "eventSelector": "9fb548811cfe022ba6400d8533a80d63fbc228e596f93603959dc47b1886af54",
            "id": 42,
            "name": "MessageSent",
            "nameLocation": "1249:11:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "messageId",
                  "nameLocation": "1286:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "1270:25:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1270:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "destinationChainSelector",
                  "nameLocation": "1358:24:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "1343:39:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1343:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1448:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "1440:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1440:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feeToken",
                  "nameLocation": "1531:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "1523:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1523:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fees",
                  "nameLocation": "1601:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "1593:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1593:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1260:398:11"
            },
            "src": "1243:416:11"
          },
          {
            "constant": true,
            "functionSelector": "ca65a4fe",
            "id": 45,
            "mutability": "constant",
            "name": "MASTER_CHAIN",
            "nameLocation": "1688:12:11",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "1665:58:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 43,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1665:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "3136303135323836363031373537383235373533",
              "id": 44,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1703:20:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_16015286601757825753_by_1",
                "typeString": "int_const 16015286601757825753"
              },
              "value": "16015286601757825753"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a2a41a92",
            "id": 47,
            "mutability": "immutable",
            "name": "MASTER_CONTRACT",
            "nameLocation": "1787:15:11",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "1762:40:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 46,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1762:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "67062580",
            "id": 49,
            "mutability": "immutable",
            "name": "POOL_ADDRESS_PROVIDER_ADDRESS",
            "nameLocation": "1833:29:11",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "1808:54:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1808:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "982d1f18",
            "id": 51,
            "mutability": "immutable",
            "name": "POOL_DATA_PROVIDER_ADDRESS",
            "nameLocation": "1893:26:11",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "1868:51:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 50,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1868:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 54,
            "mutability": "mutable",
            "name": "s_router",
            "nameLocation": "1948:8:11",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "1926:30:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRouterClient_$1316",
              "typeString": "contract IRouterClient"
            },
            "typeName": {
              "id": 53,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 52,
                "name": "IRouterClient",
                "nameLocations": [
                  "1926:13:11"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1316,
                "src": "1926:13:11"
              },
              "referencedDeclaration": 1316,
              "src": "1926:13:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRouterClient_$1316",
                "typeString": "contract IRouterClient"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 57,
            "mutability": "mutable",
            "name": "s_linkToken",
            "nameLocation": "1990:11:11",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "1963:38:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LinkTokenInterface_$1482",
              "typeString": "contract LinkTokenInterface"
            },
            "typeName": {
              "id": 56,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 55,
                "name": "LinkTokenInterface",
                "nameLocations": [
                  "1963:18:11"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1482,
                "src": "1963:18:11"
              },
              "referencedDeclaration": 1482,
              "src": "1963:18:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkTokenInterface_$1482",
                "typeString": "contract LinkTokenInterface"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "c86d4040",
            "id": 59,
            "mutability": "mutable",
            "name": "tokenUSDC",
            "nameLocation": "2023:9:11",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "2008:24:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 58,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2008:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3f4a838",
            "id": 61,
            "mutability": "mutable",
            "name": "tokenAUSDC",
            "nameLocation": "2053:10:11",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "2038:25:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 60,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2038:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "97e8b613",
            "id": 63,
            "mutability": "mutable",
            "name": "circleTokenMessengerAddress",
            "nameLocation": "2084:27:11",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "2069:42:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 62,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2069:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3d2e2d61",
            "id": 65,
            "mutability": "mutable",
            "name": "circleMessageTansmiterAddress",
            "nameLocation": "2132:29:11",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "2117:44:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 64,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2117:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Slave.WarpIdToDestinationChain",
            "id": 70,
            "members": [
              {
                "constant": false,
                "id": 67,
                "mutability": "mutable",
                "name": "circleChainId",
                "nameLocation": "2217:13:11",
                "nodeType": "VariableDeclaration",
                "scope": 70,
                "src": "2210:20:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 66,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2210:6:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 69,
                "mutability": "mutable",
                "name": "destinationAddress",
                "nameLocation": "2248:18:11",
                "nodeType": "VariableDeclaration",
                "scope": 70,
                "src": "2240:26:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 68,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2240:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "WarpIdToDestinationChain",
            "nameLocation": "2175:24:11",
            "nodeType": "StructDefinition",
            "scope": 1066,
            "src": "2168:105:11",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cbec3e30",
            "id": 75,
            "mutability": "mutable",
            "name": "warpIdToDestinationChain",
            "nameLocation": "2339:24:11",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "2279:84:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_WarpIdToDestinationChain_$70_storage_$",
              "typeString": "mapping(bytes32 => struct Slave.WarpIdToDestinationChain)"
            },
            "typeName": {
              "id": 74,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 71,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2287:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2279:44:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_WarpIdToDestinationChain_$70_storage_$",
                "typeString": "mapping(bytes32 => struct Slave.WarpIdToDestinationChain)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 73,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 72,
                  "name": "WarpIdToDestinationChain",
                  "nameLocations": [
                    "2298:24:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70,
                  "src": "2298:24:11"
                },
                "referencedDeclaration": 70,
                "src": "2298:24:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_WarpIdToDestinationChain_$70_storage_ptr",
                  "typeString": "struct Slave.WarpIdToDestinationChain"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d1451be6",
            "id": 78,
            "mutability": "mutable",
            "name": "warpIds",
            "nameLocation": "2386:7:11",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "2369:24:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 76,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2369:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 77,
              "nodeType": "ArrayTypeName",
              "src": "2369:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1d34b4ff",
            "id": 81,
            "mutability": "mutable",
            "name": "isNodeActive",
            "nameLocation": "2412:12:11",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "2400:32:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 79,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2400:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 80,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2427:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2b72dc26",
            "id": 83,
            "mutability": "mutable",
            "name": "aUsdcTokenSupply",
            "nameLocation": "2454:16:11",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "2439:31:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 82,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2439:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "335d92f3",
            "id": 85,
            "mutability": "mutable",
            "name": "aWrpTotalSupplySlaveView",
            "nameLocation": "2549:24:11",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "2534:39:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 84,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2534:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a2feb55a",
            "id": 87,
            "mutability": "mutable",
            "name": "mainNonceDeposits",
            "nameLocation": "2594:17:11",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "2579:32:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 86,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "2579:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Slave.NonceDataDeposits",
            "id": 92,
            "members": [
              {
                "constant": false,
                "id": 89,
                "mutability": "mutable",
                "name": "userAddress",
                "nameLocation": "2661:11:11",
                "nodeType": "VariableDeclaration",
                "scope": 92,
                "src": "2653:19:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 88,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2653:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 91,
                "mutability": "mutable",
                "name": "shares",
                "nameLocation": "2690:6:11",
                "nodeType": "VariableDeclaration",
                "scope": 92,
                "src": "2682:14:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 90,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2682:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "NonceDataDeposits",
            "nameLocation": "2625:17:11",
            "nodeType": "StructDefinition",
            "scope": 1066,
            "src": "2618:85:11",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b91da80e",
            "id": 97,
            "mutability": "mutable",
            "name": "nonceDataDeposits",
            "nameLocation": "2754:17:11",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "2709:62:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint128_$_t_struct$_NonceDataDeposits_$92_storage_$",
              "typeString": "mapping(uint128 => struct Slave.NonceDataDeposits)"
            },
            "typeName": {
              "id": 96,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 93,
                "name": "uint128",
                "nodeType": "ElementaryTypeName",
                "src": "2717:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                }
              },
              "nodeType": "Mapping",
              "src": "2709:37:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint128_$_t_struct$_NonceDataDeposits_$92_storage_$",
                "typeString": "mapping(uint128 => struct Slave.NonceDataDeposits)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 95,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 94,
                  "name": "NonceDataDeposits",
                  "nameLocations": [
                    "2728:17:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "2728:17:11"
                },
                "referencedDeclaration": 92,
                "src": "2728:17:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_NonceDataDeposits_$92_storage_ptr",
                  "typeString": "struct Slave.NonceDataDeposits"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7adc6710",
            "id": 102,
            "mutability": "mutable",
            "name": "userNoncesDeposits",
            "nameLocation": "2814:18:11",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "2777:55:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint128_$dyn_storage_$",
              "typeString": "mapping(address => uint128[])"
            },
            "typeName": {
              "id": 101,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 98,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2785:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2777:29:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint128_$dyn_storage_$",
                "typeString": "mapping(address => uint128[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 99,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "2796:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "id": 100,
                "nodeType": "ArrayTypeName",
                "src": "2796:9:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint128_$dyn_storage_ptr",
                  "typeString": "uint128[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "60e39095",
            "id": 106,
            "mutability": "mutable",
            "name": "userNoncesWithdraw",
            "nameLocation": "2874:18:11",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "2839:53:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint128_$_t_address_$",
              "typeString": "mapping(uint128 => address)"
            },
            "typeName": {
              "id": 105,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 103,
                "name": "uint128",
                "nodeType": "ElementaryTypeName",
                "src": "2847:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                }
              },
              "nodeType": "Mapping",
              "src": "2839:27:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint128_$_t_address_$",
                "typeString": "mapping(uint128 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 104,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2858:7:11",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0fdfaa97",
            "id": 109,
            "mutability": "mutable",
            "name": "newNonceAndSupply",
            "nameLocation": "2911:17:11",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "2899:36:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 107,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2899:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 108,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2931:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e48c59d8",
            "id": 111,
            "mutability": "mutable",
            "name": "testerSuccess",
            "nameLocation": "2954:13:11",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "2942:25:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 110,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2942:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b007661b",
            "id": 113,
            "mutability": "mutable",
            "name": "testerBalanceUsdc",
            "nameLocation": "2988:17:11",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "2973:32:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 112,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2973:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 178,
              "nodeType": "Block",
              "src": "4203:488:11",
              "statements": [
                {
                  "expression": {
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 138,
                      "name": "s_router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "4213:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRouterClient_$1316",
                        "typeString": "contract IRouterClient"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 140,
                          "name": "_router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "4238:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 139,
                        "name": "IRouterClient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1316,
                        "src": "4224:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRouterClient_$1316_$",
                          "typeString": "type(contract IRouterClient)"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4224:22:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRouterClient_$1316",
                        "typeString": "contract IRouterClient"
                      }
                    },
                    "src": "4213:33:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRouterClient_$1316",
                      "typeString": "contract IRouterClient"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "4213:33:11"
                },
                {
                  "expression": {
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 144,
                      "name": "s_linkToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "4256:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$1482",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 146,
                          "name": "_link",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 118,
                          "src": "4289:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 145,
                        "name": "LinkTokenInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1482,
                        "src": "4270:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$1482_$",
                          "typeString": "type(contract LinkTokenInterface)"
                        }
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4270:25:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$1482",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "src": "4256:39:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LinkTokenInterface_$1482",
                      "typeString": "contract LinkTokenInterface"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "4256:39:11"
                },
                {
                  "expression": {
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 150,
                      "name": "tokenUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "4306:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 151,
                      "name": "_tokenUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120,
                      "src": "4318:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4306:22:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "4306:22:11"
                },
                {
                  "expression": {
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 154,
                      "name": "tokenAUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "4338:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 155,
                      "name": "_tokenAUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "4351:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4338:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "4338:24:11"
                },
                {
                  "expression": {
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 158,
                      "name": "circleTokenMessengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "4372:27:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 159,
                      "name": "_circleTokenMessengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "4402:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4372:58:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "4372:58:11"
                },
                {
                  "expression": {
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 162,
                      "name": "circleMessageTansmiterAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "4440:29:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 163,
                      "name": "_circleMessageTansmiterAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 126,
                      "src": "4472:30:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4440:62:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "4440:62:11"
                },
                {
                  "expression": {
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 166,
                      "name": "POOL_ADDRESS_PROVIDER_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "4512:29:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 167,
                      "name": "_POOL_ADDRESS_PROVIDER_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 128,
                      "src": "4544:30:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4512:62:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "4512:62:11"
                },
                {
                  "expression": {
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 170,
                      "name": "MASTER_CONTRACT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "4584:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 171,
                      "name": "_MASTER_CONTRACT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "4602:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4584:34:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "4584:34:11"
                },
                {
                  "expression": {
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 174,
                      "name": "POOL_DATA_PROVIDER_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "4628:26:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 175,
                      "name": "_POOL_DATA_PROVIDER_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "4657:27:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4628:56:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "4628:56:11"
                }
              ]
            },
            "documentation": {
              "id": 114,
              "nodeType": "StructuredDocumentation",
              "src": "3084:748:11",
              "text": "@notice Constructor initializes the contract with the router address.\n @param _router The address of the router contract (CCIP chainlink router).\n @param _link The address of the LINK token contract.\n @param _tokenUSDC The address of the Circle USDC token contract.\n @param _tokenAUSDC The address of the ausdc provided by aave when deposit is done.\n @param _circleTokenMessengerAddress The address of the Circle token messenger contract.\n @param _POOL_ADDRESS_PROVIDER_ADDRESS The address of the Pool address provider contract (aave).\n @param _POOL_DATA_PROVIDER_ADDRESS The address of the Pool data provider contract (aave).\n @param _MASTER_CONTRACT The address of the master contract."
            },
            "id": 179,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 135,
                    "name": "_router",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 116,
                    "src": "4194:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 136,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 134,
                  "name": "CCIPReceiver",
                  "nameLocations": [
                    "4181:12:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1264,
                  "src": "4181:12:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "4181:21:11"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "_router",
                  "nameLocation": "3866:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "3858:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3858:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "_link",
                  "nameLocation": "3891:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "3883:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3883:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "_tokenUSDC",
                  "nameLocation": "3914:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "3906:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3906:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "_tokenAUSDC",
                  "nameLocation": "3942:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "3934:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3934:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "_circleTokenMessengerAddress",
                  "nameLocation": "3971:28:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "3963:36:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3963:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "_circleMessageTansmiterAddress",
                  "nameLocation": "4017:30:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "4009:38:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4009:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "_POOL_ADDRESS_PROVIDER_ADDRESS",
                  "nameLocation": "4065:30:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "4057:38:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4057:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "_POOL_DATA_PROVIDER_ADDRESS",
                  "nameLocation": "4113:27:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "4105:35:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4105:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "_MASTER_CONTRACT",
                  "nameLocation": "4158:16:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "4150:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4150:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3848:332:11"
            },
            "returnParameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4203:0:11"
            },
            "scope": 1066,
            "src": "3837:854:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 191,
              "nodeType": "Block",
              "src": "4794:55:11",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 187,
                      "name": "userNoncesDeposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "4811:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint128_$dyn_storage_$",
                        "typeString": "mapping(address => uint128[] storage ref)"
                      }
                    },
                    "id": 189,
                    "indexExpression": {
                      "id": 188,
                      "name": "userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 181,
                      "src": "4830:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4811:31:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint128_$dyn_storage",
                      "typeString": "uint128[] storage ref"
                    }
                  },
                  "functionReturnParameters": 186,
                  "id": 190,
                  "nodeType": "Return",
                  "src": "4804:38:11"
                }
              ]
            },
            "functionSelector": "fca4df39",
            "id": 192,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserNonces",
            "nameLocation": "4706:13:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 181,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "4737:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "4729:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4729:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4719:35:11"
            },
            "returnParameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 185,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "4776:16:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                    "typeString": "uint128[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 183,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "4776:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "id": 184,
                    "nodeType": "ArrayTypeName",
                    "src": "4776:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint128_$dyn_storage_ptr",
                      "typeString": "uint128[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4775:18:11"
            },
            "scope": 1066,
            "src": "4697:152:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 213,
              "nodeType": "Block",
              "src": "4972:99:11",
              "statements": [
                {
                  "assignments": [
                    201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 201,
                      "mutability": "mutable",
                      "name": "command",
                      "nameLocation": "4988:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 213,
                      "src": "4982:13:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 200,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4982:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 210,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 204,
                          "name": "_any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 195,
                          "src": "5009:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$1336_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5025:4:11",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1331,
                        "src": "5009:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5032:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 206,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "5032:5:11",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 208,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5031:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        }
                      ],
                      "expression": {
                        "id": 202,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4998:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5002:6:11",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "4998:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4998:41:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4982:57:11"
                },
                {
                  "expression": {
                    "id": 211,
                    "name": "command",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 201,
                    "src": "5057:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 199,
                  "id": 212,
                  "nodeType": "Return",
                  "src": "5050:14:11"
                }
              ]
            },
            "id": 214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_internalCommandRouter",
            "nameLocation": "4864:22:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 195,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "4925:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "4896:44:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1336_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 194,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 193,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "4896:6:11",
                        "4903:14:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1336,
                      "src": "4896:21:11"
                    },
                    "referencedDeclaration": 1336,
                    "src": "4896:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1336_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4886:60:11"
            },
            "returnParameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "4965:5:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4965:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4964:7:11"
            },
            "scope": 1066,
            "src": "4855:216:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 311,
              "nodeType": "Block",
              "src": "5150:958:11",
              "statements": [
                {
                  "expression": {
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 220,
                      "name": "isNodeActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "5189:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5204:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5189:20:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "5189:20:11"
                },
                {
                  "assignments": [
                    null,
                    225,
                    227,
                    229
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 225,
                      "mutability": "mutable",
                      "name": "newNodeChainId",
                      "nameLocation": "5254:14:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 311,
                      "src": "5247:21:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 224,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5247:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 227,
                      "mutability": "mutable",
                      "name": "newNodeChainIdCCIP",
                      "nameLocation": "5289:18:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 311,
                      "src": "5282:25:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 226,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "5282:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 229,
                      "mutability": "mutable",
                      "name": "newNodeReceiver",
                      "nameLocation": "5329:15:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 311,
                      "src": "5321:23:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 228,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5321:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 244,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 232,
                          "name": "_any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 217,
                          "src": "5368:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$1336_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 233,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5384:4:11",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1331,
                        "src": "5368:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5391:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 234,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "5391:5:11",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5398:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 236,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5398:6:11",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5406:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
                              "id": 238,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "5406:6:11",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5414:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 240,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5414:7:11",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 242,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5390:32:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_uint32_$_$_t_type$_t_uint64_$_$_t_type$_t_bytes32_$_$",
                          "typeString": "tuple(type(uint8),type(uint32),type(uint64),type(bytes32))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_uint32_$_$_t_type$_t_uint64_$_$_t_type$_t_bytes32_$_$",
                          "typeString": "tuple(type(uint8),type(uint32),type(uint64),type(bytes32))"
                        }
                      ],
                      "expression": {
                        "id": 230,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5357:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5361:6:11",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "5357:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5357:66:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint32_$_t_uint64_$_t_bytes32_$",
                      "typeString": "tuple(uint8,uint32,uint64,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5219:204:11"
                },
                {
                  "assignments": [
                    246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 246,
                      "mutability": "mutable",
                      "name": "balanceAusdcNode",
                      "nameLocation": "5442:16:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 311,
                      "src": "5434:24:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 245,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5434:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 256,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 253,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5498:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Slave_$1066",
                              "typeString": "contract Slave"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Slave_$1066",
                              "typeString": "contract Slave"
                            }
                          ],
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5490:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 251,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5490:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5490:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 248,
                            "name": "tokenAUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "5468:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 247,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1144,
                          "src": "5461:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1144_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5461:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1144",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5480:9:11",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1101,
                      "src": "5461:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5461:43:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5434:70:11"
                },
                {
                  "assignments": [
                    258
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 258,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "5522:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 311,
                      "src": "5514:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 257,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5514:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 261,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 259,
                      "name": "_getPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 673,
                      "src": "5529:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5529:10:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5514:25:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 266,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 258,
                        "src": "5577:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 267,
                        "name": "balanceAusdcNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 246,
                        "src": "5583:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 263,
                            "name": "tokenAUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "5557:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 262,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1144,
                          "src": "5550:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1144_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5550:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1144",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5569:7:11",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1131,
                      "src": "5550:26:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5550:50:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "5550:50:11"
                },
                {
                  "assignments": [
                    271
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 271,
                      "mutability": "mutable",
                      "name": "usdcwithdrawn",
                      "nameLocation": "5619:13:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 311,
                      "src": "5611:21:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 270,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5611:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 274,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 272,
                      "name": "_assetsAllocationWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "5635:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5635:27:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5611:51:11"
                },
                {
                  "expression": {
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 275,
                      "name": "testerBalanceUsdc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "5673:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 276,
                      "name": "usdcwithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "5693:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5673:33:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 278,
                  "nodeType": "ExpressionStatement",
                  "src": "5673:33:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 283,
                        "name": "circleTokenMessengerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "5743:27:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 284,
                        "name": "usdcwithdrawn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 271,
                        "src": "5772:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 280,
                            "name": "tokenUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "5724:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 279,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1144,
                          "src": "5717:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1144_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5717:17:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1144",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5735:7:11",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1131,
                      "src": "5717:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5717:69:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "5717:69:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 291,
                        "name": "usdcwithdrawn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 271,
                        "src": "5870:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 292,
                        "name": "newNodeChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 225,
                        "src": "5897:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 293,
                        "name": "newNodeReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "5925:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 294,
                        "name": "tokenUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "5954:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 288,
                            "name": "circleTokenMessengerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "5813:27:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 287,
                          "name": "ITokenMessenger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2374,
                          "src": "5797:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ITokenMessenger_$2374_$",
                            "typeString": "type(contract ITokenMessenger)"
                          }
                        },
                        "id": 289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5797:44:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITokenMessenger_$2374",
                          "typeString": "contract ITokenMessenger"
                        }
                      },
                      "id": 290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5842:14:11",
                      "memberName": "depositForBurn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2373,
                      "src": "5797:59:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint32_$_t_bytes32_$_t_address_$returns$_t_uint64_$",
                        "typeString": "function (uint256,uint32,bytes32,address) external returns (uint64)"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5797:176:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "5797:176:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 298,
                        "name": "newNodeChainIdCCIP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "6017:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 305,
                                    "name": "newNodeReceiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 229,
                                    "src": "6073:15:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 304,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6065:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 303,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6065:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 306,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6065:24:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6057:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": {
                                "id": 301,
                                "name": "uint160",
                                "nodeType": "ElementaryTypeName",
                                "src": "6057:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6057:33:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6049:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 299,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6049:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6049:42:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 297,
                      "name": "_sendSupplyAndNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 339,
                      "src": "5984:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$returns$__$",
                        "typeString": "function (uint64,address)"
                      }
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5984:117:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "5984:117:11"
                }
              ]
            },
            "functionSelector": "e346fdfa",
            "id": 312,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "warpAssets",
            "nameLocation": "5086:10:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 217,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "5126:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 312,
                  "src": "5097:44:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1336_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 216,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 215,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "5097:6:11",
                        "5104:14:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1336,
                      "src": "5097:21:11"
                    },
                    "referencedDeclaration": 1336,
                    "src": "5097:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1336_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5096:46:11"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5150:0:11"
            },
            "scope": 1066,
            "src": "5077:1031:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 338,
              "nodeType": "Block",
              "src": "6223:237:11",
              "statements": [
                {
                  "assignments": [
                    320
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 320,
                      "mutability": "mutable",
                      "name": "command",
                      "nameLocation": "6239:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 338,
                      "src": "6233:13:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 319,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "6233:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 322,
                  "initialValue": {
                    "hexValue": "32",
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6249:1:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6233:17:11"
                },
                {
                  "assignments": [
                    324
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 324,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "6273:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 338,
                      "src": "6260:17:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 323,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6260:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 331,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 327,
                        "name": "command",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "6304:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 328,
                        "name": "aWrpTotalSupplySlaveView",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "6325:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 329,
                        "name": "mainNonceDeposits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "6363:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 325,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6280:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6284:6:11",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "6280:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6280:110:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6260:130:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 333,
                        "name": "chainCCIPid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 314,
                        "src": "6414:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 334,
                        "name": "nodeAddressReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 316,
                        "src": "6427:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 335,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 324,
                        "src": "6448:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 332,
                      "name": "_sendMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 657,
                      "src": "6401:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (uint64,address,bytes memory) returns (bytes32)"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6401:52:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "6401:52:11"
                }
              ]
            },
            "id": 339,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sendSupplyAndNonce",
            "nameLocation": "6123:19:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 314,
                  "mutability": "mutable",
                  "name": "chainCCIPid",
                  "nameLocation": "6159:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "6152:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 313,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6152:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 316,
                  "mutability": "mutable",
                  "name": "nodeAddressReceiver",
                  "nameLocation": "6188:19:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "6180:27:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6180:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6142:71:11"
            },
            "returnParameters": {
              "id": 318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6223:0:11"
            },
            "scope": 1066,
            "src": "6114:346:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 378,
              "nodeType": "Block",
              "src": "6565:359:11",
              "statements": [
                {
                  "expression": {
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 345,
                      "name": "isNodeActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "6602:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6617:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6602:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "6602:19:11"
                },
                {
                  "assignments": [
                    null,
                    350,
                    352
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 350,
                      "mutability": "mutable",
                      "name": "_aWrpTotalSupplySlaveView",
                      "nameLocation": "6643:25:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 378,
                      "src": "6635:33:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 349,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6635:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 352,
                      "mutability": "mutable",
                      "name": "_mainNonceDeposits",
                      "nameLocation": "6678:18:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 378,
                      "src": "6670:26:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 351,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6670:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 365,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 355,
                          "name": "_any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 342,
                          "src": "6724:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$1336_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 356,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6740:4:11",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1331,
                        "src": "6724:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6747:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 357,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "6747:5:11",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6754:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 359,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6754:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6763:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint128_$",
                              "typeString": "type(uint128)"
                            },
                            "typeName": {
                              "id": 361,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "6763:7:11",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 363,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6746:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_uint256_$_$_t_type$_t_uint128_$_$",
                          "typeString": "tuple(type(uint8),type(uint256),type(uint128))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_uint256_$_$_t_type$_t_uint128_$_$",
                          "typeString": "tuple(type(uint8),type(uint256),type(uint128))"
                        }
                      ],
                      "expression": {
                        "id": 353,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6700:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6717:6:11",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "6700:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6700:72:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$_t_uint128_$",
                      "typeString": "tuple(uint8,uint256,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6632:140:11"
                },
                {
                  "expression": {
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 366,
                      "name": "aWrpTotalSupplySlaveView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "6783:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 367,
                      "name": "_aWrpTotalSupplySlaveView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 350,
                      "src": "6810:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6783:52:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "6783:52:11"
                },
                {
                  "expression": {
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 370,
                      "name": "mainNonceDeposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "6845:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 371,
                      "name": "_mainNonceDeposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "6865:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "6845:38:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "6845:38:11"
                },
                {
                  "expression": {
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 374,
                      "name": "newNonceAndSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "6893:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6913:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6893:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "6893:24:11"
                }
              ]
            },
            "functionSelector": "bd193173",
            "id": 379,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTotalSupplyAndNonce",
            "nameLocation": "6475:22:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 342,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "6536:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "6507:44:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1336_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 341,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 340,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "6507:6:11",
                        "6514:14:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1336,
                      "src": "6507:21:11"
                    },
                    "referencedDeclaration": 1336,
                    "src": "6507:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1336_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6497:60:11"
            },
            "returnParameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6565:0:11"
            },
            "scope": 1066,
            "src": "6466:458:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 463,
              "nodeType": "Block",
              "src": "7001:573:11",
              "statements": [
                {
                  "assignments": [
                    null,
                    386,
                    388
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 386,
                      "mutability": "mutable",
                      "name": "transferToUser",
                      "nameLocation": "7022:14:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 463,
                      "src": "7014:22:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 385,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7014:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 388,
                      "mutability": "mutable",
                      "name": "shares",
                      "nameLocation": "7046:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 463,
                      "src": "7038:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 387,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7038:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 401,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 391,
                          "name": "_any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 382,
                          "src": "7080:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$1336_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7096:4:11",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1331,
                        "src": "7080:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7115:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 393,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "7115:5:11",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7122:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 395,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7122:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7131:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 397,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7131:7:11",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 399,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7114:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(address),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(address),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 389,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7056:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "7060:6:11",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "7056:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7056:93:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_address_payable_$_t_uint256_$",
                      "typeString": "tuple(uint8,address payable,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7011:138:11"
                },
                {
                  "assignments": [
                    403
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 403,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "7168:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 463,
                      "src": "7160:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 402,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7160:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 406,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 404,
                      "name": "_getPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 673,
                      "src": "7175:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7175:10:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7160:25:11"
                },
                {
                  "assignments": [
                    408
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 408,
                      "mutability": "mutable",
                      "name": "totalAusdc",
                      "nameLocation": "7203:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 463,
                      "src": "7195:18:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 407,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7195:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 418,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 415,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7253:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Slave_$1066",
                              "typeString": "contract Slave"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Slave_$1066",
                              "typeString": "contract Slave"
                            }
                          ],
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7245:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 413,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7245:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7245:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 410,
                            "name": "tokenAUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "7223:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 409,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1144,
                          "src": "7216:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1144_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7216:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1144",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7235:9:11",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1101,
                      "src": "7216:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7216:43:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7195:64:11"
                },
                {
                  "assignments": [
                    421
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 421,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "7302:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 463,
                      "src": "7294:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 420,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7294:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "TESTING ///",
                  "id": 433,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 426,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 422,
                                  "name": "shares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 388,
                                  "src": "7313:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "id": 425,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 423,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7322:2:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "3138",
                                    "id": 424,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7328:2:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_18_by_1",
                                      "typeString": "int_const 18"
                                    },
                                    "value": "18"
                                  },
                                  "src": "7322:8:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                },
                                "src": "7313:17:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 427,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7312:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 428,
                            "name": "totalAusdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 408,
                            "src": "7334:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7312:32:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 430,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7311:34:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 431,
                      "name": "aWrpTotalSupplySlaveView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "7360:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7311:73:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7294:90:11"
                },
                {
                  "expression": {
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 434,
                      "name": "aWrpTotalSupplySlaveView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "7395:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 435,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 388,
                      "src": "7423:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7395:34:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "7395:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 442,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "7467:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 443,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "7473:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7482:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7488:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "7482:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "7473:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 439,
                            "name": "tokenAUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "7447:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 438,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1144,
                          "src": "7440:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1144_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7440:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1144",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7459:7:11",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1131,
                      "src": "7440:26:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7440:51:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "7440:51:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 454,
                        "name": "tokenUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "7522:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 455,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "7533:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7542:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7548:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "7542:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "7533:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 460,
                        "name": "transferToUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "7552:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 451,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 403,
                            "src": "7507:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 450,
                          "name": "IPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2134,
                          "src": "7501:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPool_$2134_$",
                            "typeString": "type(contract IPool)"
                          }
                        },
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7501:11:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$2134",
                          "typeString": "contract IPool"
                        }
                      },
                      "id": 453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7513:8:11",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1751,
                      "src": "7501:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7501:66:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 462,
                  "nodeType": "ExpressionStatement",
                  "src": "7501:66:11"
                }
              ]
            },
            "functionSelector": "e9644410",
            "id": 464,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "6939:8:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 382,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "6977:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 464,
                  "src": "6948:44:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1336_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 381,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 380,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "6948:6:11",
                        "6955:14:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1336,
                      "src": "6948:21:11"
                    },
                    "referencedDeclaration": 1336,
                    "src": "6948:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1336_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6947:46:11"
            },
            "returnParameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7001:0:11"
            },
            "scope": 1066,
            "src": "6930:644:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 503,
              "nodeType": "Block",
              "src": "7708:216:11",
              "statements": [
                {
                  "assignments": [
                    472
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 472,
                      "mutability": "mutable",
                      "name": "totalAusdc",
                      "nameLocation": "7726:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 503,
                      "src": "7718:18:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 471,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7718:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 482,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 479,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7776:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Slave_$1066",
                              "typeString": "contract Slave"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Slave_$1066",
                              "typeString": "contract Slave"
                            }
                          ],
                          "id": 478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7768:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 477,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7768:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7768:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 474,
                            "name": "tokenAUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "7746:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 473,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1144,
                          "src": "7739:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1144_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7739:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1144",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7758:9:11",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1101,
                      "src": "7739:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7739:43:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7718:64:11"
                },
                {
                  "assignments": [
                    484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 484,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "7800:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 503,
                      "src": "7792:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 483,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7792:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 496,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 489,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 485,
                                  "name": "shares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 466,
                                  "src": "7811:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "id": 488,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 486,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7820:2:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "3138",
                                    "id": 487,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7826:2:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_18_by_1",
                                      "typeString": "int_const 18"
                                    },
                                    "value": "18"
                                  },
                                  "src": "7820:8:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                },
                                "src": "7811:17:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 490,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7810:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 491,
                            "name": "totalAusdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 472,
                            "src": "7832:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7810:32:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 493,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7809:34:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 494,
                      "name": "aWrpTotalSupplySlaveView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "7858:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7809:73:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7792:90:11"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 497,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "7900:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "id": 500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7909:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "3138",
                        "id": 499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7915:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "src": "7909:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "7900:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 470,
                  "id": 502,
                  "nodeType": "Return",
                  "src": "7893:24:11"
                }
              ]
            },
            "functionSelector": "98b3c1f8",
            "id": 504,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateSharesValue",
            "nameLocation": "7625:20:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 466,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "7663:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 504,
                  "src": "7655:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7655:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7645:30:11"
            },
            "returnParameters": {
              "id": 470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 469,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 504,
                  "src": "7699:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7699:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7698:9:11"
            },
            "scope": 1066,
            "src": "7616:308:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1229
            ],
            "body": {
              "id": 550,
              "nodeType": "Block",
              "src": "8063:834:11",
              "statements": [
                {
                  "assignments": [
                    513
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 513,
                      "mutability": "mutable",
                      "name": "command",
                      "nameLocation": "8350:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 550,
                      "src": "8344:13:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 512,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "8344:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 517,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 515,
                        "name": "any2EvmMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 508,
                        "src": "8383:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Any2EVMMessage_$1336_memory_ptr",
                          "typeString": "struct Client.Any2EVMMessage memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Any2EVMMessage_$1336_memory_ptr",
                          "typeString": "struct Client.Any2EVMMessage memory"
                        }
                      ],
                      "id": 514,
                      "name": "_internalCommandRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "8360:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1336_memory_ptr_$returns$_t_uint8_$",
                        "typeString": "function (struct Client.Any2EVMMessage memory) returns (uint8)"
                      }
                    },
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8360:38:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8344:54:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 518,
                      "name": "command",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 513,
                      "src": "8413:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8424:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8413:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 526,
                        "name": "command",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 513,
                        "src": "8488:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8499:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "8488:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 534,
                          "name": "command",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 513,
                          "src": "8561:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8572:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "8561:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 546,
                        "nodeType": "Block",
                        "src": "8644:62:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "696e76616c696420636f6d6d616e642066726f6d204d6173746572",
                                  "id": 543,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8665:29:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_6df3aa59066d22831eb610799a4ade3e09bd5f27f6ec26cfaed9799158935096",
                                    "typeString": "literal_string \"invalid command from Master\""
                                  },
                                  "value": "invalid command from Master"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_6df3aa59066d22831eb610799a4ade3e09bd5f27f6ec26cfaed9799158935096",
                                    "typeString": "literal_string \"invalid command from Master\""
                                  }
                                ],
                                "id": 542,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -19,
                                  -19
                                ],
                                "referencedDeclaration": -19,
                                "src": "8658:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8658:37:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 545,
                            "nodeType": "ExpressionStatement",
                            "src": "8658:37:11"
                          }
                        ]
                      },
                      "id": 547,
                      "nodeType": "IfStatement",
                      "src": "8557:149:11",
                      "trueBody": {
                        "id": 541,
                        "nodeType": "Block",
                        "src": "8575:63:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 538,
                                  "name": "any2EvmMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 508,
                                  "src": "8612:14:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1336_memory_ptr",
                                    "typeString": "struct Client.Any2EVMMessage memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1336_memory_ptr",
                                    "typeString": "struct Client.Any2EVMMessage memory"
                                  }
                                ],
                                "id": 537,
                                "name": "setTotalSupplyAndNonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 379,
                                "src": "8589:22:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1336_memory_ptr_$returns$__$",
                                  "typeString": "function (struct Client.Any2EVMMessage memory)"
                                }
                              },
                              "id": 539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8589:38:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 540,
                            "nodeType": "ExpressionStatement",
                            "src": "8589:38:11"
                          }
                        ]
                      }
                    },
                    "id": 548,
                    "nodeType": "IfStatement",
                    "src": "8484:222:11",
                    "trueBody": {
                      "id": 533,
                      "nodeType": "Block",
                      "src": "8502:49:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 530,
                                "name": "any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 508,
                                "src": "8525:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1336_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1336_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              ],
                              "id": 529,
                              "name": "withdraw",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 464,
                              "src": "8516:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1336_memory_ptr_$returns$__$",
                                "typeString": "function (struct Client.Any2EVMMessage memory)"
                              }
                            },
                            "id": 531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8516:24:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 532,
                          "nodeType": "ExpressionStatement",
                          "src": "8516:24:11"
                        }
                      ]
                    }
                  },
                  "id": 549,
                  "nodeType": "IfStatement",
                  "src": "8409:297:11",
                  "trueBody": {
                    "id": 525,
                    "nodeType": "Block",
                    "src": "8427:51:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 522,
                              "name": "any2EvmMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 508,
                              "src": "8452:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Any2EVMMessage_$1336_memory_ptr",
                                "typeString": "struct Client.Any2EVMMessage memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Any2EVMMessage_$1336_memory_ptr",
                                "typeString": "struct Client.Any2EVMMessage memory"
                              }
                            ],
                            "id": 521,
                            "name": "warpAssets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 312,
                            "src": "8441:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1336_memory_ptr_$returns$__$",
                              "typeString": "function (struct Client.Any2EVMMessage memory)"
                            }
                          },
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8441:26:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 524,
                        "nodeType": "ExpressionStatement",
                        "src": "8441:26:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 505,
              "nodeType": "StructuredDocumentation",
              "src": "7930:29:11",
              "text": "handle a received message"
            },
            "id": 551,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_ccipReceive",
            "nameLocation": "7973:12:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 510,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8054:8:11"
            },
            "parameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 508,
                  "mutability": "mutable",
                  "name": "any2EvmMessage",
                  "nameLocation": "8024:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 551,
                  "src": "7995:43:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1336_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 507,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 506,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "7995:6:11",
                        "8002:14:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1336,
                      "src": "7995:21:11"
                    },
                    "referencedDeclaration": 1336,
                    "src": "7995:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1336_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7985:59:11"
            },
            "returnParameters": {
              "id": 511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8063:0:11"
            },
            "scope": 1066,
            "src": "7964:933:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 656,
              "nodeType": "Block",
              "src": "9063:1681:11",
              "statements": [
                {
                  "assignments": [
                    566
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 566,
                      "mutability": "mutable",
                      "name": "evm2AnyMessage",
                      "nameLocation": "9102:14:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 656,
                      "src": "9073:43:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EVM2AnyMessage_$1349_memory_ptr",
                        "typeString": "struct Client.EVM2AnyMessage"
                      },
                      "typeName": {
                        "id": 565,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 564,
                          "name": "Client.EVM2AnyMessage",
                          "nameLocations": [
                            "9073:6:11",
                            "9080:14:11"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1349,
                          "src": "9073:21:11"
                        },
                        "referencedDeclaration": 1349,
                        "src": "9073:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$1349_storage_ptr",
                          "typeString": "struct Client.EVM2AnyMessage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 567,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9073:43:11"
                },
                {
                  "expression": {
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 568,
                      "name": "evm2AnyMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 566,
                      "src": "9241:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EVM2AnyMessage_$1349_memory_ptr",
                        "typeString": "struct Client.EVM2AnyMessage memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 573,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 555,
                              "src": "9315:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 571,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "9304:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "9308:6:11",
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "9304:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9304:20:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "id": 575,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 557,
                          "src": "9376:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9459:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "9431:27:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_EVMTokenAmount_$1323_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct Client.EVMTokenAmount memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 577,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 576,
                                  "name": "Client.EVMTokenAmount",
                                  "nameLocations": [
                                    "9435:6:11",
                                    "9442:14:11"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 1323,
                                  "src": "9435:21:11"
                                },
                                "referencedDeclaration": 1323,
                                "src": "9435:21:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EVMTokenAmount_$1323_storage_ptr",
                                  "typeString": "struct Client.EVMTokenAmount"
                                }
                              },
                              "id": 578,
                              "nodeType": "ArrayTypeName",
                              "src": "9435:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$1323_storage_$dyn_storage_ptr",
                                "typeString": "struct Client.EVMTokenAmount[]"
                              }
                            }
                          },
                          "id": 581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9431:30:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$1323_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Client.EVMTokenAmount memory[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "315f3030305f303030",
                                  "id": 586,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9666:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  },
                                  "value": "1_000_000"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  }
                                ],
                                "expression": {
                                  "id": 584,
                                  "name": "Client",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1371,
                                  "src": "9633:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Client_$1371_$",
                                    "typeString": "type(library Client)"
                                  }
                                },
                                "id": 585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9640:14:11",
                                "memberName": "EVMExtraArgsV1",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1355,
                                "src": "9633:21:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_EVMExtraArgsV1_$1355_storage_ptr_$",
                                  "typeString": "type(struct Client.EVMExtraArgsV1 storage pointer)"
                                }
                              },
                              "id": 587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "9656:8:11"
                              ],
                              "names": [
                                "gasLimit"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "9633:44:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EVMExtraArgsV1_$1355_memory_ptr",
                                "typeString": "struct Client.EVMExtraArgsV1 memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_EVMExtraArgsV1_$1355_memory_ptr",
                                "typeString": "struct Client.EVMExtraArgsV1 memory"
                              }
                            ],
                            "expression": {
                              "id": 582,
                              "name": "Client",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1371,
                              "src": "9537:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Client_$1371_$",
                                "typeString": "type(library Client)"
                              }
                            },
                            "id": 583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9544:12:11",
                            "memberName": "_argsToBytes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1370,
                            "src": "9537:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_EVMExtraArgsV1_$1355_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (struct Client.EVMExtraArgsV1 memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9537:154:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 591,
                              "name": "s_linkToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57,
                              "src": "9803:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$1482",
                                "typeString": "contract LinkTokenInterface"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$1482",
                                "typeString": "contract LinkTokenInterface"
                              }
                            ],
                            "id": 590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9795:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 589,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9795:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9795:20:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$1323_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Client.EVMTokenAmount memory[] memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 569,
                          "name": "Client",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1371,
                          "src": "9258:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Client_$1371_$",
                            "typeString": "type(library Client)"
                          }
                        },
                        "id": 570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9265:14:11",
                        "memberName": "EVM2AnyMessage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1349,
                        "src": "9258:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_EVM2AnyMessage_$1349_storage_ptr_$",
                          "typeString": "type(struct Client.EVM2AnyMessage storage pointer)"
                        }
                      },
                      "id": 593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "9294:8:11",
                        "9370:4:11",
                        "9417:12:11",
                        "9526:9:11",
                        "9785:8:11"
                      ],
                      "names": [
                        "receiver",
                        "data",
                        "tokenAmounts",
                        "extraArgs",
                        "feeToken"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "9258:568:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EVM2AnyMessage_$1349_memory_ptr",
                        "typeString": "struct Client.EVM2AnyMessage memory"
                      }
                    },
                    "src": "9241:585:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EVM2AnyMessage_$1349_memory_ptr",
                      "typeString": "struct Client.EVM2AnyMessage memory"
                    }
                  },
                  "id": 595,
                  "nodeType": "ExpressionStatement",
                  "src": "9241:585:11"
                },
                {
                  "assignments": [
                    597
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 597,
                      "mutability": "mutable",
                      "name": "fees",
                      "nameLocation": "9897:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 656,
                      "src": "9889:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 596,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9889:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 603,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 600,
                        "name": "destinationChainSelector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "9933:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 601,
                        "name": "evm2AnyMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 566,
                        "src": "9971:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$1349_memory_ptr",
                          "typeString": "struct Client.EVM2AnyMessage memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$1349_memory_ptr",
                          "typeString": "struct Client.EVM2AnyMessage memory"
                        }
                      ],
                      "expression": {
                        "id": 598,
                        "name": "s_router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "9904:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRouterClient_$1316",
                          "typeString": "contract IRouterClient"
                        }
                      },
                      "id": 599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9913:6:11",
                      "memberName": "getFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1304,
                      "src": "9904:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint64_$_t_struct$_EVM2AnyMessage_$1349_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint64,struct Client.EVM2AnyMessage memory) view external returns (uint256)"
                      }
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9904:91:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9889:106:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 604,
                      "name": "fees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 597,
                      "src": "10010:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 609,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "10047:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Slave_$1066",
                                "typeString": "contract Slave"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Slave_$1066",
                                "typeString": "contract Slave"
                              }
                            ],
                            "id": 608,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10039:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 607,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10039:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10039:13:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 605,
                          "name": "s_linkToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "10017:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LinkTokenInterface_$1482",
                            "typeString": "contract LinkTokenInterface"
                          }
                        },
                        "id": 606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10029:9:11",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1414,
                        "src": "10017:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10017:36:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10010:43:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 624,
                  "nodeType": "IfStatement",
                  "src": "10006:128:11",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 618,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10121:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Slave_$1066",
                                    "typeString": "contract Slave"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Slave_$1066",
                                    "typeString": "contract Slave"
                                  }
                                ],
                                "id": 617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10113:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 616,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10113:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10113:13:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 614,
                              "name": "s_linkToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57,
                              "src": "10091:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$1482",
                                "typeString": "contract LinkTokenInterface"
                              }
                            },
                            "id": 615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10103:9:11",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1414,
                            "src": "10091:21:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10091:36:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 621,
                          "name": "fees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 597,
                          "src": "10129:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 613,
                        "name": "NotEnoughBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "10074:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256) pure"
                        }
                      },
                      "id": 622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10074:60:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 623,
                    "nodeType": "RevertStatement",
                    "src": "10067:67:11"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 630,
                            "name": "s_router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "10280:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRouterClient_$1316",
                              "typeString": "contract IRouterClient"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IRouterClient_$1316",
                              "typeString": "contract IRouterClient"
                            }
                          ],
                          "id": 629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10272:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 628,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10272:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10272:17:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 632,
                        "name": "fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 597,
                        "src": "10291:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 625,
                        "name": "s_linkToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "10252:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkTokenInterface_$1482",
                          "typeString": "contract LinkTokenInterface"
                        }
                      },
                      "id": 627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10264:7:11",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1407,
                      "src": "10252:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10252:44:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 634,
                  "nodeType": "ExpressionStatement",
                  "src": "10252:44:11"
                },
                {
                  "expression": {
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 635,
                      "name": "messageId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 560,
                      "src": "10388:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 638,
                          "name": "destinationChainSelector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 553,
                          "src": "10418:24:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 639,
                          "name": "evm2AnyMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 566,
                          "src": "10444:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EVM2AnyMessage_$1349_memory_ptr",
                            "typeString": "struct Client.EVM2AnyMessage memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_struct$_EVM2AnyMessage_$1349_memory_ptr",
                            "typeString": "struct Client.EVM2AnyMessage memory"
                          }
                        ],
                        "expression": {
                          "id": 636,
                          "name": "s_router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "10400:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRouterClient_$1316",
                            "typeString": "contract IRouterClient"
                          }
                        },
                        "id": 637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10409:8:11",
                        "memberName": "ccipSend",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1315,
                        "src": "10400:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint64_$_t_struct$_EVM2AnyMessage_$1349_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (uint64,struct Client.EVM2AnyMessage memory) payable external returns (bytes32)"
                        }
                      },
                      "id": 640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10400:59:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "10388:71:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 642,
                  "nodeType": "ExpressionStatement",
                  "src": "10388:71:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 644,
                        "name": "messageId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "10546:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 645,
                        "name": "destinationChainSelector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "10569:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 646,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 555,
                        "src": "10607:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 649,
                            "name": "s_linkToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "10637:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$1482",
                              "typeString": "contract LinkTokenInterface"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$1482",
                              "typeString": "contract LinkTokenInterface"
                            }
                          ],
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10629:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 647,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10629:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10629:20:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 651,
                        "name": "fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 597,
                        "src": "10663:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 643,
                      "name": "MessageSent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "10521:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint64_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint64,address,address,uint256)"
                      }
                    },
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10521:156:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 653,
                  "nodeType": "EmitStatement",
                  "src": "10516:161:11"
                },
                {
                  "expression": {
                    "id": 654,
                    "name": "messageId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 560,
                    "src": "10728:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 561,
                  "id": 655,
                  "nodeType": "Return",
                  "src": "10721:16:11"
                }
              ]
            },
            "id": 657,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sendMessage",
            "nameLocation": "8912:12:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 553,
                  "mutability": "mutable",
                  "name": "destinationChainSelector",
                  "nameLocation": "8941:24:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "8934:31:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 552,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "8934:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 555,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "8983:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "8975:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8975:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 557,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "9014:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "9001:18:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 556,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9001:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8924:101:11"
            },
            "returnParameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 560,
                  "mutability": "mutable",
                  "name": "messageId",
                  "nameLocation": "9052:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "9044:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 559,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9044:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9043:19:11"
            },
            "scope": 1066,
            "src": "8903:1841:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 672,
              "nodeType": "Block",
              "src": "10802:130:11",
              "statements": [
                {
                  "assignments": [
                    663
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 663,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "10820:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 672,
                      "src": "10812:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 662,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10812:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 669,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 665,
                            "name": "POOL_ADDRESS_PROVIDER_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "10850:29:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 664,
                          "name": "IPoolAddressesProvider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2629,
                          "src": "10827:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPoolAddressesProvider_$2629_$",
                            "typeString": "type(contract IPoolAddressesProvider)"
                          }
                        },
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10827:53:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolAddressesProvider_$2629",
                          "typeString": "contract IPoolAddressesProvider"
                        }
                      },
                      "id": 667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10894:7:11",
                      "memberName": "getPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2550,
                      "src": "10827:74:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10827:76:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10812:91:11"
                },
                {
                  "expression": {
                    "id": 670,
                    "name": "pool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 663,
                    "src": "10921:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 661,
                  "id": 671,
                  "nodeType": "Return",
                  "src": "10914:11:11"
                }
              ]
            },
            "id": 673,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getPool",
            "nameLocation": "10759:8:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10767:2:11"
            },
            "returnParameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 660,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 673,
                  "src": "10793:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 659,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10793:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10792:9:11"
            },
            "scope": 1066,
            "src": "10750:182:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 814,
              "nodeType": "Block",
              "src": "11055:1130:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 683,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11117:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11121:6:11",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11117:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 687,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11137:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Slave_$1066",
                                  "typeString": "contract Slave"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Slave_$1066",
                                  "typeString": "contract Slave"
                                }
                              ],
                              "id": 686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11129:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 685,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11129:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11129:13:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 689,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 675,
                            "src": "11144:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 680,
                                "name": "tokenUSDC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59,
                                "src": "11093:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 679,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1144,
                              "src": "11086:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1144_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11086:17:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1144",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11104:12:11",
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1143,
                          "src": "11086:30:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11086:65:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207472616e7366657220616d6f756e74",
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11165:27:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d1259a1e8ddf3827cb9faa2b894ba23d9ffcee88f87e034e7aaea602eea29ff",
                          "typeString": "literal_string \"Failed to transfer amount\""
                        },
                        "value": "Failed to transfer amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d1259a1e8ddf3827cb9faa2b894ba23d9ffcee88f87e034e7aaea602eea29ff",
                          "typeString": "literal_string \"Failed to transfer amount\""
                        }
                      ],
                      "id": 678,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11065:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11065:137:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 693,
                  "nodeType": "ExpressionStatement",
                  "src": "11065:137:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 695,
                        "name": "isNodeActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "11220:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6465206973206e6f7420616374697665",
                        "id": 696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11234:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f10dda95a01060367b589884f58383a4ae8851609b8efb1617c7e77a34f8347",
                          "typeString": "literal_string \"Node is not active\""
                        },
                        "value": "Node is not active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f10dda95a01060367b589884f58383a4ae8851609b8efb1617c7e77a34f8347",
                          "typeString": "literal_string \"Node is not active\""
                        }
                      ],
                      "id": 694,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11212:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11212:43:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 698,
                  "nodeType": "ExpressionStatement",
                  "src": "11212:43:11"
                },
                {
                  "assignments": [
                    700
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 700,
                      "mutability": "mutable",
                      "name": "totalAusdcNode",
                      "nameLocation": "11274:14:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 814,
                      "src": "11266:22:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 699,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11266:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 710,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 707,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11328:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Slave_$1066",
                              "typeString": "contract Slave"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Slave_$1066",
                              "typeString": "contract Slave"
                            }
                          ],
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11320:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 705,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11320:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11320:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 702,
                            "name": "tokenAUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "11298:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 701,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1144,
                          "src": "11291:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1144_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11291:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1144",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11310:9:11",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1101,
                      "src": "11291:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11291:43:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11266:68:11"
                },
                {
                  "assignments": [
                    712
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 712,
                      "mutability": "mutable",
                      "name": "shares",
                      "nameLocation": "11353:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 814,
                      "src": "11345:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 711,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11345:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 713,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11345:14:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 714,
                      "name": "aWrpTotalSupplySlaveView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "11373:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11401:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11373:29:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 735,
                    "nodeType": "Block",
                    "src": "11461:86:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 726,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 712,
                            "src": "11475:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 729,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 727,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 675,
                                    "src": "11485:6:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 728,
                                    "name": "aWrpTotalSupplySlaveView",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 85,
                                    "src": "11494:24:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11485:33:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 730,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "11484:35:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 731,
                              "name": "totalAusdcNode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 700,
                              "src": "11522:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11484:52:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11475:61:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 734,
                        "nodeType": "ExpressionStatement",
                        "src": "11475:61:11"
                      }
                    ]
                  },
                  "id": 736,
                  "nodeType": "IfStatement",
                  "src": "11369:178:11",
                  "trueBody": {
                    "id": 725,
                    "nodeType": "Block",
                    "src": "11404:51:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 717,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 712,
                            "src": "11418:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 718,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 675,
                              "src": "11427:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000_by_1",
                                "typeString": "int_const 1000000000000"
                              },
                              "id": 721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11436:2:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3132",
                                "id": 720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11442:2:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_12_by_1",
                                  "typeString": "int_const 12"
                                },
                                "value": "12"
                              },
                              "src": "11436:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000_by_1",
                                "typeString": "int_const 1000000000000"
                              }
                            },
                            "src": "11427:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11418:26:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 724,
                        "nodeType": "ExpressionStatement",
                        "src": "11418:26:11"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    738
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 738,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "11569:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 814,
                      "src": "11556:17:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 737,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "11556:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 750,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11606:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11600:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 741,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "11600:5:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11600:8:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 745,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11622:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11626:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11622:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 747,
                        "name": "mainNonceDeposits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "11646:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 748,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 712,
                        "src": "11677:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 739,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "11576:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "11580:6:11",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "11576:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11576:117:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11556:137:11"
                },
                {
                  "expression": {
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 751,
                          "name": "nonceDataDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "11704:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint128_$_t_struct$_NonceDataDeposits_$92_storage_$",
                            "typeString": "mapping(uint128 => struct Slave.NonceDataDeposits storage ref)"
                          }
                        },
                        "id": 753,
                        "indexExpression": {
                          "id": 752,
                          "name": "mainNonceDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "11722:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11704:36:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NonceDataDeposits_$92_storage",
                          "typeString": "struct Slave.NonceDataDeposits storage ref"
                        }
                      },
                      "id": 754,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11741:11:11",
                      "memberName": "userAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89,
                      "src": "11704:48:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 755,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "11755:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11759:6:11",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "11755:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11704:61:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 758,
                  "nodeType": "ExpressionStatement",
                  "src": "11704:61:11"
                },
                {
                  "expression": {
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 759,
                          "name": "nonceDataDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "11775:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint128_$_t_struct$_NonceDataDeposits_$92_storage_$",
                            "typeString": "mapping(uint128 => struct Slave.NonceDataDeposits storage ref)"
                          }
                        },
                        "id": 761,
                        "indexExpression": {
                          "id": 760,
                          "name": "mainNonceDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "11793:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11775:36:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NonceDataDeposits_$92_storage",
                          "typeString": "struct Slave.NonceDataDeposits storage ref"
                        }
                      },
                      "id": 762,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11812:6:11",
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91,
                      "src": "11775:43:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 763,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 712,
                      "src": "11821:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11775:52:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 765,
                  "nodeType": "ExpressionStatement",
                  "src": "11775:52:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 771,
                        "name": "mainNonceDeposits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "11873:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 766,
                          "name": "userNoncesDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "11837:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint128_$dyn_storage_$",
                            "typeString": "mapping(address => uint128[] storage ref)"
                          }
                        },
                        "id": 769,
                        "indexExpression": {
                          "expression": {
                            "id": 767,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11856:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11860:6:11",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11856:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11837:30:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint128_$dyn_storage",
                          "typeString": "uint128[] storage ref"
                        }
                      },
                      "id": 770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11868:4:11",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "11837:35:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint128_$dyn_storage_ptr_$_t_uint128_$returns$__$attached_to$_t_array$_t_uint128_$dyn_storage_ptr_$",
                        "typeString": "function (uint128[] storage pointer,uint128)"
                      }
                    },
                    "id": 772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11837:54:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 773,
                  "nodeType": "ExpressionStatement",
                  "src": "11837:54:11"
                },
                {
                  "expression": {
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 774,
                      "name": "aWrpTotalSupplySlaveView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "11902:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 775,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 712,
                      "src": "11930:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11902:34:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 777,
                  "nodeType": "ExpressionStatement",
                  "src": "11902:34:11"
                },
                {
                  "expression": {
                    "id": 780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 778,
                      "name": "mainNonceDeposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "11946:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11967:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "11946:22:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 781,
                  "nodeType": "ExpressionStatement",
                  "src": "11946:22:11"
                },
                {
                  "assignments": [
                    783
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 783,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "11986:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 814,
                      "src": "11978:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 782,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11978:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 786,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 784,
                      "name": "_getPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 673,
                      "src": "11993:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11993:10:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11978:25:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 791,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "12039:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 792,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "12045:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 788,
                            "name": "tokenUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "12020:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 787,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1144,
                          "src": "12013:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1144_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12013:17:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1144",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12031:7:11",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1131,
                      "src": "12013:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12013:39:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 794,
                  "nodeType": "ExpressionStatement",
                  "src": "12013:39:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 799,
                        "name": "tokenUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "12082:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 800,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "12093:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 803,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12109:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Slave_$1066",
                              "typeString": "contract Slave"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Slave_$1066",
                              "typeString": "contract Slave"
                            }
                          ],
                          "id": 802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12101:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 801,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12101:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12101:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12116:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 796,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 783,
                            "src": "12068:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 795,
                          "name": "IPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2134,
                          "src": "12062:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPool_$2134_$",
                            "typeString": "type(contract IPool)"
                          }
                        },
                        "id": 797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12062:11:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$2134",
                          "typeString": "contract IPool"
                        }
                      },
                      "id": 798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12074:7:11",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2133,
                      "src": "12062:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint256,address,uint16) external"
                      }
                    },
                    "id": 806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12062:56:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 807,
                  "nodeType": "ExpressionStatement",
                  "src": "12062:56:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 809,
                        "name": "MASTER_CHAIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "12142:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 810,
                        "name": "MASTER_CONTRACT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "12156:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 811,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "12173:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 808,
                      "name": "_sendMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 657,
                      "src": "12129:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (uint64,address,bytes memory) returns (bytes32)"
                      }
                    },
                    "id": 812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12129:49:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 813,
                  "nodeType": "ExpressionStatement",
                  "src": "12129:49:11"
                }
              ]
            },
            "functionSelector": "b6b55f25",
            "id": 815,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "11022:7:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 675,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11038:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 815,
                  "src": "11030:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 674,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11030:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11029:16:11"
            },
            "returnParameters": {
              "id": 677,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11055:0:11"
            },
            "scope": 1066,
            "src": "11013:1172:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 854,
              "nodeType": "Block",
              "src": "12242:371:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 821,
                              "name": "nonceDataDeposits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97,
                              "src": "12273:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint128_$_t_struct$_NonceDataDeposits_$92_storage_$",
                                "typeString": "mapping(uint128 => struct Slave.NonceDataDeposits storage ref)"
                              }
                            },
                            "id": 823,
                            "indexExpression": {
                              "id": 822,
                              "name": "_nonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 817,
                              "src": "12291:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12273:25:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NonceDataDeposits_$92_storage",
                              "typeString": "struct Slave.NonceDataDeposits storage ref"
                            }
                          },
                          "id": 824,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12299:11:11",
                          "memberName": "userAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 89,
                          "src": "12273:37:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 825,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12314:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12318:6:11",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12314:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12273:51:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f74206d617463682077697468206e6f6e63652064617461",
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12338:35:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a42f2729e069d43c398955923a5efc153a8b24307defc14f34b99751fa0c181e",
                          "typeString": "literal_string \"Address not match with nonce data\""
                        },
                        "value": "Address not match with nonce data"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a42f2729e069d43c398955923a5efc153a8b24307defc14f34b99751fa0c181e",
                          "typeString": "literal_string \"Address not match with nonce data\""
                        }
                      ],
                      "id": 820,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12252:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12252:131:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 830,
                  "nodeType": "ExpressionStatement",
                  "src": "12252:131:11"
                },
                {
                  "assignments": [
                    832
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 832,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "12407:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 854,
                      "src": "12394:17:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 831,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "12394:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 847,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12444:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12438:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 835,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "12438:5:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12438:8:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 839,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12460:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12464:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12460:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 841,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "12484:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 842,
                            "name": "nonceDataDeposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "12504:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint128_$_t_struct$_NonceDataDeposits_$92_storage_$",
                              "typeString": "mapping(uint128 => struct Slave.NonceDataDeposits storage ref)"
                            }
                          },
                          "id": 844,
                          "indexExpression": {
                            "id": 843,
                            "name": "_nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 817,
                            "src": "12522:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12504:25:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NonceDataDeposits_$92_storage",
                            "typeString": "struct Slave.NonceDataDeposits storage ref"
                          }
                        },
                        "id": 845,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12530:6:11",
                        "memberName": "shares",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 91,
                        "src": "12504:32:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 833,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "12414:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "12418:6:11",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "12414:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12414:132:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12394:152:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 849,
                        "name": "MASTER_CHAIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "12570:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 850,
                        "name": "MASTER_CONTRACT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "12584:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 851,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 832,
                        "src": "12601:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 848,
                      "name": "_sendMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 657,
                      "src": "12557:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (uint64,address,bytes memory) returns (bytes32)"
                      }
                    },
                    "id": 852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12557:49:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 853,
                  "nodeType": "ExpressionStatement",
                  "src": "12557:49:11"
                }
              ]
            },
            "functionSelector": "28d74cb6",
            "id": 855,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendDepositByNonce",
            "nameLocation": "12200:18:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 817,
                  "mutability": "mutable",
                  "name": "_nonce",
                  "nameLocation": "12227:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 855,
                  "src": "12219:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 816,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "12219:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12218:16:11"
            },
            "returnParameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12242:0:11"
            },
            "scope": 1066,
            "src": "12191:422:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 890,
              "nodeType": "Block",
              "src": "12650:566:11",
              "statements": [
                {
                  "assignments": [
                    null,
                    null,
                    859,
                    null,
                    861,
                    863,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 859,
                      "mutability": "mutable",
                      "name": "totalUsdcSupply",
                      "nameLocation": "12710:15:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 890,
                      "src": "12702:23:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 858,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12702:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    {
                      "constant": false,
                      "id": 861,
                      "mutability": "mutable",
                      "name": "totalUsdcBorrow",
                      "nameLocation": "12761:15:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 890,
                      "src": "12753:23:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 860,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12753:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 863,
                      "mutability": "mutable",
                      "name": "supplyRate",
                      "nameLocation": "12798:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 890,
                      "src": "12790:18:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 862,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12790:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 870,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 868,
                        "name": "tokenUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "12971:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 865,
                            "name": "POOL_DATA_PROVIDER_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "12911:26:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 864,
                          "name": "IPoolDataProvider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2358,
                          "src": "12893:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPoolDataProvider_$2358_$",
                            "typeString": "type(contract IPoolDataProvider)"
                          }
                        },
                        "id": 866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12893:45:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolDataProvider_$2358",
                          "typeString": "contract IPoolDataProvider"
                        }
                      },
                      "id": 867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12939:14:11",
                      "memberName": "getReserveData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2287,
                      "src": "12893:60:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint40_$",
                        "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint40)"
                      }
                    },
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12893:101:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint40_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint40)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12660:334:11"
                },
                {
                  "assignments": [
                    872
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 872,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "13018:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 890,
                      "src": "13005:17:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 871,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "13005:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 883,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13055:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13049:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 875,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "13049:5:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13049:8:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 879,
                        "name": "totalUsdcSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 859,
                        "src": "13071:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 880,
                        "name": "totalUsdcBorrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 861,
                        "src": "13100:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 881,
                        "name": "supplyRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 863,
                        "src": "13129:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 873,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "13025:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "13029:6:11",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "13025:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13025:124:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13005:144:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 885,
                        "name": "MASTER_CHAIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "13173:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 886,
                        "name": "MASTER_CONTRACT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "13187:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 887,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "13204:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 884,
                      "name": "_sendMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 657,
                      "src": "13160:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (uint64,address,bytes memory) returns (bytes32)"
                      }
                    },
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13160:49:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 889,
                  "nodeType": "ExpressionStatement",
                  "src": "13160:49:11"
                }
              ]
            },
            "functionSelector": "d8bba68f",
            "id": 891,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendAaveData",
            "nameLocation": "12628:12:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12640:2:11"
            },
            "returnParameters": {
              "id": 857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12650:0:11"
            },
            "scope": 1066,
            "src": "12619:597:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 912,
              "nodeType": "Block",
              "src": "13333:293:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 903,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 893,
                            "src": "13447:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "id": 904,
                            "name": "attestation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 895,
                            "src": "13472:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 900,
                                "name": "circleMessageTansmiterAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "13384:29:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 899,
                              "name": "IMessageTransmitter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1495,
                              "src": "13364:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IMessageTransmitter_$1495_$",
                                "typeString": "type(contract IMessageTransmitter)"
                              }
                            },
                            "id": 901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13364:50:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMessageTransmitter_$1495",
                              "typeString": "contract IMessageTransmitter"
                            }
                          },
                          "id": 902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13415:14:11",
                          "memberName": "receiveMessage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1494,
                          "src": "13364:65:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes memory,bytes memory) external returns (bool)"
                          }
                        },
                        "id": 905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13364:133:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6661696c65642066726f6d20636972636c652062726964676520494d6573736167655472616e736d69747465722072657475726e65642066616c7365",
                        "id": 906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13511:62:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40060070acd180f720ef0579c2713e8072e6509f86ea4bfce9dfee6db27df7b1",
                          "typeString": "literal_string \"failed from circle bridge IMessageTransmitter returned false\""
                        },
                        "value": "failed from circle bridge IMessageTransmitter returned false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40060070acd180f720ef0579c2713e8072e6509f86ea4bfce9dfee6db27df7b1",
                          "typeString": "literal_string \"failed from circle bridge IMessageTransmitter returned false\""
                        }
                      ],
                      "id": 898,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13343:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13343:240:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 908,
                  "nodeType": "ExpressionStatement",
                  "src": "13343:240:11"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 909,
                      "name": "_assetsAllocationDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 955,
                      "src": "13593:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13593:26:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 911,
                  "nodeType": "ExpressionStatement",
                  "src": "13593:26:11"
                }
              ]
            },
            "functionSelector": "7e96b20c",
            "id": 913,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimAssetsFromBridge",
            "nameLocation": "13230:21:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 893,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "13276:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 913,
                  "src": "13261:22:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 892,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13261:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 895,
                  "mutability": "mutable",
                  "name": "attestation",
                  "nameLocation": "13308:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 913,
                  "src": "13293:26:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 894,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13293:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13251:74:11"
            },
            "returnParameters": {
              "id": 897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13333:0:11"
            },
            "scope": 1066,
            "src": "13221:405:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 954,
              "nodeType": "Block",
              "src": "13677:251:11",
              "statements": [
                {
                  "assignments": [
                    917
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 917,
                      "mutability": "mutable",
                      "name": "blanceUsdcNode",
                      "nameLocation": "13695:14:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 954,
                      "src": "13687:22:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 916,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13687:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 927,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 924,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13748:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Slave_$1066",
                              "typeString": "contract Slave"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Slave_$1066",
                              "typeString": "contract Slave"
                            }
                          ],
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13740:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 922,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13740:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13740:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 919,
                            "name": "tokenUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "13719:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 918,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1144,
                          "src": "13712:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1144_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13712:17:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1144",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13730:9:11",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1101,
                      "src": "13712:27:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13712:42:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13687:67:11"
                },
                {
                  "assignments": [
                    929
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 929,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "13772:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 954,
                      "src": "13764:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 928,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13764:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 932,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 930,
                      "name": "_getPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 673,
                      "src": "13779:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13779:10:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13764:25:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 937,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 929,
                        "src": "13826:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 938,
                        "name": "blanceUsdcNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 917,
                        "src": "13832:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 934,
                            "name": "tokenUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "13807:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 933,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1144,
                          "src": "13800:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1144_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13800:17:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1144",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13818:7:11",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1131,
                      "src": "13800:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13800:47:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 940,
                  "nodeType": "ExpressionStatement",
                  "src": "13800:47:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 945,
                        "name": "tokenUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "13877:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 946,
                        "name": "blanceUsdcNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 917,
                        "src": "13888:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 949,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13912:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Slave_$1066",
                              "typeString": "contract Slave"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Slave_$1066",
                              "typeString": "contract Slave"
                            }
                          ],
                          "id": 948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13904:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 947,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13904:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13904:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13919:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 942,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 929,
                            "src": "13863:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 941,
                          "name": "IPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2134,
                          "src": "13857:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPool_$2134_$",
                            "typeString": "type(contract IPool)"
                          }
                        },
                        "id": 943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13857:11:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$2134",
                          "typeString": "contract IPool"
                        }
                      },
                      "id": 944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13869:7:11",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2133,
                      "src": "13857:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint256,address,uint16) external"
                      }
                    },
                    "id": 952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13857:64:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 953,
                  "nodeType": "ExpressionStatement",
                  "src": "13857:64:11"
                }
              ]
            },
            "id": 955,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_assetsAllocationDeposit",
            "nameLocation": "13641:24:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13665:2:11"
            },
            "returnParameters": {
              "id": 915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13677:0:11"
            },
            "scope": 1066,
            "src": "13632:296:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 997,
              "nodeType": "Block",
              "src": "13998:265:11",
              "statements": [
                {
                  "assignments": [
                    961
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 961,
                      "mutability": "mutable",
                      "name": "balanceAusdcNode",
                      "nameLocation": "14016:16:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 997,
                      "src": "14008:24:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 960,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14008:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 971,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 968,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14072:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Slave_$1066",
                              "typeString": "contract Slave"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Slave_$1066",
                              "typeString": "contract Slave"
                            }
                          ],
                          "id": 967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14064:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 966,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14064:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14064:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 963,
                            "name": "tokenAUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "14042:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 962,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1144,
                          "src": "14035:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1144_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14035:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1144",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14054:9:11",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1101,
                      "src": "14035:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14035:43:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14008:70:11"
                },
                {
                  "assignments": [
                    973
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 973,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "14096:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 997,
                      "src": "14088:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 972,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14088:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 976,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 974,
                      "name": "_getPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 673,
                      "src": "14103:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14103:10:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14088:25:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 981,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 973,
                        "src": "14151:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 982,
                        "name": "balanceAusdcNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 961,
                        "src": "14157:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 978,
                            "name": "tokenAUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "14131:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 977,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1144,
                          "src": "14124:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1144_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14124:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1144",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14143:7:11",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1131,
                      "src": "14124:26:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14124:50:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 984,
                  "nodeType": "ExpressionStatement",
                  "src": "14124:50:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 989,
                        "name": "tokenUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "14213:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 990,
                        "name": "balanceAusdcNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 961,
                        "src": "14224:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 993,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14250:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Slave_$1066",
                              "typeString": "contract Slave"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Slave_$1066",
                              "typeString": "contract Slave"
                            }
                          ],
                          "id": 992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14242:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 991,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14242:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14242:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 986,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 973,
                            "src": "14198:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 985,
                          "name": "IPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2134,
                          "src": "14192:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPool_$2134_$",
                            "typeString": "type(contract IPool)"
                          }
                        },
                        "id": 987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14192:11:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$2134",
                          "typeString": "contract IPool"
                        }
                      },
                      "id": 988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14204:8:11",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1751,
                      "src": "14192:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14192:64:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 959,
                  "id": 996,
                  "nodeType": "Return",
                  "src": "14185:71:11"
                }
              ]
            },
            "id": 998,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_assetsAllocationWithdraw",
            "nameLocation": "13943:25:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13968:2:11"
            },
            "returnParameters": {
              "id": 959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 958,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 998,
                  "src": "13989:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13989:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13988:9:11"
            },
            "scope": 1066,
            "src": "13934:329:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1017,
              "nodeType": "Block",
              "src": "14316:117:11",
              "statements": [
                {
                  "assignments": [
                    1002
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1002,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "14339:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1017,
                      "src": "14326:17:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1001,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "14326:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1010,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 1007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14363:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 1006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14357:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 1005,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "14357:5:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14357:8:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 1003,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "14346:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "14350:6:11",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "14346:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 1009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14346:20:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14326:40:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1012,
                        "name": "MASTER_CHAIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "14390:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 1013,
                        "name": "MASTER_CONTRACT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "14404:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1014,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1002,
                        "src": "14421:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1011,
                      "name": "_sendMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 657,
                      "src": "14377:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (uint64,address,bytes memory) returns (bytes32)"
                      }
                    },
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14377:49:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1016,
                  "nodeType": "ExpressionStatement",
                  "src": "14377:49:11"
                }
              ]
            },
            "id": 1018,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_resumeWithdrawsNodeActive",
            "nameLocation": "14278:26:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14304:2:11"
            },
            "returnParameters": {
              "id": 1000,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14316:0:11"
            },
            "scope": 1066,
            "src": "14269:164:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1056,
              "nodeType": "Block",
              "src": "14476:228:11",
              "statements": [
                {
                  "assignments": [
                    1022
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1022,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "14494:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1056,
                      "src": "14486:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1021,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14486:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1032,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1029,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14541:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Slave_$1066",
                              "typeString": "contract Slave"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Slave_$1066",
                              "typeString": "contract Slave"
                            }
                          ],
                          "id": 1028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14533:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1027,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14533:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14533:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1024,
                            "name": "tokenAUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "14511:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1023,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1144,
                          "src": "14504:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1144_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14504:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1144",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14523:9:11",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1101,
                      "src": "14504:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14504:43:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14486:61:11"
                },
                {
                  "assignments": [
                    1034
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1034,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "14566:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1056,
                      "src": "14558:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1033,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14558:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1037,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1035,
                      "name": "_getPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 673,
                      "src": "14573:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14573:10:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14558:25:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1042,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1034,
                        "src": "14621:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1043,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1022,
                        "src": "14627:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1039,
                            "name": "tokenAUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "14601:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1038,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1144,
                          "src": "14594:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1144_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14594:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1144",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14613:7:11",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1131,
                      "src": "14594:26:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14594:41:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1045,
                  "nodeType": "ExpressionStatement",
                  "src": "14594:41:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1050,
                        "name": "tokenUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "14666:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1051,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1022,
                        "src": "14677:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1052,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14686:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14690:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14686:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1047,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1034,
                            "src": "14651:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1046,
                          "name": "IPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2134,
                          "src": "14645:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPool_$2134_$",
                            "typeString": "type(contract IPool)"
                          }
                        },
                        "id": 1048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14645:11:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$2134",
                          "typeString": "contract IPool"
                        }
                      },
                      "id": 1049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14657:8:11",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1751,
                      "src": "14645:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14645:52:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1055,
                  "nodeType": "ExpressionStatement",
                  "src": "14645:52:11"
                }
              ]
            },
            "functionSelector": "28d41def",
            "id": 1057,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testingReturnFunds",
            "nameLocation": "14448:18:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14466:2:11"
            },
            "returnParameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14476:0:11"
            },
            "scope": 1066,
            "src": "14439:265:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1064,
              "nodeType": "Block",
              "src": "14748:36:11",
              "statements": [
                {
                  "expression": {
                    "id": 1062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1060,
                      "name": "isNodeActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "14758:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14773:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "14758:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1063,
                  "nodeType": "ExpressionStatement",
                  "src": "14758:19:11"
                }
              ]
            },
            "functionSelector": "3beded9f",
            "id": 1065,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testingActivateNode",
            "nameLocation": "14719:19:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14738:2:11"
            },
            "returnParameters": {
              "id": 1059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14748:0:11"
            },
            "scope": 1066,
            "src": "14710:74:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1067,
        "src": "761:14025:11",
        "usedErrors": [
          30,
          1245
        ]
      }
    ],
    "src": "32:14755:11"
  },
  "bytecode": "6101006040526008805460ff19908116909155600f805490911660011790553480156200002b57600080fd5b5060405162002951380380620029518339810160408190526200004e9162000125565b886001600160a01b0381166200007e576040516335fdcccd60e21b81526000600482015260240160405180910390fd5b6001600160a01b03908116608052600080546001600160a01b03199081169b83169b909b179055600180548b1699821699909917909855600280548a16978916979097179096556003805489169588169590951790945560048054881693871693909317909255600580549096169085161790945592821660c052811660a0521660e052620001e0565b80516001600160a01b03811681146200012057600080fd5b919050565b60008060008060008060008060006101208a8c0312156200014557600080fd5b620001508a62000108565b98506200016060208b0162000108565b97506200017060408b0162000108565b96506200018060608b0162000108565b95506200019060808b0162000108565b9450620001a060a08b0162000108565b9350620001b060c08b0162000108565b9250620001c060e08b0162000108565b9150620001d16101008b0162000108565b90509295985092959850929598565b60805160a05160c05160e05161270d62000244600039600081816103800152610f5b0152600081816102f501526115640152600081816103ba0152818161081d01528181610e7701526110260152600081816103fa0152610992015261270d6000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c8063a2a41a921161011a578063c86d4040116100ad578063d8bba68f1161007c578063d8bba68f14610542578063e346fdfa1461054a578063e48c59d81461055d578063e96444101461056f578063fca4df391461058257600080fd5b8063c86d4040146104a9578063ca65a4fe146104bc578063cbec3e30146104e3578063d1451be61461052f57600080fd5b8063b6b55f25116100e9578063b6b55f251461041e578063b91da80e14610431578063bd19317314610483578063c3f4a8381461049657600080fd5b8063a2a41a92146103b5578063a2feb55a146103dc578063b007661b146103ef578063b0f479a1146103f857600080fd5b80633d2e2d611161019d5780637e96b20c1161016c5780637e96b20c1461034257806385572ffb1461035557806397e8b61314610368578063982d1f181461037b57806398b3c1f8146103a257600080fd5b80633d2e2d611461029c57806360e39095146102c757806367062580146102f05780637adc67101461031757600080fd5b806328d74cb6116101d957806328d74cb6146102575780632b72dc261461026a578063335d92f3146102815780633beded9f1461028a57600080fd5b806301ffc9a71461020b5780630fdfaa97146102335780631d34b4ff1461024057806328d41def1461024d575b600080fd5b61021e610219366004611dad565b6105a2565b60405190151581526020015b60405180910390f35b600f5461021e9060ff1681565b60085461021e9060ff1681565b6102556105d9565b005b610255610265366004611dec565b61074e565b61027360095481565b60405190815260200161022a565b610273600a5481565b6102556008805460ff19166001179055565b6005546102af906001600160a01b031681565b6040516001600160a01b03909116815260200161022a565b6102af6102d5366004611dec565b600e602052600090815260409020546001600160a01b031681565b6102af7f000000000000000000000000000000000000000000000000000000000000000081565b61032a610325366004611e1e565b610842565b6040516001600160801b03909116815260200161022a565b610255610350366004611e92565b61088e565b610255610363366004611efd565b610987565b6004546102af906001600160a01b031681565b6102af7f000000000000000000000000000000000000000000000000000000000000000081565b6102736103b0366004611f37565b6109e6565b6102af7f000000000000000000000000000000000000000000000000000000000000000081565b600b5461032a906001600160801b031681565b61027360105481565b7f00000000000000000000000000000000000000000000000000000000000000006102af565b61025561042c366004611f37565b610aa3565b61046461043f366004611dec565b600c60205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b03909316835260208301919091520161022a565b6102556104913660046121ce565b610ea4565b6003546102af906001600160a01b031681565b6002546102af906001600160a01b031681565b6104cb67de41ba4fc9d91ad981565b6040516001600160401b03909116815260200161022a565b6105136104f1366004611f37565b6006602052600090815260409020805460019091015463ffffffff9091169082565b6040805163ffffffff909316835260208301919091520161022a565b61027361053d366004611f37565b610f11565b610255610f32565b6102556105583660046121ce565b611052565b600f5461021e90610100900460ff1681565b61025561057d3660046121ce565b6112a6565b610595610590366004612202565b6114c1565b60405161022a919061221f565b60006001600160e01b031982166385572ffb60e01b14806105d357506001600160e01b031982166301ffc9a760e01b145b92915050565b6003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610622573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610646919061226c565b9050600061065261155f565b60035460405163095ea7b360e01b81526001600160a01b0380841660048301526024820186905292935091169063095ea7b3906044016020604051808303816000875af11580156106a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cb9190612285565b50600254604051631a4ca37b60e21b81526001600160a01b03918216600482015260248101849052336044820152908216906369328dec906064016020604051808303816000875af1158015610725573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610749919061226c565b505050565b6001600160801b0381166000908152600c60205260409020546001600160a01b031633146107cd5760405162461bcd60e51b815260206004820152602160248201527f41646472657373206e6f74206d617463682077697468206e6f6e6365206461746044820152606160f81b60648201526084015b60405180910390fd5b6001600160801b0381166000908152600c602090815260408083206001015490516107fe92849233928792016122a7565b604051602081830303815290604052905061074967de41ba4fc9d91ad97f0000000000000000000000000000000000000000000000000000000000000000836115e4565b600d602052816000526040600020818154811061085e57600080fd5b9060005260206000209060029182820401919006601002915091509054906101000a90046001600160801b031681565b600554604051630afd9fa560e31b81526001600160a01b03909116906357ecfd28906108c4908790879087908790600401612302565b6020604051808303816000875af11580156108e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109079190612285565b6109795760405162461bcd60e51b815260206004820152603c60248201527f6661696c65642066726f6d20636972636c652062726964676520494d6573736160448201527f67655472616e736d69747465722072657475726e65642066616c73650000000060648201526084016107c4565b6109816119cc565b50505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109d2576040516335fdcccd60e21b81523360048201526024016107c4565b6109e36109de82612334565b611b2e565b50565b6003546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a57919061226c565b90506000600a548285670de0b6b3a7640000610a739190612356565b610a7d9190612356565b610a87919061236d565b9050610a9b670de0b6b3a76400008261236d565b949350505050565b6002546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610afa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1e9190612285565b610b6a5760405162461bcd60e51b815260206004820152601960248201527f4661696c656420746f207472616e7366657220616d6f756e740000000000000060448201526064016107c4565b60085460ff16610bb15760405162461bcd60e51b81526020600482015260126024820152714e6f6465206973206e6f742061637469766560701b60448201526064016107c4565b6003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610bfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1e919061226c565b90506000600a54600003610c4257610c3b8364e8d4a51000612356565b9050610c5e565b81600a5484610c519190612356565b610c5b919061236d565b90505b600b54604051600091610c8591839133916001600160801b039091169086906020016122a7565b60408051601f19818403018152918152600b80546001600160801b039081166000908152600c602090815284822080546001600160a01b0319163390811790915584548416835285832060019081018a9055908352600d825294822093548454808701865594835290822060028504018054601095909616949094026101000a9083168102920219909316179055600a80549293508492909190610d2a90849061238f565b9091555050600b805460019190600090610d4e9084906001600160801b03166123a2565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000610d7c61155f565b60025460405163095ea7b360e01b81526001600160a01b0380841660048301526024820189905292935091169063095ea7b3906044016020604051808303816000875af1158015610dd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df59190612285565b5060025460405163e8eda9df60e01b81526001600160a01b03918216600482015260248101879052306044820152600060648201529082169063e8eda9df90608401600060405180830381600087803b158015610e5157600080fd5b505af1158015610e65573d6000803e3d6000fd5b50505050610e9c67de41ba4fc9d91ad97f0000000000000000000000000000000000000000000000000000000000000000846115e4565b505050505050565b6008805460ff19166001179055606081015180516000918291610ed091908101602090810191016123da565b600a91909155600b80546fffffffffffffffffffffffffffffffff19166001600160801b039092169190911790555050600f805460ff191660011790555050565b60078181548110610f2157600080fd5b600091825260209091200154905081565b6002546040516335ea6a7560e01b81526001600160a01b039182166004820152600091829182917f000000000000000000000000000000000000000000000000000000000000000016906335ea6a759060240161018060405180830381865afa158015610fa3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc7919061241a565b505060408051600160208201529081018990526060810187905260808101869052979c50949a50929850600097505060a090940194506110079350505050565b604051602081830303815290604052905061104b67de41ba4fc9d91ad97f0000000000000000000000000000000000000000000000000000000000000000836115e4565b5050505050565b6008805460ff19169055606081015180516000918291829161107c918101602090810191016124b7565b6003546040516370a0823160e01b81523060048201529397509195509350600092506001600160a01b0316906370a0823190602401602060405180830381865afa1580156110ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f2919061226c565b905060006110fe61155f565b60035460405163095ea7b360e01b81526001600160a01b0380841660048301526024820186905292935091169063095ea7b3906044016020604051808303816000875af1158015611153573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111779190612285565b506000611182611bc3565b60108190556002546004805460405163095ea7b360e01b81526001600160a01b03918216928101929092526024820184905292935091169063095ea7b3906044016020604051808303816000875af11580156111e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112069190612285565b50600480546002546040516337e9a82760e11b815292830184905263ffffffff89166024840152604483018790526001600160a01b0390811660648401521690636fd3504e906084016020604051808303816000875af115801561126e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112929190612510565b5061129d8585611d3e565b50505050505050565b60008082606001518060200190518101906112c1919061252d565b925092505060006112d061155f565b6003546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561131e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611342919061226c565b90506000600a548285670de0b6b3a764000061135e9190612356565b6113689190612356565b611372919061236d565b905083600a6000828254611386919061256d565b90915550506003546001600160a01b031663095ea7b3846113af670de0b6b3a76400008561236d565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156113fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141e9190612285565b506002546001600160a01b03808516916369328dec9116611447670de0b6b3a76400008561236d565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152602481019190915290881660448201526064016020604051808303816000875af115801561149d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129d919061226c565b6001600160a01b0381166000908152600d602090815260409182902080548351818402810184019094528084526060939283018282801561155357602002820191906000526020600020906000905b82829054906101000a90046001600160801b03166001600160801b031681526020019060100190602082600f010492830192600103820291508084116115105790505b50505050509050919050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663026b1d5f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d39190612580565b60006116216040518060a0016040528060608152602001606081526020016060815260200160006001600160a01b03168152602001606081525090565b6040805160a081019091526001600160a01b03851660c08201528060e0810160408051808303601f190181529181529082526020808301879052815160008082529181018352929091019190611699565b60408051808201909152600080825260208201528152602001906001900390816116725790505b5081526001546001600160a01b0316602080830191909152604080518083018252620f424090819052815160248082019290925282518082039092018252604401825291820180516001600160e01b03166397a657c960e01b17905290910152600080546040516320487ded60e01b815292935090916001600160a01b03909116906320487ded9061173190899086906004016125e3565b602060405180830381865afa15801561174e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611772919061226c565b6001546040516370a0823160e01b81523060048201529192506001600160a01b0316906370a0823190602401602060405180830381865afa1580156117bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117df919061226c565b811115611876576001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561182e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611852919061226c565b604051634787a10360e11b81526004810191909152602481018290526044016107c4565b60015460005460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af11580156118cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ef9190612285565b506000546040516396f4e9f960e01b81526001600160a01b03909116906396f4e9f99061192290899086906004016125e3565b6020604051808303816000875af1158015611941573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611965919061226c565b600154604080516001600160a01b03808a168252909216602083015281018390529093506001600160401b0387169084907f9fb548811cfe022ba6400d8533a80d63fbc228e596f93603959dc47b1886af549060600160405180910390a350509392505050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611a15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a39919061226c565b90506000611a4561155f565b60025460405163095ea7b360e01b81526001600160a01b0380841660048301526024820186905292935091169063095ea7b3906044016020604051808303816000875af1158015611a9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611abe9190612285565b5060025460405163e8eda9df60e01b81526001600160a01b03918216600482015260248101849052306044820152600060648201529082169063e8eda9df90608401600060405180830381600087803b158015611b1a57600080fd5b505af1158015610e9c573d6000803e3d6000fd5b6000611b3982611d8b565b90508060ff16600003611b5357611b4f82611052565b5050565b8060ff16600103611b6757611b4f826112a6565b8060ff16600203611b7b57611b4f82610ea4565b60405162461bcd60e51b815260206004820152601b60248201527f696e76616c696420636f6d6d616e642066726f6d204d6173746572000000000060448201526064016107c4565b6003546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611c10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c34919061226c565b90506000611c4061155f565b60035460405163095ea7b360e01b81526001600160a01b0380841660048301526024820186905292935091169063095ea7b3906044016020604051808303816000875af1158015611c95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb99190612285565b50600254604051631a4ca37b60e21b81526001600160a01b03918216600482015260248101849052306044820152908216906369328dec906064016020604051808303816000875af1158015611d13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d37919061226c565b9250505090565b600a54600b5460408051600260208201819052918101939093526001600160801b03909116606083015290600090608001604051602081830303815290604052905061104b8484836115e4565b6000808260600151806020019051810190611da691906126bc565b9392505050565b600060208284031215611dbf57600080fd5b81356001600160e01b031981168114611da657600080fd5b6001600160801b03811681146109e357600080fd5b600060208284031215611dfe57600080fd5b8135611da681611dd7565b6001600160a01b03811681146109e357600080fd5b60008060408385031215611e3157600080fd5b8235611e3c81611e09565b946020939093013593505050565b60008083601f840112611e5c57600080fd5b5081356001600160401b03811115611e7357600080fd5b602083019150836020828501011115611e8b57600080fd5b9250929050565b60008060008060408587031215611ea857600080fd5b84356001600160401b0380821115611ebf57600080fd5b611ecb88838901611e4a565b90965094506020870135915080821115611ee457600080fd5b50611ef187828801611e4a565b95989497509550505050565b600060208284031215611f0f57600080fd5b81356001600160401b03811115611f2557600080fd5b820160a08185031215611da657600080fd5b600060208284031215611f4957600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715611f8857611f88611f50565b60405290565b60405160a081016001600160401b0381118282101715611f8857611f88611f50565b604051601f8201601f191681016001600160401b0381118282101715611fd857611fd8611f50565b604052919050565b6001600160401b03811681146109e357600080fd5b803561200081611fe0565b919050565b600082601f83011261201657600080fd5b81356001600160401b0381111561202f5761202f611f50565b612042601f8201601f1916602001611fb0565b81815284602083860101111561205757600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261208557600080fd5b813560206001600160401b038211156120a0576120a0611f50565b6120ae818360051b01611fb0565b82815260069290921b840181019181810190868411156120cd57600080fd5b8286015b8481101561211557604081890312156120ea5760008081fd5b6120f2611f66565b81356120fd81611e09565b815281850135858201528352918301916040016120d1565b509695505050505050565b600060a0828403121561213257600080fd5b61213a611f8e565b90508135815261214c60208301611ff5565b602082015260408201356001600160401b038082111561216b57600080fd5b61217785838601612005565b6040840152606084013591508082111561219057600080fd5b61219c85838601612005565b606084015260808401359150808211156121b557600080fd5b506121c284828501612074565b60808301525092915050565b6000602082840312156121e057600080fd5b81356001600160401b038111156121f657600080fd5b610a9b84828501612120565b60006020828403121561221457600080fd5b8135611da681611e09565b6020808252825182820181905260009190848201906040850190845b818110156122605783516001600160801b03168352928401929184019160010161223b565b50909695505050505050565b60006020828403121561227e57600080fd5b5051919050565b60006020828403121561229757600080fd5b81518015158114611da657600080fd5b60ff9490941684526001600160a01b039290921660208401526001600160801b03166040830152606082015260800190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6040815260006123166040830186886122d9565b82810360208401526123298185876122d9565b979650505050505050565b60006105d33683612120565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176105d3576105d3612340565b60008261238a57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156105d3576105d3612340565b6001600160801b038181168382160190808211156123c2576123c2612340565b5092915050565b805160ff8116811461200057600080fd5b6000806000606084860312156123ef57600080fd5b6123f8846123c9565b925060208401519150604084015161240f81611dd7565b809150509250925092565b6000806000806000806000806000806000806101808d8f03121561243d57600080fd5b8c519b5060208d01519a5060408d0151995060608d0151985060808d0151975060a08d0151965060c08d0151955060e08d015194506101008d015193506101208d015192506101408d015191506101608d015164ffffffffff811681146124a357600080fd5b809150509295989b509295989b509295989b565b600080600080608085870312156124cd57600080fd5b6124d6856123c9565b9350602085015163ffffffff811681146124ef57600080fd5b604086015190935061250081611fe0565b6060959095015193969295505050565b60006020828403121561252257600080fd5b8151611da681611fe0565b60008060006060848603121561254257600080fd5b61254b846123c9565b9250602084015161255b81611e09565b80925050604084015190509250925092565b818103818111156105d3576105d3612340565b60006020828403121561259257600080fd5b8151611da681611e09565b6000815180845260005b818110156125c3576020818501810151868301820152016125a7565b506000602082860101526020601f19601f83011685010191505092915050565b600060406001600160401b038516835260208181850152845160a08386015261260f60e086018261259d565b905081860151603f198087840301606088015261262c838361259d565b88860151888203830160808a01528051808352908601945060009350908501905b8084101561267f57845180516001600160a01b031683528601518683015293850193600193909301929086019061264d565b5060608901516001600160a01b031660a08901526080890151888203830160c08a015295506126ae818761259d565b9a9950505050505050505050565b6000602082840312156126ce57600080fd5b611da6826123c956fea26469706673582212209af97419aaa57a5a6241791c9ff0b52b582ffb416fa156871b117baf11fe4d9f64736f6c63430008130033",
  "bytecodeSha1": "704633c534e2963f06dab1ea3fedb661111548c8",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "Slave",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "CCIPReceiver.ccipReceive": {
          "63": [
            2427,
            2462,
            false
          ]
        }
      },
      "10": {},
      "11": {
        "Slave._ccipReceive": {
          "60": [
            8413,
            8425,
            false
          ],
          "61": [
            8488,
            8500,
            false
          ],
          "62": [
            8561,
            8573,
            false
          ]
        },
        "Slave._sendMessage": {
          "59": [
            10010,
            10053,
            false
          ]
        },
        "Slave.claimAssetsFromBridge": {
          "55": [
            13364,
            13497,
            true
          ]
        },
        "Slave.deposit": {
          "56": [
            11086,
            11151,
            true
          ],
          "57": [
            11220,
            11232,
            true
          ],
          "58": [
            11373,
            11402,
            false
          ]
        },
        "Slave.sendDepositByNonce": {
          "54": [
            12273,
            12324,
            true
          ]
        }
      },
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "2": {},
      "3": {},
      "4": {},
      "9": {}
    },
    "statements": {
      "0": {},
      "1": {
        "CCIPReceiver.ccipReceive": {
          "9": [
            1764,
            1785
          ]
        },
        "CCIPReceiver.getRouter": {
          "1": [
            2262,
            2290
          ]
        },
        "CCIPReceiver.supportsInterface": {
          "2": [
            1502,
            1609
          ]
        }
      },
      "10": {},
      "11": {
        "Slave._assetsAllocationDeposit": {
          "45": [
            13800,
            13847
          ],
          "46": [
            13857,
            13921
          ]
        },
        "Slave._assetsAllocationWithdraw": {
          "51": [
            14124,
            14174
          ],
          "52": [
            14185,
            14256
          ]
        },
        "Slave._ccipReceive": {
          "47": [
            8441,
            8467
          ],
          "48": [
            8516,
            8540
          ],
          "49": [
            8589,
            8627
          ],
          "50": [
            8658,
            8695
          ]
        },
        "Slave._sendMessage": {
          "38": [
            9241,
            9826
          ],
          "40": [
            10006,
            10134
          ],
          "41": [
            10252,
            10296
          ],
          "42": [
            10388,
            10459
          ],
          "43": [
            10516,
            10677
          ],
          "44": [
            10721,
            10737
          ]
        },
        "Slave._sendSupplyAndNonce": {
          "53": [
            6401,
            6453
          ]
        },
        "Slave.calculateSharesValue": {
          "10": [
            7893,
            7917
          ]
        },
        "Slave.claimAssetsFromBridge": {
          "7": [
            13343,
            13583
          ],
          "8": [
            13593,
            13619
          ]
        },
        "Slave.deposit": {
          "11": [
            11065,
            11202
          ],
          "12": [
            11212,
            11255
          ],
          "13": [
            11418,
            11444
          ],
          "14": [
            11475,
            11536
          ],
          "15": [
            11704,
            11765
          ],
          "16": [
            11775,
            11827
          ],
          "17": [
            11837,
            11891
          ],
          "18": [
            11902,
            11936
          ],
          "19": [
            11946,
            11968
          ],
          "20": [
            12013,
            12052
          ],
          "21": [
            12062,
            12118
          ],
          "22": [
            12129,
            12178
          ]
        },
        "Slave.getUserNonces": {
          "37": [
            4804,
            4842
          ]
        },
        "Slave.sendAaveData": {
          "27": [
            13160,
            13209
          ]
        },
        "Slave.sendDepositByNonce": {
          "5": [
            12252,
            12383
          ],
          "6": [
            12557,
            12606
          ]
        },
        "Slave.setTotalSupplyAndNonce": {
          "23": [
            6602,
            6621
          ],
          "24": [
            6783,
            6835
          ],
          "25": [
            6845,
            6883
          ],
          "26": [
            6893,
            6917
          ]
        },
        "Slave.testingActivateNode": {
          "0": [
            14758,
            14777
          ]
        },
        "Slave.testingReturnFunds": {
          "3": [
            14594,
            14635
          ],
          "4": [
            14645,
            14697
          ]
        },
        "Slave.warpAssets": {
          "28": [
            5189,
            5209
          ],
          "29": [
            5550,
            5600
          ],
          "30": [
            5673,
            5706
          ],
          "31": [
            5717,
            5786
          ],
          "32": [
            5797,
            5973
          ],
          "33": [
            5984,
            6101
          ]
        },
        "Slave.withdraw": {
          "34": [
            7395,
            7429
          ],
          "35": [
            7440,
            7491
          ],
          "36": [
            7501,
            7567
          ]
        }
      },
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "2": {},
      "3": {},
      "4": {
        "Client._argsToBytes": {
          "39": [
            1387,
            1450
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/CCIPReceiver",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/Client",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IAny2EVMMessageReceiver",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.8.3/IERC20",
    "IMessageTransmitter",
    "IPool",
    "IPoolAddressesProvider",
    "IPoolDataProvider",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IRouterClient",
    "ITokenMessenger",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/LinkTokenInterface"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "761:14025:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1405:209:1;;;;;;:::i;:::-;;:::i;:::-;;;470:14:18;;463:22;445:41;;433:2;418:18;1405:209:1;;;;;;;;2899:36:11;;;;;;;;;2400:32;;;;;;;;;14439:265;;;:::i;:::-;;12191:422;;;;;;:::i;:::-;;:::i;2439:31::-;;;;;;;;;1046:25:18;;;1034:2;1019:18;2439:31:11;900:177:18;2534:39:11;;;;;;14710:74;;14758:12;:19;;-1:-1:-1;;14758:19:11;14773:4;14758:19;;;14710:74;2117:44;;;;;-1:-1:-1;;;;;2117:44:11;;;;;;-1:-1:-1;;;;;1355:32:18;;;1337:51;;1325:2;1310:18;2117:44:11;1191:203:18;2839:53:11;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2839:53:11;;;1808:54;;;;;2777:55;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2019:47:18;;;2001:66;;1989:2;1974:18;2777:55:11;1855:218:18;13221:405:11;;;;;;:::i;:::-;;:::i;1660:130:1:-;;;;;;:::i;:::-;;:::i;2069:42:11:-;;;;;-1:-1:-1;;;;;2069:42:11;;;1868:51;;;;;7616:308;;;;;;:::i;:::-;;:::i;1762:40::-;;;;;2579:32;;;;;-1:-1:-1;;;;;2579:32:11;;;2973;;;;;;2205:90:1;2277:12;2205:90;;11013:1172:11;;;;;;:::i;:::-;;:::i;2709:62::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2709:62:11;;;;;;;;;;-1:-1:-1;;;;;3928:32:18;;;3910:51;;3992:2;3977:18;;3970:34;;;;3883:18;2709:62:11;3736:274:18;6466:458:11;;;;;;:::i;:::-;;:::i;2038:25::-;;;;;-1:-1:-1;;;;;2038:25:11;;;2008:24;;;;;-1:-1:-1;;;;;2008:24:11;;;1665:58;;1703:20;1665:58;;;;;-1:-1:-1;;;;;8255:31:18;;;8237:50;;8225:2;8210:18;1665:58:11;8093:200:18;2279:84:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8685:10:18;8673:23;;;8655:42;;8728:2;8713:18;;8706:34;;;;8628:18;2279:84:11;8483:263:18;2369:24:11;;;;;;:::i;:::-;;:::i;12619:597::-;;;:::i;5077:1031::-;;;;;;:::i;:::-;;:::i;2942:25::-;;;;;;;;;;;;6930:644;;;;;;:::i;:::-;;:::i;4697:152::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1405:209:1:-;1490:4;-1:-1:-1;;;;;;1509:56:1;;-1:-1:-1;;;1509:56:1;;:100;;-1:-1:-1;;;;;;;1569:40:1;;-1:-1:-1;;;1569:40:1;1509:100;1502:107;1405:209;-1:-1:-1;;1405:209:1:o;14439:265:11:-;14511:10;;14504:43;;-1:-1:-1;;;14504:43:11;;14541:4;14504:43;;;1337:51:18;14486:15:11;;-1:-1:-1;;;;;14511:10:11;;14504:28;;1310:18:18;;14504:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14486:61;;14558:12;14573:10;:8;:10::i;:::-;14601;;14594:41;;-1:-1:-1;;;14594:41:11;;-1:-1:-1;;;;;3928:32:18;;;14594:41:11;;;3910:51:18;3977:18;;;3970:34;;;14558:25:11;;-1:-1:-1;14601:10:11;;;14594:26;;3883:18:18;;14594:41:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14666:9:11;;14645:52;;-1:-1:-1;;;14645:52:11;;-1:-1:-1;;;;;14666:9:11;;;14645:52;;;10574:34:18;10624:18;;;10617:34;;;14686:10:11;10667:18:18;;;10660:43;14645:20:11;;;;;;10509:18:18;;14645:52:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14476:228;;14439:265::o;12191:422::-;-1:-1:-1;;;;;12273:25:11;;;;;;:17;:25;;;;;:37;-1:-1:-1;;;;;12273:37:11;12314:10;12273:51;12252:131;;;;-1:-1:-1;;;12252:131:11;;10916:2:18;12252:131:11;;;10898:21:18;10955:2;10935:18;;;10928:30;10994:34;10974:18;;;10967:62;-1:-1:-1;;;11045:18:18;;;11038:31;11086:19;;12252:131:11;;;;;;;;;-1:-1:-1;;;;;12504:25:11;;12394:17;12504:25;;;:17;:25;;;;;;;;:32;;;12414:132;;;;12394:17;;12460:10;;12484:6;;12414:132;;:::i;:::-;;;;;;;;;;;;;12394:152;;12557:49;1703:20;12584:15;12601:4;12557:12;:49::i;2777:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2777:55:11;;:::o;13221:405::-;13384:29;;13364:133;;-1:-1:-1;;;13364:133:11;;-1:-1:-1;;;;;13384:29:11;;;;13364:65;;:133;;13447:7;;;;13472:11;;;;13364:133;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13343:240;;;;-1:-1:-1;;;13343:240:11;;12495:2:18;13343:240:11;;;12477:21:18;12534:2;12514:18;;;12507:30;12573:34;12553:18;;;12546:62;12644:30;12624:18;;;12617:58;12692:19;;13343:240:11;12293:424:18;13343:240:11;13593:26;:24;:26::i;:::-;13221:405;;;;:::o;1660:130:1:-;2427:10;-1:-1:-1;;;;;2449:12:1;2427:35;;2423:73;;2471:25;;-1:-1:-1;;;2471:25:1;;2485:10;2471:25;;;1337:51:18;1310:18;;2471:25:1;1191:203:18;2423:73:1;1764:21:::1;;1777:7:::0;1764:21:::1;:::i;:::-;:12;:21::i;:::-;1660:130:::0;:::o;7616:308:11:-;7746:10;;7739:43;;-1:-1:-1;;;7739:43:11;;7776:4;7739:43;;;1337:51:18;7699:7:11;;;;-1:-1:-1;;;;;7746:10:11;;;;7739:28;;1310:18:18;;7739:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7718:64;;7792:14;7858:24;;7832:10;7811:6;7820:8;7811:17;;;;:::i;:::-;7810:32;;;;:::i;:::-;7809:73;;;;:::i;:::-;7792:90;-1:-1:-1;7900:17:11;7909:8;7792:90;7900:17;:::i;:::-;7893:24;7616:308;-1:-1:-1;;;;7616:308:11:o;11013:1172::-;11093:9;;11086:65;;-1:-1:-1;;;11086:65:11;;11117:10;11086:65;;;13708:34:18;11137:4:11;13758:18:18;;;13751:43;13810:18;;;13803:34;;;-1:-1:-1;;;;;11093:9:11;;;;11086:30;;13643:18:18;;11086:65:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11065:137;;;;-1:-1:-1;;;11065:137:11;;14050:2:18;11065:137:11;;;14032:21:18;14089:2;14069:18;;;14062:30;14128:27;14108:18;;;14101:55;14173:18;;11065:137:11;13848:349:18;11065:137:11;11220:12;;;;11212:43;;;;-1:-1:-1;;;11212:43:11;;14404:2:18;11212:43:11;;;14386:21:18;14443:2;14423:18;;;14416:30;-1:-1:-1;;;14462:18:18;;;14455:48;14520:18;;11212:43:11;14202:342:18;11212:43:11;11298:10;;11291:43;;-1:-1:-1;;;11291:43:11;;11328:4;11291:43;;;1337:51:18;11266:22:11;;-1:-1:-1;;;;;11298:10:11;;11291:28;;1310:18:18;;11291:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11266:68;;11345:14;11373:24;;11401:1;11373:29;11369:178;;11427:17;:6;11436:8;11427:17;:::i;:::-;11418:26;;11369:178;;;11522:14;11494:24;;11485:6;:33;;;;:::i;:::-;11484:52;;;;:::i;:::-;11475:61;;11369:178;11646:17;;11576:117;;11556:17;;11576:117;;11556:17;;11622:10;;-1:-1:-1;;;;;11646:17:11;;;;11677:6;;11576:117;;;:::i;:::-;;;;-1:-1:-1;;11576:117:11;;;;;;;;;11722:17;;;-1:-1:-1;;;;;11722:17:11;;;11704:36;;;;:17;11576:117;11704:36;;;;;;:61;;-1:-1:-1;;;;;;11704:61:11;11755:10;11704:61;;;;;;11793:17;;;;11775:36;;;;;11722:17;11775:43;;;:52;;;11837:30;;;:18;:30;;;;;11873:17;;11837:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;11722:17;11837:54;11873:17;;;11837:54;;;;;;;;;;;11902:24;:34;;11576:117;;-1:-1:-1;11821:6:11;;11902:24;;11704:36;11902:34;;11821:6;;11902:34;:::i;:::-;;;;-1:-1:-1;;11946:17:11;:22;;11967:1;;11946:17;;;:22;;11967:1;;-1:-1:-1;;;;;11946:22:11;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;11946:22:11;;;;;-1:-1:-1;;;;;11946:22:11;;;;;;11978:12;11993:10;:8;:10::i;:::-;12020:9;;12013:39;;-1:-1:-1;;;12013:39:11;;-1:-1:-1;;;;;3928:32:18;;;12013:39:11;;;3910:51:18;3977:18;;;3970:34;;;11978:25:11;;-1:-1:-1;12020:9:11;;;12013:25;;3883:18:18;;12013:39:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12082:9:11;;12062:56;;-1:-1:-1;;;12062:56:11;;-1:-1:-1;;;;;12082:9:11;;;12062:56;;;15157:34:18;15207:18;;;15200:34;;;12109:4:11;15250:18:18;;;15243:43;12082:9:11;15302:18:18;;;15295:47;12062:19:11;;;;;;15091::18;;12062:56:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12129:49;1703:20;12156:15;12173:4;12129:12;:49::i;:::-;;11055:1130;;;;11013:1172;:::o;6466:458::-;6602:12;:19;;-1:-1:-1;;6602:19:11;6617:4;6602:19;;;6724:20;;;;6700:72;;6602:12;;;;6700:72;;;;;;;;;;;;:::i;:::-;6783:24;:52;;;;6845:17;:38;;-1:-1:-1;;6845:38:11;-1:-1:-1;;;;;6845:38:11;;;;;;;;;-1:-1:-1;;6893:17:11;:24;;-1:-1:-1;;6893:24:11;-1:-1:-1;6893:24:11;;;-1:-1:-1;;6466:458:11:o;2369:24::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2369:24:11;:::o;12619:597::-;12971:9;;12893:101;;-1:-1:-1;;;12893:101:11;;-1:-1:-1;;;;;12971:9:11;;;12893:101;;;1337:51:18;12702:23:11;;;;;;12911:26;12893:60;;;;1310:18:18;;12893:101:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;13025:124:11;;;13055:1;13025:124;;;17114:36:18;17166:18;;;17159:34;;;17209:18;;;17202:34;;;17252:18;;;17245:34;;;12660:334:11;;-1:-1:-1;12660:334:11;;-1:-1:-1;12660:334:11;;-1:-1:-1;13005:17:11;;-1:-1:-1;;17086:19:18;;;;;-1:-1:-1;13025:124:11;;-1:-1:-1;;;;16887:398:18;13025:124:11;;;;;;;;;;;;;13005:144;;13160:49;1703:20;13187:15;13204:4;13160:12;:49::i;:::-;;12650:566;;;;12619:597::o;5077:1031::-;5189:12;:20;;-1:-1:-1;;5189:20:11;;;5368;;;;5357:66;;5204:5;;;;;;5357:66;;;;;;;;;;;:::i;:::-;5468:10;;5461:43;;-1:-1:-1;;;5461:43:11;;5498:4;5461:43;;;1337:51:18;5219:204:11;;-1:-1:-1;5219:204:11;;-1:-1:-1;5219:204:11;-1:-1:-1;5434:24:11;;-1:-1:-1;;;;;;5468:10:11;;5461:28;;1310:18:18;;5461:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5434:70;;5514:12;5529:10;:8;:10::i;:::-;5557;;5550:50;;-1:-1:-1;;;5550:50:11;;-1:-1:-1;;;;;3928:32:18;;;5550:50:11;;;3910:51:18;3977:18;;;3970:34;;;5514:25:11;;-1:-1:-1;5557:10:11;;;5550:26;;3883:18:18;;5550:50:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5611:21;5635:27;:25;:27::i;:::-;5673:17;:33;;;5724:9;;5743:27;;;5717:69;;-1:-1:-1;;;5717:69:11;;-1:-1:-1;;;;;5743:27:11;;;5717:69;;;3910:51:18;;;;3977:18;;;3970:34;;;5673:33:11;;-1:-1:-1;5724:9:11;;;5717:25;;3883:18:18;;5717:69:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5813:27:11;;;5954:9;;5797:176;;-1:-1:-1;;;5797:176:11;;;;;18079:25:18;;;18152:10;18140:23;;18120:18;;;18113:51;18180:18;;;18173:34;;;-1:-1:-1;;;;;5954:9:11;;;18223:18:18;;;18216:60;5813:27:11;;5797:59;;18051:19:18;;5797:176:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5984:117:11;6017:18;6073:15;5984:19;:117::i;:::-;5150:958;;;;;;5077:1031;:::o;6930:644::-;7014:22;7038:14;7080:15;:20;;;7056:93;;;;;;;;;;;;:::i;:::-;7011:138;;;;;7160:12;7175:10;:8;:10::i;:::-;7223;;7216:43;;-1:-1:-1;;;7216:43:11;;7253:4;7216:43;;;1337:51:18;7160:25:11;;-1:-1:-1;7195:18:11;;-1:-1:-1;;;;;7223:10:11;;;;7216:28;;1310:18:18;;7216:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7195:64;;7294:14;7360:24;;7334:10;7313:6;7322:8;7313:17;;;;:::i;:::-;7312:32;;;;:::i;:::-;7311:73;;;;:::i;:::-;7294:90;;7423:6;7395:24;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;;7447:10:11;;-1:-1:-1;;;;;7447:10:11;7440:26;7467:4;7473:17;7482:8;7473:6;:17;:::i;:::-;7440:51;;-1:-1:-1;;;;;;7440:51:11;;;;;;;-1:-1:-1;;;;;3928:32:18;;;7440:51:11;;;3910::18;3977:18;;;3970:34;3883:18;;7440:51:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7522:9:11;;-1:-1:-1;;;;;7501:20:11;;;;;;7522:9;7533:17;7542:8;7533:6;:17;:::i;:::-;7501:66;;-1:-1:-1;;;;;;7501:66:11;;;;;;;-1:-1:-1;;;;;10592:15:18;;;7501:66:11;;;10574:34:18;10624:18;;;10617:34;;;;10687:15;;;10667:18;;;10660:43;10509:18;;7501:66:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4697:152::-;-1:-1:-1;;;;;4811:31:11;;;;;;:18;:31;;;;;;;;;4804:38;;;;;;;;;;;;;;;;;4776:16;;4804:38;;;4811:31;4804:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4804:38:11;-1:-1:-1;;;;;4804:38:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4697:152;;;:::o;10750:182::-;10793:7;10812:12;10850:29;-1:-1:-1;;;;;10827:74:11;;:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8903:1841::-;9044:17;9073:43;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9073:43:11;9258:568;;;;;;;;;-1:-1:-1;;;;;1355:32:18;;9304:20:11;;;1337:51:18;9258:568:11;1310:18:18;;;9304:20:11;;;;;;-1:-1:-1;;9304:20:11;;;;;;9258:568;;;9304:20;9258:568;;;;;;9431:30;;-1:-1:-1;9431:30:11;;;;;;;;9258:568;;;;;9431:30;;;;-1:-1:-1;;;;;;;;;;;;;;;;;9431:30:11;;;;;;;;;;;;;;;-1:-1:-1;9258:568:11;;9803:11;;-1:-1:-1;;;;;9803:11:11;9258:568;;;;;;;;;9633:44;;;;;;;9666:9;9633:44;;;;1394:56:4;;;;;;22753:32:18;;;;1394:56:4;;;;;;;;;;22726:18:18;;1394:56:4;;;;;;;-1:-1:-1;;;;;1394:56:4;-1:-1:-1;;;1394:56:4;;;9258:568:11;;;;9889:12;9904:8;;:91;;-1:-1:-1;;;9904:91:11;;9241:585;;-1:-1:-1;9889:12:11;;-1:-1:-1;;;;;9904:8:11;;;;:15;;:91;;9933:24;;9241:585;;9904:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10017:11;;:36;;-1:-1:-1;;;10017:36:11;;10047:4;10017:36;;;1337:51:18;9889:106:11;;-1:-1:-1;;;;;;10017:11:11;;:21;;1310:18:18;;10017:36:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10010:4;:43;10006:128;;;10091:11;;:36;;-1:-1:-1;;;10091:36:11;;10121:4;10091:36;;;1337:51:18;-1:-1:-1;;;;;10091:11:11;;;;:21;;1310:18:18;;10091:36:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10074:60;;-1:-1:-1;;;10074:60:11;;;;;21547:25:18;;;;21588:18;;;21581:34;;;21520:18;;10074:60:11;21373:248:18;10006:128:11;10252:11;;;10280:8;10252:44;;-1:-1:-1;;;10252:44:11;;-1:-1:-1;;;;;10280:8:11;;;10252:44;;;3910:51:18;3977:18;;;3970:34;;;10252:11:11;;;:19;;3883:18:18;;10252:44:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10400:8:11;;:59;;-1:-1:-1;;;10400:59:11;;-1:-1:-1;;;;;10400:8:11;;;;:17;;:59;;10418:24;;10444:14;;10400:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10637:11;;10521:156;;;-1:-1:-1;;;;;13726:15:18;;;13708:34;;10637:11:11;;;13773:2:18;13758:18;;13751:43;13810:18;;13803:34;;;10388:71:11;;-1:-1:-1;;;;;;10521:156:11;;;10388:71;;10521:156;;13658:2:18;13643:18;10521:156:11;;;;;;;10721:16;;8903:1841;;;;;:::o;13632:296::-;13719:9;;13712:42;;-1:-1:-1;;;13712:42:11;;13748:4;13712:42;;;1337:51:18;13687:22:11;;-1:-1:-1;;;;;13719:9:11;;13712:27;;1310:18:18;;13712:42:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13687:67;;13764:12;13779:10;:8;:10::i;:::-;13807:9;;13800:47;;-1:-1:-1;;;13800:47:11;;-1:-1:-1;;;;;3928:32:18;;;13800:47:11;;;3910:51:18;3977:18;;;3970:34;;;13764:25:11;;-1:-1:-1;13807:9:11;;;13800:25;;3883:18:18;;13800:47:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13877:9:11;;13857:64;;-1:-1:-1;;;13857:64:11;;-1:-1:-1;;;;;13877:9:11;;;13857:64;;;15157:34:18;15207:18;;;15200:34;;;13912:4:11;15250:18:18;;;15243:43;13877:9:11;15302:18:18;;;15295:47;13857:19:11;;;;;;15091::18;;13857:64:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7964:933;8344:13;8360:38;8383:14;8360:22;:38::i;:::-;8344:54;;8413:7;:12;;8424:1;8413:12;8409:297;;8441:26;8452:14;8441:10;:26::i;:::-;8063:834;7964:933;:::o;8409:297::-;8488:7;:12;;8499:1;8488:12;8484:222;;8516:24;8525:14;8516:8;:24::i;8484:222::-;8561:7;:12;;8572:1;8561:12;8557:149;;8589:38;8612:14;8589:22;:38::i;8557:149::-;8658:37;;-1:-1:-1;;;8658:37:11;;22017:2:18;8658:37:11;;;21999:21:18;22056:2;22036:18;;;22029:30;22095:29;22075:18;;;22068:57;22142:18;;8658:37:11;21815:351:18;13934:329:11;14042:10;;14035:43;;-1:-1:-1;;;14035:43:11;;14072:4;14035:43;;;1337:51:18;13989:7:11;;;;-1:-1:-1;;;;;14042:10:11;;;;14035:28;;1310:18:18;;14035:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14008:70;;14088:12;14103:10;:8;:10::i;:::-;14131;;14124:50;;-1:-1:-1;;;14124:50:11;;-1:-1:-1;;;;;3928:32:18;;;14124:50:11;;;3910:51:18;3977:18;;;3970:34;;;14088:25:11;;-1:-1:-1;14131:10:11;;;14124:26;;3883:18:18;;14124:50:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14213:9:11;;14192:64;;-1:-1:-1;;;14192:64:11;;-1:-1:-1;;;;;14213:9:11;;;14192:64;;;10574:34:18;10624:18;;;10617:34;;;14250:4:11;10667:18:18;;;10660:43;14192:20:11;;;;;;10509:18:18;;14192:64:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14185:71;;;;13934:329;:::o;6114:346::-;6325:24;;6363:17;;6280:110;;;6249:1;6280:110;;;22369:36:18;;;22421:18;;;22414:34;;;;-1:-1:-1;;;;;6363:17:11;;;22464:18:18;;;22457:75;6249:1:11;6233:13;;22342:18:18;;6280:110:11;;;;;;;;;;;;6260:130;;6401:52;6414:11;6427:19;6448:4;6401:12;:52::i;4855:216::-;4965:5;4982:13;5009:15;:20;;;4998:41;;;;;;;;;;;;:::i;:::-;4982:57;4855:216;-1:-1:-1;;;4855:216:11:o;14:286:18:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:18;;209:43;;199:71;;266:1;263;256:12;497:146;-1:-1:-1;;;;;576:5:18;572:46;565:5;562:57;552:85;;633:1;630;623:12;648:247;707:6;760:2;748:9;739:7;735:23;731:32;728:52;;;776:1;773;766:12;728:52;815:9;802:23;834:31;859:5;834:31;:::i;1399:131::-;-1:-1:-1;;;;;1474:31:18;;1464:42;;1454:70;;1520:1;1517;1510:12;1535:315;1603:6;1611;1664:2;1652:9;1643:7;1639:23;1635:32;1632:52;;;1680:1;1677;1670:12;1632:52;1719:9;1706:23;1738:31;1763:5;1738:31;:::i;:::-;1788:5;1840:2;1825:18;;;;1812:32;;-1:-1:-1;;;1535:315:18:o;2078:347::-;2129:8;2139:6;2193:3;2186:4;2178:6;2174:17;2170:27;2160:55;;2211:1;2208;2201:12;2160:55;-1:-1:-1;2234:20:18;;-1:-1:-1;;;;;2266:30:18;;2263:50;;;2309:1;2306;2299:12;2263:50;2346:4;2338:6;2334:17;2322:29;;2398:3;2391:4;2382:6;2374;2370:19;2366:30;2363:39;2360:59;;;2415:1;2412;2405:12;2360:59;2078:347;;;;;:::o;2430:717::-;2520:6;2528;2536;2544;2597:2;2585:9;2576:7;2572:23;2568:32;2565:52;;;2613:1;2610;2603:12;2565:52;2653:9;2640:23;-1:-1:-1;;;;;2723:2:18;2715:6;2712:14;2709:34;;;2739:1;2736;2729:12;2709:34;2778:58;2828:7;2819:6;2808:9;2804:22;2778:58;:::i;:::-;2855:8;;-1:-1:-1;2752:84:18;-1:-1:-1;2943:2:18;2928:18;;2915:32;;-1:-1:-1;2959:16:18;;;2956:36;;;2988:1;2985;2978:12;2956:36;;3027:60;3079:7;3068:8;3057:9;3053:24;3027:60;:::i;:::-;2430:717;;;;-1:-1:-1;3106:8:18;-1:-1:-1;;;;2430:717:18:o;3152:394::-;3245:6;3298:2;3286:9;3277:7;3273:23;3269:32;3266:52;;;3314:1;3311;3304:12;3266:52;3354:9;3341:23;-1:-1:-1;;;;;3379:6:18;3376:30;3373:50;;;3419:1;3416;3409:12;3373:50;3442:22;;3498:3;3480:16;;;3476:26;3473:46;;;3515:1;3512;3505:12;3551:180;3610:6;3663:2;3651:9;3642:7;3638:23;3634:32;3631:52;;;3679:1;3676;3669:12;3631:52;-1:-1:-1;3702:23:18;;3551:180;-1:-1:-1;3551:180:18:o;4015:127::-;4076:10;4071:3;4067:20;4064:1;4057:31;4107:4;4104:1;4097:15;4131:4;4128:1;4121:15;4147:257;4219:4;4213:11;;;4251:17;;-1:-1:-1;;;;;4283:34:18;;4319:22;;;4280:62;4277:88;;;4345:18;;:::i;:::-;4381:4;4374:24;4147:257;:::o;4409:253::-;4481:2;4475:9;4523:4;4511:17;;-1:-1:-1;;;;;4543:34:18;;4579:22;;;4540:62;4537:88;;;4605:18;;:::i;4667:275::-;4738:2;4732:9;4803:2;4784:13;;-1:-1:-1;;4780:27:18;4768:40;;-1:-1:-1;;;;;4823:34:18;;4859:22;;;4820:62;4817:88;;;4885:18;;:::i;:::-;4921:2;4914:22;4667:275;;-1:-1:-1;4667:275:18:o;4947:129::-;-1:-1:-1;;;;;5025:5:18;5021:30;5014:5;5011:41;5001:69;;5066:1;5063;5056:12;5081:132;5148:20;;5177:30;5148:20;5177:30;:::i;:::-;5081:132;;;:::o;5218:530::-;5260:5;5313:3;5306:4;5298:6;5294:17;5290:27;5280:55;;5331:1;5328;5321:12;5280:55;5367:6;5354:20;-1:-1:-1;;;;;5389:2:18;5386:26;5383:52;;;5415:18;;:::i;:::-;5459:55;5502:2;5483:13;;-1:-1:-1;;5479:27:18;5508:4;5475:38;5459:55;:::i;:::-;5539:2;5530:7;5523:19;5585:3;5578:4;5573:2;5565:6;5561:15;5557:26;5554:35;5551:55;;;5602:1;5599;5592:12;5551:55;5667:2;5660:4;5652:6;5648:17;5641:4;5632:7;5628:18;5615:55;5715:1;5690:16;;;5708:4;5686:27;5679:38;;;;5694:7;5218:530;-1:-1:-1;;;5218:530:18:o;5753:1067::-;5821:5;5874:3;5867:4;5859:6;5855:17;5851:27;5841:55;;5892:1;5889;5882:12;5841:55;5928:6;5915:20;5954:4;-1:-1:-1;;;;;5973:2:18;5970:26;5967:52;;;5999:18;;:::i;:::-;6039:36;6071:2;6066;6063:1;6059:10;6055:19;6039:36;:::i;:::-;6109:15;;;6195:1;6191:10;;;;6179:23;;6175:32;;;6140:12;;;;6219:15;;;6216:35;;;6247:1;6244;6237:12;6216:35;6283:2;6275:6;6271:15;6295:496;6311:6;6306:3;6303:15;6295:496;;;6389:4;6383:3;6378;6374:13;6370:24;6367:114;;;6435:1;6464:2;6460;6453:14;6367:114;6507:22;;:::i;:::-;6570:3;6557:17;6587:33;6612:7;6587:33;:::i;:::-;6633:22;;6704:12;;;6691:26;6675:14;;;6668:50;6731:18;;6769:12;;;;6337:4;6328:14;6295:496;;;-1:-1:-1;6809:5:18;5753:1067;-1:-1:-1;;;;;;5753:1067:18:o;6825:899::-;6886:5;6934:4;6922:9;6917:3;6913:19;6909:30;6906:50;;;6952:1;6949;6942:12;6906:50;6974:22;;:::i;:::-;6965:31;;7032:9;7019:23;7012:5;7005:38;7075:37;7108:2;7097:9;7093:18;7075:37;:::i;:::-;7070:2;7063:5;7059:14;7052:61;7164:2;7153:9;7149:18;7136:32;-1:-1:-1;;;;;7228:2:18;7220:6;7217:14;7214:34;;;7244:1;7241;7234:12;7214:34;7280:45;7321:3;7312:6;7301:9;7297:22;7280:45;:::i;:::-;7275:2;7268:5;7264:14;7257:69;7379:2;7368:9;7364:18;7351:32;7335:48;;7408:2;7398:8;7395:16;7392:36;;;7424:1;7421;7414:12;7392:36;7460:47;7503:3;7492:8;7481:9;7477:24;7460:47;:::i;:::-;7455:2;7448:5;7444:14;7437:71;7561:3;7550:9;7546:19;7533:33;7517:49;;7591:2;7581:8;7578:16;7575:36;;;7607:1;7604;7597:12;7575:36;;7644:73;7713:3;7702:8;7691:9;7687:24;7644:73;:::i;:::-;7638:3;7631:5;7627:15;7620:98;;6825:899;;;;:::o;7729:359::-;7820:6;7873:2;7861:9;7852:7;7848:23;7844:32;7841:52;;;7889:1;7886;7879:12;7841:52;7929:9;7916:23;-1:-1:-1;;;;;7954:6:18;7951:30;7948:50;;;7994:1;7991;7984:12;7948:50;8017:65;8074:7;8065:6;8054:9;8050:22;8017:65;:::i;8933:247::-;8992:6;9045:2;9033:9;9024:7;9020:23;9016:32;9013:52;;;9061:1;9058;9051:12;9013:52;9100:9;9087:23;9119:31;9144:5;9119:31;:::i;9185:673::-;9356:2;9408:21;;;9478:13;;9381:18;;;9500:22;;;9327:4;;9356:2;9579:15;;;;9553:2;9538:18;;;9327:4;9622:210;9636:6;9633:1;9630:13;9622:210;;;9701:13;;-1:-1:-1;;;;;9697:54:18;9685:67;;9807:15;;;;9772:12;;;;9658:1;9651:9;9622:210;;;-1:-1:-1;9849:3:18;;9185:673;-1:-1:-1;;;;;;9185:673:18:o;9863:184::-;9933:6;9986:2;9974:9;9965:7;9961:23;9957:32;9954:52;;;10002:1;9999;9992:12;9954:52;-1:-1:-1;10025:16:18;;9863:184;-1:-1:-1;9863:184:18:o;10052:277::-;10119:6;10172:2;10160:9;10151:7;10147:23;10143:32;10140:52;;;10188:1;10185;10178:12;10140:52;10220:9;10214:16;10273:5;10266:13;10259:21;10252:5;10249:32;10239:60;;10295:1;10292;10285:12;11116:465;11373:4;11361:17;;;;11343:36;;-1:-1:-1;;;;;11415:32:18;;;;11410:2;11395:18;;11388:60;-1:-1:-1;;;;;11484:47:18;11479:2;11464:18;;11457:75;11563:2;11548:18;;11541:34;11330:3;11315:19;;11116:465::o;11586:266::-;11674:6;11669:3;11662:19;11726:6;11719:5;11712:4;11707:3;11703:14;11690:43;-1:-1:-1;11778:1:18;11753:16;;;11771:4;11749:27;;;11742:38;;;;11834:2;11813:15;;;-1:-1:-1;;11809:29:18;11800:39;;;11796:50;;11586:266::o;11857:431::-;12070:2;12059:9;12052:21;12033:4;12096:61;12153:2;12142:9;12138:18;12130:6;12122;12096:61;:::i;:::-;12205:9;12197:6;12193:22;12188:2;12177:9;12173:18;12166:50;12233:49;12275:6;12267;12259;12233:49;:::i;:::-;12225:57;11857:431;-1:-1:-1;;;;;;;11857:431:18:o;12722:214::-;12838:9;12875:55;12915:14;12908:5;12875:55;:::i;12941:127::-;13002:10;12997:3;12993:20;12990:1;12983:31;13033:4;13030:1;13023:15;13057:4;13054:1;13047:15;13073:168;13146:9;;;13177;;13194:15;;;13188:22;;13174:37;13164:71;;13215:18;;:::i;13246:217::-;13286:1;13312;13302:132;;13356:10;13351:3;13347:20;13344:1;13337:31;13391:4;13388:1;13381:15;13419:4;13416:1;13409:15;13302:132;-1:-1:-1;13448:9:18;;13246:217::o;14549:125::-;14614:9;;;14635:10;;;14632:36;;;14648:18;;:::i;14679:197::-;-1:-1:-1;;;;;14801:10:18;;;14813;;;14797:27;;14836:11;;;14833:37;;;14850:18;;:::i;:::-;14833:37;14679:197;;;;:::o;15353:160::-;15430:13;;15483:4;15472:16;;15462:27;;15452:55;;15503:1;15500;15493:12;15518:393;15604:6;15612;15620;15673:2;15661:9;15652:7;15648:23;15644:32;15641:52;;;15689:1;15686;15679:12;15641:52;15712:38;15740:9;15712:38;:::i;:::-;15702:48;;15790:2;15779:9;15775:18;15769:25;15759:35;;15837:2;15826:9;15822:18;15816:25;15850:31;15875:5;15850:31;:::i;:::-;15900:5;15890:15;;;15518:393;;;;;:::o;15916:966::-;16084:6;16092;16100;16108;16116;16124;16132;16140;16148;16156;16164:7;16173;16227:3;16215:9;16206:7;16202:23;16198:33;16195:53;;;16244:1;16241;16234:12;16195:53;16273:9;16267:16;16257:26;;16323:2;16312:9;16308:18;16302:25;16292:35;;16367:2;16356:9;16352:18;16346:25;16336:35;;16411:2;16400:9;16396:18;16390:25;16380:35;;16455:3;16444:9;16440:19;16434:26;16424:36;;16500:3;16489:9;16485:19;16479:26;16469:36;;16545:3;16534:9;16530:19;16524:26;16514:36;;16590:3;16579:9;16575:19;16569:26;16559:36;;16635:3;16624:9;16620:19;16614:26;16604:36;;16680:3;16669:9;16665:19;16659:26;16649:36;;16726:3;16715:9;16711:19;16705:26;16694:37;;16774:3;16763:9;16759:19;16753:26;16819:12;16812:5;16808:24;16801:5;16798:35;16788:63;;16847:1;16844;16837:12;16788:63;16871:5;16860:16;;;15916:966;;;;;;;;;;;;;;:::o;17290:555::-;17383:6;17391;17399;17407;17460:3;17448:9;17439:7;17435:23;17431:33;17428:53;;;17477:1;17474;17467:12;17428:53;17500:38;17528:9;17500:38;:::i;:::-;17490:48;;17581:2;17570:9;17566:18;17560:25;17625:10;17618:5;17614:22;17607:5;17604:33;17594:61;;17651:1;17648;17641:12;17594:61;17724:2;17709:18;;17703:25;17674:5;;-1:-1:-1;17737:32:18;17703:25;17737:32;:::i;:::-;17835:2;17820:18;;;;17814:25;17290:555;;;;-1:-1:-1;;;17290:555:18:o;18287:249::-;18356:6;18409:2;18397:9;18388:7;18384:23;18380:32;18377:52;;;18425:1;18422;18415:12;18377:52;18457:9;18451:16;18476:30;18500:5;18476:30;:::i;18541:401::-;18635:6;18643;18651;18704:2;18692:9;18683:7;18679:23;18675:32;18672:52;;;18720:1;18717;18710:12;18672:52;18743:38;18771:9;18743:38;:::i;:::-;18733:48;;18824:2;18813:9;18809:18;18803:25;18837:31;18862:5;18837:31;:::i;:::-;18887:5;18877:15;;;18932:2;18921:9;18917:18;18911:25;18901:35;;18541:401;;;;;:::o;18947:128::-;19014:9;;;19035:11;;;19032:37;;;19049:18;;:::i;19080:251::-;19150:6;19203:2;19191:9;19182:7;19178:23;19174:32;19171:52;;;19219:1;19216;19209:12;19171:52;19251:9;19245:16;19270:31;19295:5;19270:31;:::i;19336:422::-;19377:3;19415:5;19409:12;19442:6;19437:3;19430:19;19467:1;19477:162;19491:6;19488:1;19485:13;19477:162;;;19553:4;19609:13;;;19605:22;;19599:29;19581:11;;;19577:20;;19570:59;19506:12;19477:162;;;19481:3;19684:1;19677:4;19668:6;19663:3;19659:16;19655:27;19648:38;19747:4;19740:2;19736:7;19731:2;19723:6;19719:15;19715:29;19710:3;19706:39;19702:50;19695:57;;;19336:422;;;;:::o;19763:1605::-;19945:4;19974:2;-1:-1:-1;;;;;20007:6:18;20003:31;19992:9;19985:50;20054:2;20092;20087;20076:9;20072:18;20065:30;20130:6;20124:13;20173:4;20168:2;20157:9;20153:18;20146:32;20201:51;20247:3;20236:9;20232:19;20218:12;20201:51;:::i;:::-;20187:65;;20301:2;20293:6;20289:15;20283:22;20328:2;20324:7;20395:2;20383:9;20375:6;20371:22;20367:31;20362:2;20351:9;20347:18;20340:59;20422:40;20455:6;20439:14;20422:40;:::i;:::-;20499:15;;;20493:22;20556;;;20552:31;;20546:3;20531:19;;20524:60;20633:21;;20663:22;;;20739:23;;;;-1:-1:-1;20780:1:18;;-1:-1:-1;20701:15:18;;;;20790:280;20804:6;20801:1;20798:13;20790:280;;;20863:13;;20905:9;;-1:-1:-1;;;;;20901:35:18;20889:48;;20977:11;;20971:18;20957:12;;;20950:40;21045:15;;;;20933:1;20819:9;;;;;21010:12;;;;20790:280;;;-1:-1:-1;21119:2:18;21107:15;;21101:22;-1:-1:-1;;;;;1148:31:18;21182:4;21167:20;;1136:44;21237:3;21225:16;;21219:23;21283:19;;;21279:28;;21273:3;21258:19;;21251:57;21219:23;-1:-1:-1;21325:37:18;21287:3;21219:23;21325:37;:::i;:::-;21317:45;19763:1605;-1:-1:-1;;;;;;;;;;19763:1605:18:o;22796:204::-;22864:6;22917:2;22905:9;22896:7;22892:23;22888:32;22885:52;;;22933:1;22930;22923:12;22885:52;22956:38;22984:9;22956:38;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
        "details": "Note ensure you check the msg.sender is the OffRampRouter",
        "notice": "Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution.",
        "params": {
          "message": "CCIP Message"
        }
      },
      "constructor": {
        "notice": "Constructor initializes the contract with the router address.",
        "params": {
          "_MASTER_CONTRACT": "The address of the master contract.",
          "_POOL_ADDRESS_PROVIDER_ADDRESS": "The address of the Pool address provider contract (aave).",
          "_POOL_DATA_PROVIDER_ADDRESS": "The address of the Pool data provider contract (aave).",
          "_circleTokenMessengerAddress": "The address of the Circle token messenger contract.",
          "_link": "The address of the LINK token contract.",
          "_router": "The address of the router contract (CCIP chainlink router).",
          "_tokenAUSDC": "The address of the ausdc provided by aave when deposit is done.",
          "_tokenUSDC": "The address of the Circle USDC token contract."
        }
      },
      "getRouter()": {
        "notice": "Return the current router",
        "returns": {
          "_0": "CCIP router address"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.",
        "notice": "IERC165 supports an interfaceId",
        "params": {
          "interfaceId": "The interfaceId to check"
        },
        "returns": {
          "_0": "true if the interfaceId is supported"
        }
      }
    },
    "version": 1
  },
  "offset": [
    761,
    14786
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA2A41A92 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xC86D4040 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD8BBA68F GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD8BBA68F EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0xE346FDFA EQ PUSH2 0x54A JUMPI DUP1 PUSH4 0xE48C59D8 EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0xE9644410 EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0xFCA4DF39 EQ PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC86D4040 EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0xCA65A4FE EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0xCBEC3E30 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0xD1451BE6 EQ PUSH2 0x52F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB6B55F25 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0xB91DA80E EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0xBD193173 EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0xC3F4A838 EQ PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA2A41A92 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xA2FEB55A EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xB007661B EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xB0F479A1 EQ PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3D2E2D61 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x7E96B20C GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x7E96B20C EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x85572FFB EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0x97E8B613 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x982D1F18 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x98B3C1F8 EQ PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3D2E2D61 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x60E39095 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x67062580 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x7ADC6710 EQ PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x28D74CB6 GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x28D74CB6 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x2B72DC26 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x335D92F3 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x3BEDED9F EQ PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xFDFAA97 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x1D34B4FF EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x28D41DEF EQ PUSH2 0x24D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAD JUMP JUMPDEST PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xF SLOAD PUSH2 0x21E SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x21E SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x255 PUSH2 0x5D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DEC JUMP JUMPDEST PUSH2 0x74E JUMP JUMPDEST PUSH2 0x273 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x273 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x255 PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x2AF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x2D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DEC JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2AF PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x32A PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1E JUMP JUMPDEST PUSH2 0x842 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x255 PUSH2 0x350 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E92 JUMP JUMPDEST PUSH2 0x88E JUMP JUMPDEST PUSH2 0x255 PUSH2 0x363 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EFD JUMP JUMPDEST PUSH2 0x987 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x2AF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2AF PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F37 JUMP JUMPDEST PUSH2 0x9E6 JUMP JUMPDEST PUSH2 0x2AF PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x32A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x273 PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x2AF JUMP JUMPDEST PUSH2 0x255 PUSH2 0x42C CALLDATASIZE PUSH1 0x4 PUSH2 0x1F37 JUMP JUMPDEST PUSH2 0xAA3 JUMP JUMPDEST PUSH2 0x464 PUSH2 0x43F CALLDATASIZE PUSH1 0x4 PUSH2 0x1DEC JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x255 PUSH2 0x491 CALLDATASIZE PUSH1 0x4 PUSH2 0x21CE JUMP JUMPDEST PUSH2 0xEA4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x2AF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2AF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x4CB PUSH8 0xDE41BA4FC9D91AD9 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x513 PUSH2 0x4F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F37 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x273 PUSH2 0x53D CALLDATASIZE PUSH1 0x4 PUSH2 0x1F37 JUMP JUMPDEST PUSH2 0xF11 JUMP JUMPDEST PUSH2 0x255 PUSH2 0xF32 JUMP JUMPDEST PUSH2 0x255 PUSH2 0x558 CALLDATASIZE PUSH1 0x4 PUSH2 0x21CE JUMP JUMPDEST PUSH2 0x1052 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x21E SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x255 PUSH2 0x57D CALLDATASIZE PUSH1 0x4 PUSH2 0x21CE JUMP JUMPDEST PUSH2 0x12A6 JUMP JUMPDEST PUSH2 0x595 PUSH2 0x590 CALLDATASIZE PUSH1 0x4 PUSH2 0x2202 JUMP JUMPDEST PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x85572FFB PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x5D3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x622 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x652 PUSH2 0x155F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6CB SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1A4CA37B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE CALLER PUSH1 0x44 DUP3 ADD MSTORE SWAP1 DUP3 AND SWAP1 PUSH4 0x69328DEC SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x725 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x749 SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646472657373206E6F74206D617463682077697468206E6F6E636520646174 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x61 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD PUSH2 0x7FE SWAP3 DUP5 SWAP3 CALLER SWAP3 DUP8 SWAP3 ADD PUSH2 0x22A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x749 PUSH8 0xDE41BA4FC9D91AD9 PUSH32 0x0 DUP4 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x85E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x10 MUL SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xAFD9FA5 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x57ECFD28 SWAP1 PUSH2 0x8C4 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2302 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x907 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST PUSH2 0x979 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C65642066726F6D20636972636C652062726964676520494D65737361 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x67655472616E736D69747465722072657475726E65642066616C736500000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7C4 JUMP JUMPDEST PUSH2 0x981 PUSH2 0x19CC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x9D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35FDCCCD PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7C4 JUMP JUMPDEST PUSH2 0x9E3 PUSH2 0x9DE DUP3 PUSH2 0x2334 JUMP JUMPDEST PUSH2 0x1B2E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA57 SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA SLOAD DUP3 DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0xA73 SWAP2 SWAP1 PUSH2 0x2356 JUMP JUMPDEST PUSH2 0xA7D SWAP2 SWAP1 PUSH2 0x2356 JUMP JUMPDEST PUSH2 0xA87 SWAP2 SWAP1 PUSH2 0x236D JUMP JUMPDEST SWAP1 POP PUSH2 0xA9B PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x236D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB1E SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST PUSH2 0xB6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F207472616E7366657220616D6F756E7400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C4 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH2 0xBB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F6465206973206E6F7420616374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC1E SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA SLOAD PUSH1 0x0 SUB PUSH2 0xC42 JUMPI PUSH2 0xC3B DUP4 PUSH5 0xE8D4A51000 PUSH2 0x2356 JUMP JUMPDEST SWAP1 POP PUSH2 0xC5E JUMP JUMPDEST DUP2 PUSH1 0xA SLOAD DUP5 PUSH2 0xC51 SWAP2 SWAP1 PUSH2 0x2356 JUMP JUMPDEST PUSH2 0xC5B SWAP2 SWAP1 PUSH2 0x236D JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0xC85 SWAP2 DUP4 SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 PUSH1 0x20 ADD PUSH2 0x22A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE DUP5 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP5 SLOAD DUP5 AND DUP4 MSTORE DUP6 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP11 SWAP1 SSTORE SWAP1 DUP4 MSTORE PUSH1 0xD DUP3 MSTORE SWAP5 DUP3 KECCAK256 SWAP4 SLOAD DUP5 SLOAD DUP1 DUP8 ADD DUP7 SSTORE SWAP5 DUP4 MSTORE SWAP1 DUP3 KECCAK256 PUSH1 0x2 DUP6 DIV ADD DUP1 SLOAD PUSH1 0x10 SWAP6 SWAP1 SWAP7 AND SWAP5 SWAP1 SWAP5 MUL PUSH2 0x100 EXP SWAP1 DUP4 AND DUP2 MUL SWAP3 MUL NOT SWAP1 SWAP4 AND OR SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD SWAP3 SWAP4 POP DUP5 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xD2A SWAP1 DUP5 SWAP1 PUSH2 0x238F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xD4E SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x23A2 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xD7C PUSH2 0x155F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP10 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF5 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 DUP3 AND SWAP1 PUSH4 0xE8EDA9DF SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE65 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xE9C PUSH8 0xDE41BA4FC9D91AD9 PUSH32 0x0 DUP5 PUSH2 0x15E4 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH2 0xED0 SWAP2 SWAP1 DUP2 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 ADD PUSH2 0x23DA JUMP JUMPDEST PUSH1 0xA SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xB DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP PUSH1 0xF DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x35EA6A75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x35EA6A75 SWAP1 PUSH1 0x24 ADD PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFA3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFC7 SWAP2 SWAP1 PUSH2 0x241A JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE SWAP8 SWAP13 POP SWAP5 SWAP11 POP SWAP3 SWAP9 POP PUSH1 0x0 SWAP8 POP POP PUSH1 0xA0 SWAP1 SWAP5 ADD SWAP5 POP PUSH2 0x1007 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x104B PUSH8 0xDE41BA4FC9D91AD9 PUSH32 0x0 DUP4 PUSH2 0x15E4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH2 0x107C SWAP2 DUP2 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 ADD PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10F2 SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10FE PUSH2 0x155F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1153 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1177 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1182 PUSH2 0x1BC3 JUMP JUMPDEST PUSH1 0x10 DUP2 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1206 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x37E9A827 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 ADD DUP5 SWAP1 MSTORE PUSH4 0xFFFFFFFF DUP10 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x64 DUP5 ADD MSTORE AND SWAP1 PUSH4 0x6FD3504E SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x126E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1292 SWAP2 SWAP1 PUSH2 0x2510 JUMP JUMPDEST POP PUSH2 0x129D DUP6 DUP6 PUSH2 0x1D3E JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x60 ADD MLOAD DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x12C1 SWAP2 SWAP1 PUSH2 0x252D JUMP JUMPDEST SWAP3 POP SWAP3 POP POP PUSH1 0x0 PUSH2 0x12D0 PUSH2 0x155F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x131E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1342 SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA SLOAD DUP3 DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x135E SWAP2 SWAP1 PUSH2 0x2356 JUMP JUMPDEST PUSH2 0x1368 SWAP2 SWAP1 PUSH2 0x2356 JUMP JUMPDEST PUSH2 0x1372 SWAP2 SWAP1 PUSH2 0x236D JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1386 SWAP2 SWAP1 PUSH2 0x256D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 DUP5 PUSH2 0x13AF PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x236D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x141E SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP2 PUSH4 0x69328DEC SWAP2 AND PUSH2 0x1447 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x236D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP9 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x149D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x129D SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1553 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x10 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0xF ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x1510 JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x26B1D5F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D3 SWAP2 SWAP1 PUSH2 0x2580 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1621 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0xC0 DUP3 ADD MSTORE DUP1 PUSH1 0xE0 DUP2 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 DUP2 MSTORE SWAP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE SWAP2 DUP2 ADD DUP4 MSTORE SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1672 JUMPI SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 ADD DUP3 MSTORE PUSH3 0xF4240 SWAP1 DUP2 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x24 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 MLOAD DUP1 DUP3 SUB SWAP1 SWAP3 ADD DUP3 MSTORE PUSH1 0x44 ADD DUP3 MSTORE SWAP2 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x97A657C9 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 SWAP2 ADD MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x20487DED PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x20487DED SWAP1 PUSH2 0x1731 SWAP1 DUP10 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x25E3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x174E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1772 SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17DF SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x1876 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x182E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1852 SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4787A103 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7C4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18EF SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x96F4E9F9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x96F4E9F9 SWAP1 PUSH2 0x1922 SWAP1 DUP10 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x25E3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1941 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1965 SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND DUP3 MSTORE SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND SWAP1 DUP5 SWAP1 PUSH32 0x9FB548811CFE022BA6400D8533A80D63FBC228E596F93603959DC47B1886AF54 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A15 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A39 SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A45 PUSH2 0x155F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1ABE SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 DUP3 AND SWAP1 PUSH4 0xE8EDA9DF SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE9C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B39 DUP3 PUSH2 0x1D8B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xFF AND PUSH1 0x0 SUB PUSH2 0x1B53 JUMPI PUSH2 0x1B4F DUP3 PUSH2 0x1052 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1 SUB PUSH2 0x1B67 JUMPI PUSH2 0x1B4F DUP3 PUSH2 0x12A6 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x2 SUB PUSH2 0x1B7B JUMPI PUSH2 0x1B4F DUP3 PUSH2 0xEA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420636F6D6D616E642066726F6D204D61737465720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C10 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C34 SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C40 PUSH2 0x155F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C95 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CB9 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1A4CA37B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE SWAP1 DUP3 AND SWAP1 PUSH4 0x69328DEC SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D13 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D37 SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x104B DUP5 DUP5 DUP4 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x60 ADD MLOAD DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1DA6 SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1DA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1DA6 DUP2 PUSH2 0x1DD7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1E3C DUP2 PUSH2 0x1E09 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1E5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1E73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1E8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1EA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1EBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1ECB DUP9 DUP4 DUP10 ADD PUSH2 0x1E4A JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EF1 DUP8 DUP3 DUP9 ADD PUSH2 0x1E4A JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1F25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0xA0 DUP2 DUP6 SUB SLT ISZERO PUSH2 0x1DA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1F88 JUMPI PUSH2 0x1F88 PUSH2 0x1F50 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1F88 JUMPI PUSH2 0x1F88 PUSH2 0x1F50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1FD8 JUMPI PUSH2 0x1FD8 PUSH2 0x1F50 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2000 DUP2 PUSH2 0x1FE0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2016 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x202F JUMPI PUSH2 0x202F PUSH2 0x1F50 JUMP JUMPDEST PUSH2 0x2042 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1FB0 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x2057 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2085 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x20A0 JUMPI PUSH2 0x20A0 PUSH2 0x1F50 JUMP JUMPDEST PUSH2 0x20AE DUP2 DUP4 PUSH1 0x5 SHL ADD PUSH2 0x1FB0 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x6 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x20CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2115 JUMPI PUSH1 0x40 DUP2 DUP10 SUB SLT ISZERO PUSH2 0x20EA JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x20F2 PUSH2 0x1F66 JUMP JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20FD DUP2 PUSH2 0x1E09 JUMP JUMPDEST DUP2 MSTORE DUP2 DUP6 ADD CALLDATALOAD DUP6 DUP3 ADD MSTORE DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 PUSH1 0x40 ADD PUSH2 0x20D1 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x213A PUSH2 0x1F8E JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD DUP2 MSTORE PUSH2 0x214C PUSH1 0x20 DUP4 ADD PUSH2 0x1FF5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x216B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2177 DUP6 DUP4 DUP7 ADD PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x219C DUP6 DUP4 DUP7 ADD PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x21B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C2 DUP5 DUP3 DUP6 ADD PUSH2 0x2074 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x21F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA9B DUP5 DUP3 DUP6 ADD PUSH2 0x2120 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1DA6 DUP2 PUSH2 0x1E09 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2260 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x223B JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x227E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1DA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xFF SWAP5 SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2316 PUSH1 0x40 DUP4 ADD DUP7 DUP9 PUSH2 0x22D9 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2329 DUP2 DUP6 DUP8 PUSH2 0x22D9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D3 CALLDATASIZE DUP4 PUSH2 0x2120 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x5D3 JUMPI PUSH2 0x5D3 PUSH2 0x2340 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x238A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x5D3 JUMPI PUSH2 0x5D3 PUSH2 0x2340 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x23C2 JUMPI PUSH2 0x23C2 PUSH2 0x2340 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x23EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23F8 DUP5 PUSH2 0x23C9 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x240F DUP2 PUSH2 0x1DD7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP14 DUP16 SUB SLT ISZERO PUSH2 0x243D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP13 MLOAD SWAP12 POP PUSH1 0x20 DUP14 ADD MLOAD SWAP11 POP PUSH1 0x40 DUP14 ADD MLOAD SWAP10 POP PUSH1 0x60 DUP14 ADD MLOAD SWAP9 POP PUSH1 0x80 DUP14 ADD MLOAD SWAP8 POP PUSH1 0xA0 DUP14 ADD MLOAD SWAP7 POP PUSH1 0xC0 DUP14 ADD MLOAD SWAP6 POP PUSH1 0xE0 DUP14 ADD MLOAD SWAP5 POP PUSH2 0x100 DUP14 ADD MLOAD SWAP4 POP PUSH2 0x120 DUP14 ADD MLOAD SWAP3 POP PUSH2 0x140 DUP14 ADD MLOAD SWAP2 POP PUSH2 0x160 DUP14 ADD MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x24A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x24CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24D6 DUP6 PUSH2 0x23C9 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x24EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x2500 DUP2 PUSH2 0x1FE0 JUMP JUMPDEST PUSH1 0x60 SWAP6 SWAP1 SWAP6 ADD MLOAD SWAP4 SWAP7 SWAP3 SWAP6 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1DA6 DUP2 PUSH2 0x1FE0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x254B DUP5 PUSH2 0x23C9 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH2 0x255B DUP2 PUSH2 0x1E09 JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x5D3 JUMPI PUSH2 0x5D3 PUSH2 0x2340 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1DA6 DUP2 PUSH2 0x1E09 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x25C3 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x25A7 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND DUP4 MSTORE PUSH1 0x20 DUP2 DUP2 DUP6 ADD MSTORE DUP5 MLOAD PUSH1 0xA0 DUP4 DUP7 ADD MSTORE PUSH2 0x260F PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x259D JUMP JUMPDEST SWAP1 POP DUP2 DUP7 ADD MLOAD PUSH1 0x3F NOT DUP1 DUP8 DUP5 SUB ADD PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0x262C DUP4 DUP4 PUSH2 0x259D JUMP JUMPDEST DUP9 DUP7 ADD MLOAD DUP9 DUP3 SUB DUP4 ADD PUSH1 0x80 DUP11 ADD MSTORE DUP1 MLOAD DUP1 DUP4 MSTORE SWAP1 DUP7 ADD SWAP5 POP PUSH1 0x0 SWAP4 POP SWAP1 DUP6 ADD SWAP1 JUMPDEST DUP1 DUP5 LT ISZERO PUSH2 0x267F JUMPI DUP5 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP7 ADD MLOAD DUP7 DUP4 ADD MSTORE SWAP4 DUP6 ADD SWAP4 PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP7 ADD SWAP1 PUSH2 0x264D JUMP JUMPDEST POP PUSH1 0x60 DUP10 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0x80 DUP10 ADD MLOAD DUP9 DUP3 SUB DUP4 ADD PUSH1 0xC0 DUP11 ADD MSTORE SWAP6 POP PUSH2 0x26AE DUP2 DUP8 PUSH2 0x259D JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DA6 DUP3 PUSH2 0x23C9 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xF9 PUSH21 0x19AAA57A5A6241791C9FF0B52B582FFB416FA15687 SHL GT PUSH28 0xAF11FE4D9F64736F6C63430008130033000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        761,
        14786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "6": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "12": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "REVERT",
      "path": "11"
    },
    "16": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "POP",
      "path": "11"
    },
    "18": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "21": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "LT",
      "path": "11"
    },
    "22": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x206"
    },
    "25": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "26": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "29": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "SHR",
      "path": "11"
    },
    "32": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "33": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA2A41A92"
    },
    "38": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "GT",
      "path": "11"
    },
    "39": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x11A"
    },
    "42": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "43": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "44": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xC86D4040"
    },
    "49": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "GT",
      "path": "11"
    },
    "50": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAD"
    },
    "53": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "54": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "55": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xD8BBA68F"
    },
    "60": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "GT",
      "path": "11"
    },
    "61": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "65": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "66": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xD8BBA68F"
    },
    "71": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "72": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x542"
    },
    "75": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "76": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "77": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE346FDFA"
    },
    "82": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "83": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x54A"
    },
    "86": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "87": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "88": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE48C59D8"
    },
    "93": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "94": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x55D"
    },
    "97": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "98": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "99": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE9644410"
    },
    "104": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "105": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x56F"
    },
    "108": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "109": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "110": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFCA4DF39"
    },
    "115": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "116": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x582"
    },
    "119": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "120": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "123": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "REVERT",
      "path": "11"
    },
    "124": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "125": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "126": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xC86D4040"
    },
    "131": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "132": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4A9"
    },
    "135": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "136": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "137": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xCA65A4FE"
    },
    "142": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "143": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4BC"
    },
    "146": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "147": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "148": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xCBEC3E30"
    },
    "153": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "154": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4E3"
    },
    "157": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "158": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "159": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xD1451BE6"
    },
    "164": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "165": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x52F"
    },
    "168": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "169": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "172": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "REVERT",
      "path": "11"
    },
    "173": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "174": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "175": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xB6B55F25"
    },
    "180": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "GT",
      "path": "11"
    },
    "181": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE9"
    },
    "184": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "185": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "186": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xB6B55F25"
    },
    "191": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "192": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x41E"
    },
    "195": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "196": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "197": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xB91DA80E"
    },
    "202": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "203": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x431"
    },
    "206": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "207": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "208": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xBD193173"
    },
    "213": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "214": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x483"
    },
    "217": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "218": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "219": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xC3F4A838"
    },
    "224": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "225": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x496"
    },
    "228": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "229": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "232": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "REVERT",
      "path": "11"
    },
    "233": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "234": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "235": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA2A41A92"
    },
    "240": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "241": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3B5"
    },
    "244": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "245": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "246": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA2FEB55A"
    },
    "251": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "252": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3DC"
    },
    "255": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "256": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "257": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xB007661B"
    },
    "262": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "263": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3EF"
    },
    "266": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "267": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "268": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xB0F479A1"
    },
    "273": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "274": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3F8"
    },
    "277": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "278": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "280": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "281": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "REVERT",
      "path": "11"
    },
    "282": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "283": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "284": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x3D2E2D61"
    },
    "289": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "GT",
      "path": "11"
    },
    "290": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x19D"
    },
    "293": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "294": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "295": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x7E96B20C"
    },
    "300": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "GT",
      "path": "11"
    },
    "301": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16C"
    },
    "304": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "305": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "306": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x7E96B20C"
    },
    "311": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "312": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x342"
    },
    "315": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "316": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "317": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x85572FFB"
    },
    "322": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "323": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x355"
    },
    "326": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "327": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "328": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x97E8B613"
    },
    "333": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "334": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x368"
    },
    "337": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "338": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "339": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x982D1F18"
    },
    "344": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "345": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x37B"
    },
    "348": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "349": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "350": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x98B3C1F8"
    },
    "355": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "356": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3A2"
    },
    "359": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "360": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "362": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "363": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "REVERT",
      "path": "11"
    },
    "364": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "365": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "366": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x3D2E2D61"
    },
    "371": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "372": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x29C"
    },
    "375": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "376": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "377": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x60E39095"
    },
    "382": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "383": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2C7"
    },
    "386": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "387": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "388": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x67062580"
    },
    "393": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "394": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2F0"
    },
    "397": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "398": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "399": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x7ADC6710"
    },
    "404": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "405": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x317"
    },
    "408": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "409": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "411": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "412": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "REVERT",
      "path": "11"
    },
    "413": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "414": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "415": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x28D74CB6"
    },
    "420": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "GT",
      "path": "11"
    },
    "421": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D9"
    },
    "424": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "425": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "426": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x28D74CB6"
    },
    "431": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "432": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x257"
    },
    "435": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "436": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "437": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x2B72DC26"
    },
    "442": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "443": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x26A"
    },
    "446": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "447": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "448": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x335D92F3"
    },
    "453": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "454": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x281"
    },
    "457": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "458": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "459": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x3BEDED9F"
    },
    "464": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "465": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x28A"
    },
    "468": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "469": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "471": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "472": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "REVERT",
      "path": "11"
    },
    "473": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "474": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "475": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x1FFC9A7"
    },
    "480": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "481": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x20B"
    },
    "484": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "485": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "486": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFDFAA97"
    },
    "491": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "492": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x233"
    },
    "495": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "496": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "497": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x1D34B4FF"
    },
    "502": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "503": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x240"
    },
    "506": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "507": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "508": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x28D41DEF"
    },
    "513": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "EQ",
      "path": "11"
    },
    "514": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x24D"
    },
    "517": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "518": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "519": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "521": {
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "522": {
      "first_revert": true,
      "fn": null,
      "offset": [
        761,
        14786
      ],
      "op": "REVERT",
      "path": "11"
    },
    "523": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "524": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21E"
    },
    "527": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x219"
    },
    "530": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "531": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "533": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DAD"
    },
    "536": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        1405,
        1614
      ],
      "op": "JUMP",
      "path": "1"
    },
    "537": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "538": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5A2"
    },
    "541": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        1405,
        1614
      ],
      "op": "JUMP",
      "path": "1"
    },
    "542": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "543": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "545": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "546": {
      "op": "SWAP1"
    },
    "547": {
      "op": "ISZERO"
    },
    "548": {
      "op": "ISZERO"
    },
    "549": {
      "op": "DUP2"
    },
    "550": {
      "op": "MSTORE"
    },
    "551": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "553": {
      "op": "ADD"
    },
    "554": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "555": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "557": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "558": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "DUP1",
      "path": "1"
    },
    "559": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "560": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "SUB",
      "path": "1"
    },
    "561": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "562": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "RETURN",
      "path": "1"
    },
    "563": {
      "offset": [
        2899,
        2935
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "564": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2899,
        2935
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xF"
    },
    "566": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2899,
        2935
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "567": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2899,
        2935
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x21E"
    },
    "570": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2899,
        2935
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "571": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2899,
        2935
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "573": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2899,
        2935
      ],
      "op": "AND",
      "path": "11"
    },
    "574": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2899,
        2935
      ],
      "op": "DUP2",
      "path": "11"
    },
    "575": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2899,
        2935
      ],
      "op": "JUMP",
      "path": "11"
    },
    "576": {
      "offset": [
        2400,
        2432
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "577": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2400,
        2432
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x8"
    },
    "579": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2400,
        2432
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "580": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2400,
        2432
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x21E"
    },
    "583": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2400,
        2432
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "584": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2400,
        2432
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "586": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2400,
        2432
      ],
      "op": "AND",
      "path": "11"
    },
    "587": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2400,
        2432
      ],
      "op": "DUP2",
      "path": "11"
    },
    "588": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2400,
        2432
      ],
      "op": "JUMP",
      "path": "11"
    },
    "589": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14439,
        14704
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "590": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14439,
        14704
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x255"
    },
    "593": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14439,
        14704
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5D9"
    },
    "596": {
      "fn": "Slave.testingReturnFunds",
      "jump": "i",
      "offset": [
        14439,
        14704
      ],
      "op": "JUMP",
      "path": "11"
    },
    "597": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14439,
        14704
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "598": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14439,
        14704
      ],
      "op": "STOP",
      "path": "11"
    },
    "599": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12191,
        12613
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "600": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12191,
        12613
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x255"
    },
    "603": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12191,
        12613
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x265"
    },
    "606": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12191,
        12613
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "607": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12191,
        12613
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "609": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12191,
        12613
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1DEC"
    },
    "612": {
      "fn": "Slave.sendDepositByNonce",
      "jump": "i",
      "offset": [
        12191,
        12613
      ],
      "op": "JUMP",
      "path": "11"
    },
    "613": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12191,
        12613
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "614": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12191,
        12613
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x74E"
    },
    "617": {
      "fn": "Slave.sendDepositByNonce",
      "jump": "i",
      "offset": [
        12191,
        12613
      ],
      "op": "JUMP",
      "path": "11"
    },
    "618": {
      "offset": [
        2439,
        2470
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "619": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2439,
        2470
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x273"
    },
    "622": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2439,
        2470
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x9"
    },
    "624": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2439,
        2470
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "625": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2439,
        2470
      ],
      "op": "DUP2",
      "path": "11"
    },
    "626": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2439,
        2470
      ],
      "op": "JUMP",
      "path": "11"
    },
    "627": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2439,
        2470
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "628": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2439,
        2470
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "630": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2439,
        2470
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "631": {
      "op": "SWAP1"
    },
    "632": {
      "op": "DUP2"
    },
    "633": {
      "op": "MSTORE"
    },
    "634": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "636": {
      "op": "ADD"
    },
    "637": {
      "offset": [
        2439,
        2470
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x22A"
    },
    "640": {
      "op": "JUMP"
    },
    "641": {
      "offset": [
        2534,
        2573
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "642": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2534,
        2573
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x273"
    },
    "645": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2534,
        2573
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "647": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2534,
        2573
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "648": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2534,
        2573
      ],
      "op": "DUP2",
      "path": "11"
    },
    "649": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2534,
        2573
      ],
      "op": "JUMP",
      "path": "11"
    },
    "650": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        14710,
        14784
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "651": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        14710,
        14784
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x255"
    },
    "654": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        14758,
        14770
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 0,
      "value": "0x8"
    },
    "656": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        14758,
        14777
      ],
      "op": "DUP1",
      "path": "11"
    },
    "657": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        14758,
        14777
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "658": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "660": {
      "op": "NOT"
    },
    "661": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        14758,
        14777
      ],
      "op": "AND",
      "path": "11"
    },
    "662": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        14773,
        14777
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "664": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        14758,
        14777
      ],
      "op": "OR",
      "path": "11"
    },
    "665": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        14758,
        14777
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "666": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        14758,
        14777
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "667": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        14710,
        14784
      ],
      "op": "JUMP",
      "path": "11"
    },
    "668": {
      "offset": [
        2117,
        2161
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "669": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2117,
        2161
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "671": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2117,
        2161
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "672": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2117,
        2161
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2AF"
    },
    "675": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2117,
        2161
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "682": {
      "op": "SHL"
    },
    "683": {
      "op": "SUB"
    },
    "684": {
      "offset": [
        2117,
        2161
      ],
      "op": "AND",
      "path": "11"
    },
    "685": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2117,
        2161
      ],
      "op": "DUP2",
      "path": "11"
    },
    "686": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2117,
        2161
      ],
      "op": "JUMP",
      "path": "11"
    },
    "687": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2117,
        2161
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "688": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2117,
        2161
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "690": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2117,
        2161
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "695": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "697": {
      "op": "SHL"
    },
    "698": {
      "op": "SUB"
    },
    "699": {
      "op": "SWAP1"
    },
    "700": {
      "op": "SWAP2"
    },
    "701": {
      "op": "AND"
    },
    "702": {
      "op": "DUP2"
    },
    "703": {
      "op": "MSTORE"
    },
    "704": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "706": {
      "op": "ADD"
    },
    "707": {
      "offset": [
        2117,
        2161
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x22A"
    },
    "710": {
      "op": "JUMP"
    },
    "711": {
      "offset": [
        2839,
        2892
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "712": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2839,
        2892
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2AF"
    },
    "715": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2839,
        2892
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2D5"
    },
    "718": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2839,
        2892
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "719": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2839,
        2892
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "721": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2839,
        2892
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1DEC"
    },
    "724": {
      "fn": "Slave.testingActivateNode",
      "jump": "i",
      "offset": [
        2839,
        2892
      ],
      "op": "JUMP",
      "path": "11"
    },
    "725": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2839,
        2892
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "726": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2839,
        2892
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE"
    },
    "728": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2839,
        2892
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "730": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2839,
        2892
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "731": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2839,
        2892
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "733": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2839,
        2892
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "734": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2839,
        2892
      ],
      "op": "DUP2",
      "path": "11"
    },
    "735": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2839,
        2892
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "736": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2839,
        2892
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "738": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2839,
        2892
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "739": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2839,
        2892
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "740": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2839,
        2892
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "747": {
      "op": "SHL"
    },
    "748": {
      "op": "SUB"
    },
    "749": {
      "offset": [
        2839,
        2892
      ],
      "op": "AND",
      "path": "11"
    },
    "750": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2839,
        2892
      ],
      "op": "DUP2",
      "path": "11"
    },
    "751": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2839,
        2892
      ],
      "op": "JUMP",
      "path": "11"
    },
    "752": {
      "offset": [
        1808,
        1862
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "753": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        1808,
        1862
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2AF"
    },
    "756": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        1808,
        1862
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "789": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        1808,
        1862
      ],
      "op": "DUP2",
      "path": "11"
    },
    "790": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        1808,
        1862
      ],
      "op": "JUMP",
      "path": "11"
    },
    "791": {
      "offset": [
        2777,
        2832
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "792": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2777,
        2832
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32A"
    },
    "795": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2777,
        2832
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x325"
    },
    "798": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2777,
        2832
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "799": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2777,
        2832
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "801": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2777,
        2832
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E1E"
    },
    "804": {
      "fn": "Slave.testingActivateNode",
      "jump": "i",
      "offset": [
        2777,
        2832
      ],
      "op": "JUMP",
      "path": "11"
    },
    "805": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2777,
        2832
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "806": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2777,
        2832
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x842"
    },
    "809": {
      "fn": "Slave.testingActivateNode",
      "jump": "i",
      "offset": [
        2777,
        2832
      ],
      "op": "JUMP",
      "path": "11"
    },
    "810": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2777,
        2832
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "811": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2777,
        2832
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "813": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2777,
        2832
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "820": {
      "op": "SHL"
    },
    "821": {
      "op": "SUB"
    },
    "822": {
      "op": "SWAP1"
    },
    "823": {
      "op": "SWAP2"
    },
    "824": {
      "op": "AND"
    },
    "825": {
      "op": "DUP2"
    },
    "826": {
      "op": "MSTORE"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "829": {
      "op": "ADD"
    },
    "830": {
      "offset": [
        2777,
        2832
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x22A"
    },
    "833": {
      "op": "JUMP"
    },
    "834": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13221,
        13626
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "835": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13221,
        13626
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x255"
    },
    "838": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13221,
        13626
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x350"
    },
    "841": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13221,
        13626
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "842": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13221,
        13626
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "844": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13221,
        13626
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E92"
    },
    "847": {
      "fn": "Slave.claimAssetsFromBridge",
      "jump": "i",
      "offset": [
        13221,
        13626
      ],
      "op": "JUMP",
      "path": "11"
    },
    "848": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13221,
        13626
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "849": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13221,
        13626
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x88E"
    },
    "852": {
      "fn": "Slave.claimAssetsFromBridge",
      "jump": "i",
      "offset": [
        13221,
        13626
      ],
      "op": "JUMP",
      "path": "11"
    },
    "853": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1660,
        1790
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "854": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1660,
        1790
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x255"
    },
    "857": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1660,
        1790
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x363"
    },
    "860": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1660,
        1790
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "861": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1660,
        1790
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "863": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1660,
        1790
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EFD"
    },
    "866": {
      "fn": "CCIPReceiver.ccipReceive",
      "jump": "i",
      "offset": [
        1660,
        1790
      ],
      "op": "JUMP",
      "path": "1"
    },
    "867": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1660,
        1790
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "868": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1660,
        1790
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x987"
    },
    "871": {
      "fn": "CCIPReceiver.ccipReceive",
      "jump": "i",
      "offset": [
        1660,
        1790
      ],
      "op": "JUMP",
      "path": "1"
    },
    "872": {
      "offset": [
        2069,
        2111
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "873": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        2069,
        2111
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "875": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        2069,
        2111
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "876": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        2069,
        2111
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2AF"
    },
    "879": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        2069,
        2111
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "884": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "886": {
      "op": "SHL"
    },
    "887": {
      "op": "SUB"
    },
    "888": {
      "offset": [
        2069,
        2111
      ],
      "op": "AND",
      "path": "11"
    },
    "889": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        2069,
        2111
      ],
      "op": "DUP2",
      "path": "11"
    },
    "890": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        2069,
        2111
      ],
      "op": "JUMP",
      "path": "11"
    },
    "891": {
      "offset": [
        1868,
        1919
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "892": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1868,
        1919
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2AF"
    },
    "895": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1868,
        1919
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "928": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1868,
        1919
      ],
      "op": "DUP2",
      "path": "11"
    },
    "929": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1868,
        1919
      ],
      "op": "JUMP",
      "path": "11"
    },
    "930": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7616,
        7924
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "931": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7616,
        7924
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x273"
    },
    "934": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7616,
        7924
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3B0"
    },
    "937": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7616,
        7924
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "938": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7616,
        7924
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "940": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7616,
        7924
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F37"
    },
    "943": {
      "fn": "Slave.calculateSharesValue",
      "jump": "i",
      "offset": [
        7616,
        7924
      ],
      "op": "JUMP",
      "path": "11"
    },
    "944": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7616,
        7924
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "945": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7616,
        7924
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9E6"
    },
    "948": {
      "fn": "Slave.calculateSharesValue",
      "jump": "i",
      "offset": [
        7616,
        7924
      ],
      "op": "JUMP",
      "path": "11"
    },
    "949": {
      "offset": [
        1762,
        1802
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "950": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        1762,
        1802
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2AF"
    },
    "953": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        1762,
        1802
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "986": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        1762,
        1802
      ],
      "op": "DUP2",
      "path": "11"
    },
    "987": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        1762,
        1802
      ],
      "op": "JUMP",
      "path": "11"
    },
    "988": {
      "offset": [
        2579,
        2611
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "989": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        2579,
        2611
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xB"
    },
    "991": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        2579,
        2611
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "992": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        2579,
        2611
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32A"
    },
    "995": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        2579,
        2611
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1002": {
      "op": "SHL"
    },
    "1003": {
      "op": "SUB"
    },
    "1004": {
      "offset": [
        2579,
        2611
      ],
      "op": "AND",
      "path": "11"
    },
    "1005": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        2579,
        2611
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1006": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        2579,
        2611
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1007": {
      "offset": [
        2973,
        3005
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1008": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        2973,
        3005
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x273"
    },
    "1011": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        2973,
        3005
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x10"
    },
    "1013": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        2973,
        3005
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1014": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        2973,
        3005
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1015": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        2973,
        3005
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1016": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        2205,
        2295
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1017": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        2277,
        2289
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 1,
      "value": "0x0"
    },
    "1050": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        2205,
        2295
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AF"
    },
    "1053": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        2205,
        2295
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1054": {
      "fn": "Slave.deposit",
      "offset": [
        11013,
        12185
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1055": {
      "fn": "Slave.deposit",
      "offset": [
        11013,
        12185
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x255"
    },
    "1058": {
      "fn": "Slave.deposit",
      "offset": [
        11013,
        12185
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x42C"
    },
    "1061": {
      "fn": "Slave.deposit",
      "offset": [
        11013,
        12185
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "1062": {
      "fn": "Slave.deposit",
      "offset": [
        11013,
        12185
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1064": {
      "fn": "Slave.deposit",
      "offset": [
        11013,
        12185
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F37"
    },
    "1067": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        11013,
        12185
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1068": {
      "fn": "Slave.deposit",
      "offset": [
        11013,
        12185
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1069": {
      "fn": "Slave.deposit",
      "offset": [
        11013,
        12185
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAA3"
    },
    "1072": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        11013,
        12185
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1073": {
      "offset": [
        2709,
        2771
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1074": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x464"
    },
    "1077": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x43F"
    },
    "1080": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "1081": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1083": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1DEC"
    },
    "1086": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        2709,
        2771
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1087": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1088": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC"
    },
    "1090": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1092": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1093": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1095": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1096": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1097": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1098": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1100": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1101": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1102": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1103": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1104": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1106": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1107": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1108": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "ADD",
      "path": "11"
    },
    "1109": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1116": {
      "op": "SHL"
    },
    "1117": {
      "op": "SUB"
    },
    "1118": {
      "offset": [
        2709,
        2771
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1119": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1120": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "AND",
      "path": "11"
    },
    "1121": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1122": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1123": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1124": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1125": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1127": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1128": {
      "fn": "Slave.deposit",
      "offset": [
        2709,
        2771
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1135": {
      "op": "SHL"
    },
    "1136": {
      "op": "SUB"
    },
    "1137": {
      "op": "SWAP1"
    },
    "1138": {
      "op": "SWAP4"
    },
    "1139": {
      "op": "AND"
    },
    "1140": {
      "op": "DUP4"
    },
    "1141": {
      "op": "MSTORE"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1144": {
      "op": "DUP4"
    },
    "1145": {
      "op": "ADD"
    },
    "1146": {
      "op": "SWAP2"
    },
    "1147": {
      "op": "SWAP1"
    },
    "1148": {
      "op": "SWAP2"
    },
    "1149": {
      "op": "MSTORE"
    },
    "1150": {
      "op": "ADD"
    },
    "1151": {
      "offset": [
        2709,
        2771
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x22A"
    },
    "1154": {
      "op": "JUMP"
    },
    "1155": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6466,
        6924
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1156": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6466,
        6924
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x255"
    },
    "1159": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6466,
        6924
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x491"
    },
    "1162": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6466,
        6924
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "1163": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6466,
        6924
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1165": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6466,
        6924
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x21CE"
    },
    "1168": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "jump": "i",
      "offset": [
        6466,
        6924
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1169": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6466,
        6924
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1170": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6466,
        6924
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEA4"
    },
    "1173": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "jump": "i",
      "offset": [
        6466,
        6924
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1174": {
      "offset": [
        2038,
        2063
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1175": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2038,
        2063
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "1177": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2038,
        2063
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1178": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2038,
        2063
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2AF"
    },
    "1181": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2038,
        2063
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1188": {
      "op": "SHL"
    },
    "1189": {
      "op": "SUB"
    },
    "1190": {
      "offset": [
        2038,
        2063
      ],
      "op": "AND",
      "path": "11"
    },
    "1191": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2038,
        2063
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1192": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2038,
        2063
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1193": {
      "offset": [
        2008,
        2032
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1194": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2008,
        2032
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "1196": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2008,
        2032
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1197": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2008,
        2032
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2AF"
    },
    "1200": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2008,
        2032
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1207": {
      "op": "SHL"
    },
    "1208": {
      "op": "SUB"
    },
    "1209": {
      "offset": [
        2008,
        2032
      ],
      "op": "AND",
      "path": "11"
    },
    "1210": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2008,
        2032
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1211": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2008,
        2032
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1212": {
      "offset": [
        1665,
        1723
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1213": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        1665,
        1723
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4CB"
    },
    "1216": {
      "offset": [
        1703,
        1723
      ],
      "op": "PUSH8",
      "path": "11",
      "value": "0xDE41BA4FC9D91AD9"
    },
    "1225": {
      "offset": [
        1665,
        1723
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1226": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        1665,
        1723
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1227": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        1665,
        1723
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1228": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        1665,
        1723
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1230": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        1665,
        1723
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1237": {
      "op": "SHL"
    },
    "1238": {
      "op": "SUB"
    },
    "1239": {
      "op": "SWAP1"
    },
    "1240": {
      "op": "SWAP2"
    },
    "1241": {
      "op": "AND"
    },
    "1242": {
      "op": "DUP2"
    },
    "1243": {
      "op": "MSTORE"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1246": {
      "op": "ADD"
    },
    "1247": {
      "offset": [
        1665,
        1723
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x22A"
    },
    "1250": {
      "op": "JUMP"
    },
    "1251": {
      "offset": [
        2279,
        2363
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1252": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x513"
    },
    "1255": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4F1"
    },
    "1258": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "1259": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1261": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F37"
    },
    "1264": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "jump": "i",
      "offset": [
        2279,
        2363
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1265": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1266": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "1268": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1270": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1271": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1273": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1274": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1275": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1276": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1278": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1279": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1280": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1281": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1282": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1284": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1285": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1286": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "ADD",
      "path": "11"
    },
    "1287": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1288": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "1293": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1294": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1295": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "AND",
      "path": "11"
    },
    "1296": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1297": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1298": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1299": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1300": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1302": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1303": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2279,
        2363
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1304": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1309": {
      "op": "SWAP1"
    },
    "1310": {
      "op": "SWAP4"
    },
    "1311": {
      "op": "AND"
    },
    "1312": {
      "op": "DUP4"
    },
    "1313": {
      "op": "MSTORE"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1316": {
      "op": "DUP4"
    },
    "1317": {
      "op": "ADD"
    },
    "1318": {
      "op": "SWAP2"
    },
    "1319": {
      "op": "SWAP1"
    },
    "1320": {
      "op": "SWAP2"
    },
    "1321": {
      "op": "MSTORE"
    },
    "1322": {
      "op": "ADD"
    },
    "1323": {
      "offset": [
        2279,
        2363
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x22A"
    },
    "1326": {
      "op": "JUMP"
    },
    "1327": {
      "offset": [
        2369,
        2393
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1328": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x273"
    },
    "1331": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x53D"
    },
    "1334": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "1335": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1337": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F37"
    },
    "1340": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "jump": "i",
      "offset": [
        2369,
        2393
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1341": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1342": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF11"
    },
    "1345": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "jump": "i",
      "offset": [
        2369,
        2393
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1346": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12619,
        13216
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1347": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12619,
        13216
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x255"
    },
    "1350": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12619,
        13216
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF32"
    },
    "1353": {
      "fn": "Slave.sendAaveData",
      "jump": "i",
      "offset": [
        12619,
        13216
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1354": {
      "fn": "Slave.warpAssets",
      "offset": [
        5077,
        6108
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1355": {
      "fn": "Slave.warpAssets",
      "offset": [
        5077,
        6108
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x255"
    },
    "1358": {
      "fn": "Slave.warpAssets",
      "offset": [
        5077,
        6108
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x558"
    },
    "1361": {
      "fn": "Slave.warpAssets",
      "offset": [
        5077,
        6108
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "1362": {
      "fn": "Slave.warpAssets",
      "offset": [
        5077,
        6108
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1364": {
      "fn": "Slave.warpAssets",
      "offset": [
        5077,
        6108
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x21CE"
    },
    "1367": {
      "fn": "Slave.warpAssets",
      "jump": "i",
      "offset": [
        5077,
        6108
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1368": {
      "fn": "Slave.warpAssets",
      "offset": [
        5077,
        6108
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1369": {
      "fn": "Slave.warpAssets",
      "offset": [
        5077,
        6108
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1052"
    },
    "1372": {
      "fn": "Slave.warpAssets",
      "jump": "i",
      "offset": [
        5077,
        6108
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1373": {
      "offset": [
        2942,
        2967
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1374": {
      "fn": "Slave.warpAssets",
      "offset": [
        2942,
        2967
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xF"
    },
    "1376": {
      "fn": "Slave.warpAssets",
      "offset": [
        2942,
        2967
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1377": {
      "fn": "Slave.warpAssets",
      "offset": [
        2942,
        2967
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x21E"
    },
    "1380": {
      "fn": "Slave.warpAssets",
      "offset": [
        2942,
        2967
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1381": {
      "fn": "Slave.warpAssets",
      "offset": [
        2942,
        2967
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "1384": {
      "fn": "Slave.warpAssets",
      "offset": [
        2942,
        2967
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1385": {
      "fn": "Slave.warpAssets",
      "offset": [
        2942,
        2967
      ],
      "op": "DIV",
      "path": "11"
    },
    "1386": {
      "fn": "Slave.warpAssets",
      "offset": [
        2942,
        2967
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "1388": {
      "fn": "Slave.warpAssets",
      "offset": [
        2942,
        2967
      ],
      "op": "AND",
      "path": "11"
    },
    "1389": {
      "fn": "Slave.warpAssets",
      "offset": [
        2942,
        2967
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1390": {
      "fn": "Slave.warpAssets",
      "offset": [
        2942,
        2967
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1391": {
      "fn": "Slave.withdraw",
      "offset": [
        6930,
        7574
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1392": {
      "fn": "Slave.withdraw",
      "offset": [
        6930,
        7574
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x255"
    },
    "1395": {
      "fn": "Slave.withdraw",
      "offset": [
        6930,
        7574
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x57D"
    },
    "1398": {
      "fn": "Slave.withdraw",
      "offset": [
        6930,
        7574
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "1399": {
      "fn": "Slave.withdraw",
      "offset": [
        6930,
        7574
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1401": {
      "fn": "Slave.withdraw",
      "offset": [
        6930,
        7574
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x21CE"
    },
    "1404": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        6930,
        7574
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1405": {
      "fn": "Slave.withdraw",
      "offset": [
        6930,
        7574
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1406": {
      "fn": "Slave.withdraw",
      "offset": [
        6930,
        7574
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x12A6"
    },
    "1409": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        6930,
        7574
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1410": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4697,
        4849
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1411": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4697,
        4849
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x595"
    },
    "1414": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4697,
        4849
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x590"
    },
    "1417": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4697,
        4849
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "1418": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4697,
        4849
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1420": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4697,
        4849
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2202"
    },
    "1423": {
      "fn": "Slave.getUserNonces",
      "jump": "i",
      "offset": [
        4697,
        4849
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1424": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4697,
        4849
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1425": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4697,
        4849
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14C1"
    },
    "1428": {
      "fn": "Slave.getUserNonces",
      "jump": "i",
      "offset": [
        4697,
        4849
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1429": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4697,
        4849
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1430": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4697,
        4849
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1432": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4697,
        4849
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1433": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4697,
        4849
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x22A"
    },
    "1436": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4697,
        4849
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1437": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4697,
        4849
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1438": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4697,
        4849
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x221F"
    },
    "1441": {
      "fn": "Slave.getUserNonces",
      "jump": "i",
      "offset": [
        4697,
        4849
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1442": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1443": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1490,
        1494
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1451": {
      "op": "SHL"
    },
    "1452": {
      "op": "SUB"
    },
    "1453": {
      "op": "NOT"
    },
    "1454": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1565
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 2
    },
    "1455": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1565
      ],
      "op": "AND",
      "path": "1"
    },
    "1456": {
      "op": "PUSH4",
      "value": "0x85572FFB"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1463": {
      "op": "SHL"
    },
    "1464": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1565
      ],
      "op": "EQ",
      "path": "1"
    },
    "1465": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1565
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1466": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5D3"
    },
    "1469": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1470": {
      "op": "POP"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1477": {
      "op": "SHL"
    },
    "1478": {
      "op": "SUB"
    },
    "1479": {
      "op": "NOT"
    },
    "1480": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1569,
        1609
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1481": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1569,
        1609
      ],
      "op": "AND",
      "path": "1"
    },
    "1482": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1489": {
      "op": "SHL"
    },
    "1490": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1569,
        1609
      ],
      "op": "EQ",
      "path": "1"
    },
    "1491": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1492": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1502,
        1609
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1493": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1494": {
      "op": "POP"
    },
    "1495": {
      "op": "POP"
    },
    "1496": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        1405,
        1614
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1497": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14439,
        14704
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1498": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14511,
        14521
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "1500": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14511,
        14521
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1501": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1503": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1504": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1511": {
      "op": "SHL"
    },
    "1512": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1513": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1514": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14541,
        14545
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "1515": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1517": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1518": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "ADD",
      "path": "11"
    },
    "1519": {
      "op": "MSTORE"
    },
    "1520": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14486,
        14501
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1522": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14486,
        14501
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1529": {
      "op": "SHL"
    },
    "1530": {
      "op": "SUB"
    },
    "1531": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14511,
        14521
      ],
      "op": "AND",
      "path": "11"
    },
    "1532": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14511,
        14521
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1533": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14532
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "1538": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14532
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1541": {
      "op": "ADD"
    },
    "1542": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1544": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1546": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1547": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1548": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1549": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "SUB",
      "path": "11"
    },
    "1550": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1551": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1552": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "GAS",
      "path": "11"
    },
    "1553": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "1554": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1555": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1556": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1557": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x622"
    },
    "1560": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1561": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1562": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1564": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1565": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1566": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1567": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1569": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1570": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1571": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "POP",
      "path": "11"
    },
    "1572": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "POP",
      "path": "11"
    },
    "1573": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "POP",
      "path": "11"
    },
    "1574": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "POP",
      "path": "11"
    },
    "1575": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1577": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1578": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1579": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1581": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "NOT",
      "path": "11"
    },
    "1582": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1584": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1585": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "ADD",
      "path": "11"
    },
    "1586": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "AND",
      "path": "11"
    },
    "1587": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1588": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "ADD",
      "path": "11"
    },
    "1589": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1590": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1592": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1593": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "POP",
      "path": "11"
    },
    "1594": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1595": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "ADD",
      "path": "11"
    },
    "1596": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1597": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x646"
    },
    "1600": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1601": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1602": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x226C"
    },
    "1605": {
      "fn": "Slave.testingReturnFunds",
      "jump": "i",
      "offset": [
        14504,
        14547
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1606": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14504,
        14547
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1607": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14486,
        14547
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1608": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14486,
        14547
      ],
      "op": "POP",
      "path": "11"
    },
    "1609": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14558,
        14570
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1611": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14573,
        14583
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x652"
    },
    "1614": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14573,
        14581
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x155F"
    },
    "1617": {
      "fn": "Slave.testingReturnFunds",
      "jump": "i",
      "offset": [
        14573,
        14583
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1618": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14573,
        14583
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1619": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14601,
        14611
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 3,
      "value": "0x3"
    },
    "1621": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14601,
        14611
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1622": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1624": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1625": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1632": {
      "op": "SHL"
    },
    "1633": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1634": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1641": {
      "op": "SHL"
    },
    "1642": {
      "op": "SUB"
    },
    "1643": {
      "op": "DUP1"
    },
    "1644": {
      "op": "DUP5"
    },
    "1645": {
      "op": "AND"
    },
    "1646": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1648": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1649": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "ADD",
      "path": "11"
    },
    "1650": {
      "op": "MSTORE"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1653": {
      "op": "DUP3"
    },
    "1654": {
      "op": "ADD"
    },
    "1655": {
      "op": "DUP7"
    },
    "1656": {
      "op": "SWAP1"
    },
    "1657": {
      "op": "MSTORE"
    },
    "1658": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14558,
        14583
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1659": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14558,
        14583
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "1660": {
      "op": "POP"
    },
    "1661": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14601,
        14611
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1662": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14601,
        14611
      ],
      "op": "AND",
      "path": "11"
    },
    "1663": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14601,
        14611
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1664": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14620
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95EA7B3"
    },
    "1669": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14620
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1672": {
      "op": "ADD"
    },
    "1673": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1675": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1677": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1678": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1679": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1680": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "SUB",
      "path": "11"
    },
    "1681": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1682": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1684": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "DUP8",
      "path": "11"
    },
    "1685": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "GAS",
      "path": "11"
    },
    "1686": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "CALL",
      "path": "11"
    },
    "1687": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1688": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1689": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1690": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6A7"
    },
    "1693": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1694": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1695": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1697": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1698": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1699": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1700": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1702": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1703": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1704": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "POP",
      "path": "11"
    },
    "1705": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "POP",
      "path": "11"
    },
    "1706": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "POP",
      "path": "11"
    },
    "1707": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "POP",
      "path": "11"
    },
    "1708": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1710": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1711": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1712": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1714": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "NOT",
      "path": "11"
    },
    "1715": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1717": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1718": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "ADD",
      "path": "11"
    },
    "1719": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "AND",
      "path": "11"
    },
    "1720": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1721": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "ADD",
      "path": "11"
    },
    "1722": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1723": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1725": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1726": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "POP",
      "path": "11"
    },
    "1727": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1728": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "ADD",
      "path": "11"
    },
    "1729": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1730": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6CB"
    },
    "1733": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1734": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1735": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2285"
    },
    "1738": {
      "fn": "Slave.testingReturnFunds",
      "jump": "i",
      "offset": [
        14594,
        14635
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1739": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14594,
        14635
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1740": {
      "op": "POP"
    },
    "1741": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14666,
        14675
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 4,
      "value": "0x2"
    },
    "1743": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14666,
        14675
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1744": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1746": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1747": {
      "op": "PUSH4",
      "value": "0x1A4CA37B"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1754": {
      "op": "SHL"
    },
    "1755": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1756": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1763": {
      "op": "SHL"
    },
    "1764": {
      "op": "SUB"
    },
    "1765": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14666,
        14675
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1766": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14666,
        14675
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1767": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14666,
        14675
      ],
      "op": "AND",
      "path": "11"
    },
    "1768": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1770": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1771": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "ADD",
      "path": "11"
    },
    "1772": {
      "op": "MSTORE"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1775": {
      "op": "DUP2"
    },
    "1776": {
      "op": "ADD"
    },
    "1777": {
      "op": "DUP5"
    },
    "1778": {
      "op": "SWAP1"
    },
    "1779": {
      "op": "MSTORE"
    },
    "1780": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14686,
        14696
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1783": {
      "op": "DUP3"
    },
    "1784": {
      "op": "ADD"
    },
    "1785": {
      "op": "MSTORE"
    },
    "1786": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14665
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1787": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14665
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1788": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14665
      ],
      "op": "AND",
      "path": "11"
    },
    "1789": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14665
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1790": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14665
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x69328DEC"
    },
    "1795": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14665
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1798": {
      "op": "ADD"
    },
    "1799": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1801": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1803": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1804": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1805": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1806": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "SUB",
      "path": "11"
    },
    "1807": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1808": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1810": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "DUP8",
      "path": "11"
    },
    "1811": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "GAS",
      "path": "11"
    },
    "1812": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "CALL",
      "path": "11"
    },
    "1813": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1814": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1815": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1816": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x725"
    },
    "1819": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1820": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1821": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1823": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1824": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1825": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1826": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1828": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1829": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1830": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "POP",
      "path": "11"
    },
    "1831": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "POP",
      "path": "11"
    },
    "1832": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "POP",
      "path": "11"
    },
    "1833": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "POP",
      "path": "11"
    },
    "1834": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1836": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1837": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1838": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1840": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "NOT",
      "path": "11"
    },
    "1841": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1843": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1844": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "ADD",
      "path": "11"
    },
    "1845": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "AND",
      "path": "11"
    },
    "1846": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1847": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "ADD",
      "path": "11"
    },
    "1848": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1849": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1851": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1852": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "POP",
      "path": "11"
    },
    "1853": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1854": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "ADD",
      "path": "11"
    },
    "1855": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1856": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x749"
    },
    "1859": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1860": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1861": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x226C"
    },
    "1864": {
      "fn": "Slave.testingReturnFunds",
      "jump": "i",
      "offset": [
        14645,
        14697
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1865": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1866": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14645,
        14697
      ],
      "op": "POP",
      "path": "11"
    },
    "1867": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14476,
        14704
      ],
      "op": "POP",
      "path": "11"
    },
    "1868": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14476,
        14704
      ],
      "op": "POP",
      "path": "11"
    },
    "1869": {
      "fn": "Slave.testingReturnFunds",
      "jump": "o",
      "offset": [
        14439,
        14704
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1870": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12191,
        12613
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1877": {
      "op": "SHL"
    },
    "1878": {
      "op": "SUB"
    },
    "1879": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12273,
        12298
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 5
    },
    "1880": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12273,
        12298
      ],
      "op": "AND",
      "path": "11"
    },
    "1881": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12273,
        12298
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1883": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12273,
        12298
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1884": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12273,
        12298
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1885": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12273,
        12298
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1886": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12273,
        12290
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC"
    },
    "1888": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12273,
        12298
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1890": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12273,
        12298
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1891": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12273,
        12298
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1893": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12273,
        12298
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1894": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12273,
        12298
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1895": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12273,
        12310
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1900": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1902": {
      "op": "SHL"
    },
    "1903": {
      "op": "SUB"
    },
    "1904": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12273,
        12310
      ],
      "op": "AND",
      "path": "11"
    },
    "1905": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12314,
        12324
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1906": {
      "branch": 54,
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12273,
        12324
      ],
      "op": "EQ",
      "path": "11"
    },
    "1907": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12252,
        12383
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7CD"
    },
    "1910": {
      "branch": 54,
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12252,
        12383
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1911": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12252,
        12383
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1913": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12252,
        12383
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1914": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1920": {
      "op": "SHL"
    },
    "1921": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12252,
        12383
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1922": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12252,
        12383
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1925": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12252,
        12383
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1927": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12252,
        12383
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1928": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12252,
        12383
      ],
      "op": "ADD",
      "path": "11"
    },
    "1929": {
      "op": "MSTORE"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1934": {
      "op": "DUP3"
    },
    "1935": {
      "op": "ADD"
    },
    "1936": {
      "op": "MSTORE"
    },
    "1937": {
      "op": "PUSH32",
      "value": "0x41646472657373206E6F74206D617463682077697468206E6F6E636520646174"
    },
    "1970": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1972": {
      "op": "DUP3"
    },
    "1973": {
      "op": "ADD"
    },
    "1974": {
      "op": "MSTORE"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "1979": {
      "op": "SHL"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1982": {
      "op": "DUP3"
    },
    "1983": {
      "op": "ADD"
    },
    "1984": {
      "op": "MSTORE"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1987": {
      "op": "ADD"
    },
    "1988": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12252,
        12383
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1989": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12252,
        12383
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1991": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12252,
        12383
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1992": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12252,
        12383
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1993": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12252,
        12383
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1994": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12252,
        12383
      ],
      "op": "SUB",
      "path": "11"
    },
    "1995": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12252,
        12383
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1996": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12252,
        12383
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "11"
    },
    "1997": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12252,
        12383
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2002": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2004": {
      "op": "SHL"
    },
    "2005": {
      "op": "SUB"
    },
    "2006": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12504,
        12529
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2007": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12504,
        12529
      ],
      "op": "AND",
      "path": "11"
    },
    "2008": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12394,
        12411
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2010": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12504,
        12529
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2011": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12504,
        12529
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2012": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12504,
        12529
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2013": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12504,
        12521
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC"
    },
    "2015": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12504,
        12529
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2017": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12504,
        12529
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2018": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12504,
        12529
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2019": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12504,
        12529
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2020": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12504,
        12529
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2022": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12504,
        12529
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2023": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12504,
        12529
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2024": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12504,
        12529
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2025": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12504,
        12536
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2027": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12504,
        12536
      ],
      "op": "ADD",
      "path": "11"
    },
    "2028": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12504,
        12536
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2029": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12414,
        12546
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2030": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12414,
        12546
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2031": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12414,
        12546
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7FE"
    },
    "2034": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12414,
        12546
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2035": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12394,
        12411
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2036": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12394,
        12411
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2037": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12460,
        12470
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2038": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12460,
        12470
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2039": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12484,
        12490
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2040": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12484,
        12490
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2041": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12414,
        12546
      ],
      "op": "ADD",
      "path": "11"
    },
    "2042": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12414,
        12546
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x22A7"
    },
    "2045": {
      "fn": "Slave.sendDepositByNonce",
      "jump": "i",
      "offset": [
        12414,
        12546
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2046": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12414,
        12546
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2047": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12414,
        12546
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2049": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12414,
        12546
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2050": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12414,
        12546
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2052": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12414,
        12546
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2053": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12414,
        12546
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2054": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12414,
        12546
      ],
      "op": "SUB",
      "path": "11"
    },
    "2055": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12414,
        12546
      ],
      "op": "SUB",
      "path": "11"
    },
    "2056": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12414,
        12546
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2057": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12414,
        12546
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2058": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12414,
        12546
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2059": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12414,
        12546
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2061": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12414,
        12546
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2062": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12394,
        12546
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2063": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12394,
        12546
      ],
      "op": "POP",
      "path": "11"
    },
    "2064": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12557,
        12606
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 6,
      "value": "0x749"
    },
    "2067": {
      "offset": [
        1703,
        1723
      ],
      "op": "PUSH8",
      "path": "11",
      "value": "0xDE41BA4FC9D91AD9"
    },
    "2076": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12584,
        12599
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "2109": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12601,
        12605
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2110": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12557,
        12569
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15E4"
    },
    "2113": {
      "fn": "Slave.sendDepositByNonce",
      "jump": "i",
      "offset": [
        12557,
        12606
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2114": {
      "offset": [
        2777,
        2832
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2115": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xD"
    },
    "2117": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2119": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2120": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2121": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2123": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2124": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2126": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2128": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2129": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2130": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2131": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2132": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2133": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "LT",
      "path": "11"
    },
    "2134": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x85E"
    },
    "2137": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2138": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2140": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2141": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2142": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2143": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2144": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2146": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2147": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2149": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2151": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2152": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2153": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2155": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2156": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2157": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2158": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "DIV",
      "path": "11"
    },
    "2159": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "ADD",
      "path": "11"
    },
    "2160": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2161": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2162": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "MOD",
      "path": "11"
    },
    "2163": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x10"
    },
    "2165": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "MUL",
      "path": "11"
    },
    "2166": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2167": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "POP",
      "path": "11"
    },
    "2168": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2169": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "POP",
      "path": "11"
    },
    "2170": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2171": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2172": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2173": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "2176": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "EXP",
      "path": "11"
    },
    "2177": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2178": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "DIV",
      "path": "11"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2183": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2185": {
      "op": "SHL"
    },
    "2186": {
      "op": "SUB"
    },
    "2187": {
      "offset": [
        2777,
        2832
      ],
      "op": "AND",
      "path": "11"
    },
    "2188": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2777,
        2832
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2189": {
      "fn": "Slave.sendDepositByNonce",
      "jump": "o",
      "offset": [
        2777,
        2832
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2190": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13221,
        13626
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2191": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13384,
        13413
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 7,
      "value": "0x5"
    },
    "2193": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13384,
        13413
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2194": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2196": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2197": {
      "op": "PUSH4",
      "value": "0xAFD9FA5"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2204": {
      "op": "SHL"
    },
    "2205": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2206": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2213": {
      "op": "SHL"
    },
    "2214": {
      "op": "SUB"
    },
    "2215": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13384,
        13413
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2216": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13384,
        13413
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2217": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13384,
        13413
      ],
      "op": "AND",
      "path": "11"
    },
    "2218": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13384,
        13413
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2219": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13429
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x57ECFD28"
    },
    "2224": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13429
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2225": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8C4"
    },
    "2228": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2229": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13447,
        13454
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2230": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13447,
        13454
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2231": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13447,
        13454
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2232": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13447,
        13454
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2233": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13472,
        13483
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2234": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13472,
        13483
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2235": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13472,
        13483
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2236": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13472,
        13483
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2237": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2239": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "ADD",
      "path": "11"
    },
    "2240": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2302"
    },
    "2243": {
      "fn": "Slave.claimAssetsFromBridge",
      "jump": "i",
      "offset": [
        13364,
        13497
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2244": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2245": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2247": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2249": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2250": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2251": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2252": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "SUB",
      "path": "11"
    },
    "2253": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2254": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2256": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2257": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "GAS",
      "path": "11"
    },
    "2258": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "CALL",
      "path": "11"
    },
    "2259": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2260": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2261": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2262": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8E3"
    },
    "2265": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2266": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2267": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2269": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2270": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2271": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2272": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2274": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2275": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2276": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "POP",
      "path": "11"
    },
    "2277": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "POP",
      "path": "11"
    },
    "2278": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "POP",
      "path": "11"
    },
    "2279": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "POP",
      "path": "11"
    },
    "2280": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2282": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2283": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2284": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2286": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "NOT",
      "path": "11"
    },
    "2287": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2289": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2290": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "ADD",
      "path": "11"
    },
    "2291": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "AND",
      "path": "11"
    },
    "2292": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2293": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "ADD",
      "path": "11"
    },
    "2294": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2295": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2297": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2298": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "POP",
      "path": "11"
    },
    "2299": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2300": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "ADD",
      "path": "11"
    },
    "2301": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2302": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x907"
    },
    "2305": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2306": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2307": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2285"
    },
    "2310": {
      "fn": "Slave.claimAssetsFromBridge",
      "jump": "i",
      "offset": [
        13364,
        13497
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2311": {
      "branch": 55,
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13364,
        13497
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2312": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13343,
        13583
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x979"
    },
    "2315": {
      "branch": 55,
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13343,
        13583
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2316": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13343,
        13583
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2318": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13343,
        13583
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2319": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2325": {
      "op": "SHL"
    },
    "2326": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13343,
        13583
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2327": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13343,
        13583
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2330": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13343,
        13583
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2332": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13343,
        13583
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2333": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13343,
        13583
      ],
      "op": "ADD",
      "path": "11"
    },
    "2334": {
      "op": "MSTORE"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2339": {
      "op": "DUP3"
    },
    "2340": {
      "op": "ADD"
    },
    "2341": {
      "op": "MSTORE"
    },
    "2342": {
      "op": "PUSH32",
      "value": "0x6661696C65642066726F6D20636972636C652062726964676520494D65737361"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2377": {
      "op": "DUP3"
    },
    "2378": {
      "op": "ADD"
    },
    "2379": {
      "op": "MSTORE"
    },
    "2380": {
      "op": "PUSH32",
      "value": "0x67655472616E736D69747465722072657475726E65642066616C736500000000"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2415": {
      "op": "DUP3"
    },
    "2416": {
      "op": "ADD"
    },
    "2417": {
      "op": "MSTORE"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2420": {
      "op": "ADD"
    },
    "2421": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13343,
        13583
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7C4"
    },
    "2424": {
      "op": "JUMP"
    },
    "2425": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13343,
        13583
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2426": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13593,
        13619
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 8,
      "value": "0x981"
    },
    "2429": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13593,
        13617
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x19CC"
    },
    "2432": {
      "fn": "Slave.claimAssetsFromBridge",
      "jump": "i",
      "offset": [
        13593,
        13619
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2433": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13593,
        13619
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2434": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13221,
        13626
      ],
      "op": "POP",
      "path": "11"
    },
    "2435": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13221,
        13626
      ],
      "op": "POP",
      "path": "11"
    },
    "2436": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13221,
        13626
      ],
      "op": "POP",
      "path": "11"
    },
    "2437": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13221,
        13626
      ],
      "op": "POP",
      "path": "11"
    },
    "2438": {
      "fn": "Slave.claimAssetsFromBridge",
      "jump": "o",
      "offset": [
        13221,
        13626
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2439": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1660,
        1790
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2440": {
      "offset": [
        2427,
        2437
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2445": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2447": {
      "op": "SHL"
    },
    "2448": {
      "op": "SUB"
    },
    "2449": {
      "offset": [
        2449,
        2461
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x0"
    },
    "2482": {
      "offset": [
        2427,
        2462
      ],
      "op": "AND",
      "path": "1"
    },
    "2483": {
      "branch": 63,
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        2427,
        2462
      ],
      "op": "EQ",
      "path": "1"
    },
    "2484": {
      "offset": [
        2423,
        2496
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9D2"
    },
    "2487": {
      "branch": 63,
      "offset": [
        2423,
        2496
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2488": {
      "offset": [
        2471,
        2496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2490": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2491": {
      "op": "PUSH4",
      "value": "0x35FDCCCD"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2498": {
      "op": "SHL"
    },
    "2499": {
      "offset": [
        2471,
        2496
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2500": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2501": {
      "offset": [
        2485,
        2495
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2502": {
      "offset": [
        2471,
        2496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2504": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2505": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "ADD",
      "path": "1"
    },
    "2506": {
      "op": "MSTORE"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2509": {
      "op": "ADD"
    },
    "2510": {
      "offset": [
        2471,
        2496
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C4"
    },
    "2513": {
      "op": "JUMP"
    },
    "2514": {
      "offset": [
        2423,
        2496
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2515": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1764,
        1785
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 9,
      "value": "0x9E3"
    },
    "2518": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1764,
        1785
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9DE"
    },
    "2521": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1777,
        1784
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2522": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1764,
        1785
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2334"
    },
    "2525": {
      "fn": "CCIPReceiver.ccipReceive",
      "jump": "i",
      "offset": [
        1764,
        1785
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2526": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1764,
        1785
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2527": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1764,
        1776
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B2E"
    },
    "2530": {
      "fn": "CCIPReceiver.ccipReceive",
      "jump": "i",
      "offset": [
        1764,
        1785
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2531": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1764,
        1785
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2532": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1660,
        1790
      ],
      "op": "POP",
      "path": "1"
    },
    "2533": {
      "fn": "CCIPReceiver.ccipReceive",
      "jump": "o",
      "offset": [
        1660,
        1790
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2534": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7616,
        7924
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2535": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7746,
        7756
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "2537": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7746,
        7756
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2538": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2540": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2541": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2548": {
      "op": "SHL"
    },
    "2549": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2550": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2551": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7776,
        7780
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "2552": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2554": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2555": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "ADD",
      "path": "11"
    },
    "2556": {
      "op": "MSTORE"
    },
    "2557": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7699,
        7706
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2559": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7699,
        7706
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2560": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7699,
        7706
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2561": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7699,
        7706
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2568": {
      "op": "SHL"
    },
    "2569": {
      "op": "SUB"
    },
    "2570": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7746,
        7756
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2571": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7746,
        7756
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2572": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7746,
        7756
      ],
      "op": "AND",
      "path": "11"
    },
    "2573": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7746,
        7756
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2574": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7767
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "2579": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7767
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2580": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2582": {
      "op": "ADD"
    },
    "2583": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2585": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2587": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2588": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2589": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2590": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "SUB",
      "path": "11"
    },
    "2591": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2592": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2593": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "GAS",
      "path": "11"
    },
    "2594": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "2595": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2596": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2597": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2598": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA33"
    },
    "2601": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2602": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2603": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2605": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2606": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2607": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2608": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2610": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2611": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2612": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "POP",
      "path": "11"
    },
    "2613": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "POP",
      "path": "11"
    },
    "2614": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "POP",
      "path": "11"
    },
    "2615": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "POP",
      "path": "11"
    },
    "2616": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2618": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2619": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2620": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2622": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "NOT",
      "path": "11"
    },
    "2623": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2625": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2626": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "ADD",
      "path": "11"
    },
    "2627": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "AND",
      "path": "11"
    },
    "2628": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2629": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "ADD",
      "path": "11"
    },
    "2630": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2631": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2633": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2634": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "POP",
      "path": "11"
    },
    "2635": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2636": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "ADD",
      "path": "11"
    },
    "2637": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2638": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA57"
    },
    "2641": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2642": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2643": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x226C"
    },
    "2646": {
      "fn": "Slave.calculateSharesValue",
      "jump": "i",
      "offset": [
        7739,
        7782
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2647": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7739,
        7782
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2648": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7718,
        7782
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2649": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7718,
        7782
      ],
      "op": "POP",
      "path": "11"
    },
    "2650": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7792,
        7806
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2652": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7858,
        7882
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "2654": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7858,
        7882
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2655": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7832,
        7842
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2656": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7811,
        7817
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2657": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7820,
        7828
      ],
      "op": "PUSH8",
      "path": "11",
      "value": "0xDE0B6B3A7640000"
    },
    "2666": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7811,
        7828
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA73"
    },
    "2669": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7811,
        7828
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2670": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7811,
        7828
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2671": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7811,
        7828
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2356"
    },
    "2674": {
      "fn": "Slave.calculateSharesValue",
      "jump": "i",
      "offset": [
        7811,
        7828
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2675": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7811,
        7828
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2676": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7810,
        7842
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA7D"
    },
    "2679": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7810,
        7842
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2680": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7810,
        7842
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2681": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7810,
        7842
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2356"
    },
    "2684": {
      "fn": "Slave.calculateSharesValue",
      "jump": "i",
      "offset": [
        7810,
        7842
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2685": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7810,
        7842
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2686": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7809,
        7882
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA87"
    },
    "2689": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7809,
        7882
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2690": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7809,
        7882
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2691": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7809,
        7882
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x236D"
    },
    "2694": {
      "fn": "Slave.calculateSharesValue",
      "jump": "i",
      "offset": [
        7809,
        7882
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2695": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7809,
        7882
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2696": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7792,
        7882
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2697": {
      "op": "POP"
    },
    "2698": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7900,
        7917
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 10,
      "value": "0xA9B"
    },
    "2701": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7909,
        7917
      ],
      "op": "PUSH8",
      "path": "11",
      "value": "0xDE0B6B3A7640000"
    },
    "2710": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7792,
        7882
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2711": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7900,
        7917
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x236D"
    },
    "2714": {
      "fn": "Slave.calculateSharesValue",
      "jump": "i",
      "offset": [
        7900,
        7917
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2715": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7900,
        7917
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2716": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7893,
        7917
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "2717": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7616,
        7924
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2718": {
      "op": "POP"
    },
    "2719": {
      "op": "POP"
    },
    "2720": {
      "op": "POP"
    },
    "2721": {
      "op": "POP"
    },
    "2722": {
      "fn": "Slave.calculateSharesValue",
      "jump": "o",
      "offset": [
        7616,
        7924
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2723": {
      "fn": "Slave.deposit",
      "offset": [
        11013,
        12185
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2724": {
      "fn": "Slave.deposit",
      "offset": [
        11093,
        11102
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 11,
      "value": "0x2"
    },
    "2726": {
      "fn": "Slave.deposit",
      "offset": [
        11093,
        11102
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2727": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2729": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2730": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2735": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2737": {
      "op": "SHL"
    },
    "2738": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2739": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2740": {
      "fn": "Slave.deposit",
      "offset": [
        11117,
        11127
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2741": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2743": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2744": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "ADD",
      "path": "11"
    },
    "2745": {
      "op": "MSTORE"
    },
    "2746": {
      "fn": "Slave.deposit",
      "offset": [
        11137,
        11141
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2749": {
      "op": "DUP3"
    },
    "2750": {
      "op": "ADD"
    },
    "2751": {
      "op": "MSTORE"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2754": {
      "op": "DUP2"
    },
    "2755": {
      "op": "ADD"
    },
    "2756": {
      "op": "DUP4"
    },
    "2757": {
      "op": "SWAP1"
    },
    "2758": {
      "op": "MSTORE"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2763": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2765": {
      "op": "SHL"
    },
    "2766": {
      "op": "SUB"
    },
    "2767": {
      "fn": "Slave.deposit",
      "offset": [
        11093,
        11102
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2768": {
      "fn": "Slave.deposit",
      "offset": [
        11093,
        11102
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2769": {
      "fn": "Slave.deposit",
      "offset": [
        11093,
        11102
      ],
      "op": "AND",
      "path": "11"
    },
    "2770": {
      "fn": "Slave.deposit",
      "offset": [
        11093,
        11102
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2771": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11116
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x23B872DD"
    },
    "2776": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11116
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2777": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2779": {
      "op": "ADD"
    },
    "2780": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2782": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2784": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2785": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2786": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2787": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "SUB",
      "path": "11"
    },
    "2788": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2789": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2791": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2792": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "GAS",
      "path": "11"
    },
    "2793": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "CALL",
      "path": "11"
    },
    "2794": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2795": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2796": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2797": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAFA"
    },
    "2800": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2801": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2802": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2804": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2805": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2806": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2807": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2809": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2810": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2811": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "POP",
      "path": "11"
    },
    "2812": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "POP",
      "path": "11"
    },
    "2813": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "POP",
      "path": "11"
    },
    "2814": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "POP",
      "path": "11"
    },
    "2815": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2817": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2818": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2819": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2821": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "NOT",
      "path": "11"
    },
    "2822": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2824": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2825": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "ADD",
      "path": "11"
    },
    "2826": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "AND",
      "path": "11"
    },
    "2827": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2828": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "ADD",
      "path": "11"
    },
    "2829": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2830": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2832": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2833": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "POP",
      "path": "11"
    },
    "2834": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2835": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "ADD",
      "path": "11"
    },
    "2836": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2837": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB1E"
    },
    "2840": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2841": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2842": {
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2285"
    },
    "2845": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        11086,
        11151
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2846": {
      "branch": 56,
      "fn": "Slave.deposit",
      "offset": [
        11086,
        11151
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2847": {
      "fn": "Slave.deposit",
      "offset": [
        11065,
        11202
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB6A"
    },
    "2850": {
      "branch": 56,
      "fn": "Slave.deposit",
      "offset": [
        11065,
        11202
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2851": {
      "fn": "Slave.deposit",
      "offset": [
        11065,
        11202
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2853": {
      "fn": "Slave.deposit",
      "offset": [
        11065,
        11202
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2854": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2860": {
      "op": "SHL"
    },
    "2861": {
      "fn": "Slave.deposit",
      "offset": [
        11065,
        11202
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2862": {
      "fn": "Slave.deposit",
      "offset": [
        11065,
        11202
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2865": {
      "fn": "Slave.deposit",
      "offset": [
        11065,
        11202
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2867": {
      "fn": "Slave.deposit",
      "offset": [
        11065,
        11202
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2868": {
      "fn": "Slave.deposit",
      "offset": [
        11065,
        11202
      ],
      "op": "ADD",
      "path": "11"
    },
    "2869": {
      "op": "MSTORE"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2874": {
      "op": "DUP3"
    },
    "2875": {
      "op": "ADD"
    },
    "2876": {
      "op": "MSTORE"
    },
    "2877": {
      "op": "PUSH32",
      "value": "0x4661696C656420746F207472616E7366657220616D6F756E7400000000000000"
    },
    "2910": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2912": {
      "op": "DUP3"
    },
    "2913": {
      "op": "ADD"
    },
    "2914": {
      "op": "MSTORE"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2917": {
      "op": "ADD"
    },
    "2918": {
      "fn": "Slave.deposit",
      "offset": [
        11065,
        11202
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7C4"
    },
    "2921": {
      "op": "JUMP"
    },
    "2922": {
      "fn": "Slave.deposit",
      "offset": [
        11065,
        11202
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2923": {
      "fn": "Slave.deposit",
      "offset": [
        11220,
        11232
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 12,
      "value": "0x8"
    },
    "2925": {
      "fn": "Slave.deposit",
      "offset": [
        11220,
        11232
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2926": {
      "fn": "Slave.deposit",
      "offset": [
        11220,
        11232
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "2928": {
      "branch": 57,
      "fn": "Slave.deposit",
      "offset": [
        11220,
        11232
      ],
      "op": "AND",
      "path": "11"
    },
    "2929": {
      "fn": "Slave.deposit",
      "offset": [
        11212,
        11255
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBB1"
    },
    "2932": {
      "branch": 57,
      "fn": "Slave.deposit",
      "offset": [
        11212,
        11255
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2933": {
      "fn": "Slave.deposit",
      "offset": [
        11212,
        11255
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2935": {
      "fn": "Slave.deposit",
      "offset": [
        11212,
        11255
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2936": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2942": {
      "op": "SHL"
    },
    "2943": {
      "fn": "Slave.deposit",
      "offset": [
        11212,
        11255
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2944": {
      "fn": "Slave.deposit",
      "offset": [
        11212,
        11255
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2947": {
      "fn": "Slave.deposit",
      "offset": [
        11212,
        11255
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2949": {
      "fn": "Slave.deposit",
      "offset": [
        11212,
        11255
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2950": {
      "fn": "Slave.deposit",
      "offset": [
        11212,
        11255
      ],
      "op": "ADD",
      "path": "11"
    },
    "2951": {
      "op": "MSTORE"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2954": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2956": {
      "op": "DUP3"
    },
    "2957": {
      "op": "ADD"
    },
    "2958": {
      "op": "MSTORE"
    },
    "2959": {
      "op": "PUSH18",
      "value": "0x4E6F6465206973206E6F7420616374697665"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2980": {
      "op": "SHL"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2983": {
      "op": "DUP3"
    },
    "2984": {
      "op": "ADD"
    },
    "2985": {
      "op": "MSTORE"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2988": {
      "op": "ADD"
    },
    "2989": {
      "fn": "Slave.deposit",
      "offset": [
        11212,
        11255
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7C4"
    },
    "2992": {
      "op": "JUMP"
    },
    "2993": {
      "fn": "Slave.deposit",
      "offset": [
        11212,
        11255
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2994": {
      "fn": "Slave.deposit",
      "offset": [
        11298,
        11308
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "2996": {
      "fn": "Slave.deposit",
      "offset": [
        11298,
        11308
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2997": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2999": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3000": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3007": {
      "op": "SHL"
    },
    "3008": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3009": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3010": {
      "fn": "Slave.deposit",
      "offset": [
        11328,
        11332
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "3011": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3013": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3014": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "ADD",
      "path": "11"
    },
    "3015": {
      "op": "MSTORE"
    },
    "3016": {
      "fn": "Slave.deposit",
      "offset": [
        11266,
        11288
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3018": {
      "fn": "Slave.deposit",
      "offset": [
        11266,
        11288
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3025": {
      "op": "SHL"
    },
    "3026": {
      "op": "SUB"
    },
    "3027": {
      "fn": "Slave.deposit",
      "offset": [
        11298,
        11308
      ],
      "op": "AND",
      "path": "11"
    },
    "3028": {
      "fn": "Slave.deposit",
      "offset": [
        11298,
        11308
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3029": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11319
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "3034": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11319
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3035": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3037": {
      "op": "ADD"
    },
    "3038": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3040": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3042": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3043": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3044": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3045": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "SUB",
      "path": "11"
    },
    "3046": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3047": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "DUP7",
      "path": "11"
    },
    "3048": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "GAS",
      "path": "11"
    },
    "3049": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "3050": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3051": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3052": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3053": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBFA"
    },
    "3056": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3057": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3058": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3060": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3061": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "3062": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3063": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3065": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "REVERT",
      "path": "11"
    },
    "3066": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3067": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "POP",
      "path": "11"
    },
    "3068": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "POP",
      "path": "11"
    },
    "3069": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "POP",
      "path": "11"
    },
    "3070": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "POP",
      "path": "11"
    },
    "3071": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3073": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3074": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3075": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "3077": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "NOT",
      "path": "11"
    },
    "3078": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "3080": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3081": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "ADD",
      "path": "11"
    },
    "3082": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "AND",
      "path": "11"
    },
    "3083": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3084": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "ADD",
      "path": "11"
    },
    "3085": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3086": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3088": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3089": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "POP",
      "path": "11"
    },
    "3090": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3091": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "ADD",
      "path": "11"
    },
    "3092": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3093": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC1E"
    },
    "3096": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3097": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3098": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x226C"
    },
    "3101": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        11291,
        11334
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3102": {
      "fn": "Slave.deposit",
      "offset": [
        11291,
        11334
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3103": {
      "fn": "Slave.deposit",
      "offset": [
        11266,
        11334
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3104": {
      "fn": "Slave.deposit",
      "offset": [
        11266,
        11334
      ],
      "op": "POP",
      "path": "11"
    },
    "3105": {
      "fn": "Slave.deposit",
      "offset": [
        11345,
        11359
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3107": {
      "fn": "Slave.deposit",
      "offset": [
        11373,
        11397
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "3109": {
      "fn": "Slave.deposit",
      "offset": [
        11373,
        11397
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3110": {
      "fn": "Slave.deposit",
      "offset": [
        11401,
        11402
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3112": {
      "branch": 58,
      "fn": "Slave.deposit",
      "offset": [
        11373,
        11402
      ],
      "op": "SUB",
      "path": "11"
    },
    "3113": {
      "fn": "Slave.deposit",
      "offset": [
        11369,
        11547
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC42"
    },
    "3116": {
      "branch": 58,
      "fn": "Slave.deposit",
      "offset": [
        11369,
        11547
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3117": {
      "fn": "Slave.deposit",
      "offset": [
        11427,
        11444
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 13,
      "value": "0xC3B"
    },
    "3120": {
      "fn": "Slave.deposit",
      "offset": [
        11427,
        11433
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3121": {
      "fn": "Slave.deposit",
      "offset": [
        11436,
        11444
      ],
      "op": "PUSH5",
      "path": "11",
      "value": "0xE8D4A51000"
    },
    "3127": {
      "fn": "Slave.deposit",
      "offset": [
        11427,
        11444
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2356"
    },
    "3130": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        11427,
        11444
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3131": {
      "fn": "Slave.deposit",
      "offset": [
        11427,
        11444
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3132": {
      "fn": "Slave.deposit",
      "offset": [
        11418,
        11444
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3133": {
      "fn": "Slave.deposit",
      "offset": [
        11418,
        11444
      ],
      "op": "POP",
      "path": "11"
    },
    "3134": {
      "fn": "Slave.deposit",
      "offset": [
        11369,
        11547
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC5E"
    },
    "3137": {
      "fn": "Slave.deposit",
      "offset": [
        11369,
        11547
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3138": {
      "fn": "Slave.deposit",
      "offset": [
        11369,
        11547
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3139": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11536
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 14
    },
    "3140": {
      "fn": "Slave.deposit",
      "offset": [
        11494,
        11518
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "3142": {
      "fn": "Slave.deposit",
      "offset": [
        11494,
        11518
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3143": {
      "fn": "Slave.deposit",
      "offset": [
        11485,
        11491
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3144": {
      "fn": "Slave.deposit",
      "offset": [
        11485,
        11518
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC51"
    },
    "3147": {
      "fn": "Slave.deposit",
      "offset": [
        11485,
        11518
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3148": {
      "fn": "Slave.deposit",
      "offset": [
        11485,
        11518
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3149": {
      "fn": "Slave.deposit",
      "offset": [
        11485,
        11518
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2356"
    },
    "3152": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        11485,
        11518
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3153": {
      "fn": "Slave.deposit",
      "offset": [
        11485,
        11518
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3154": {
      "fn": "Slave.deposit",
      "offset": [
        11484,
        11536
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC5B"
    },
    "3157": {
      "fn": "Slave.deposit",
      "offset": [
        11484,
        11536
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3158": {
      "fn": "Slave.deposit",
      "offset": [
        11484,
        11536
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3159": {
      "fn": "Slave.deposit",
      "offset": [
        11484,
        11536
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x236D"
    },
    "3162": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        11484,
        11536
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3163": {
      "fn": "Slave.deposit",
      "offset": [
        11484,
        11536
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3164": {
      "fn": "Slave.deposit",
      "offset": [
        11475,
        11536
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3165": {
      "fn": "Slave.deposit",
      "offset": [
        11475,
        11536
      ],
      "op": "POP",
      "path": "11"
    },
    "3166": {
      "fn": "Slave.deposit",
      "offset": [
        11369,
        11547
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3167": {
      "fn": "Slave.deposit",
      "offset": [
        11646,
        11663
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xB"
    },
    "3169": {
      "fn": "Slave.deposit",
      "offset": [
        11646,
        11663
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3170": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11693
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3172": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11693
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3173": {
      "fn": "Slave.deposit",
      "offset": [
        11556,
        11573
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3175": {
      "fn": "Slave.deposit",
      "offset": [
        11556,
        11573
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3176": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11693
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC85"
    },
    "3179": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11693
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3180": {
      "fn": "Slave.deposit",
      "offset": [
        11556,
        11573
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3181": {
      "fn": "Slave.deposit",
      "offset": [
        11556,
        11573
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3182": {
      "fn": "Slave.deposit",
      "offset": [
        11622,
        11632
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3183": {
      "fn": "Slave.deposit",
      "offset": [
        11622,
        11632
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3190": {
      "op": "SHL"
    },
    "3191": {
      "op": "SUB"
    },
    "3192": {
      "fn": "Slave.deposit",
      "offset": [
        11646,
        11663
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3193": {
      "fn": "Slave.deposit",
      "offset": [
        11646,
        11663
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3194": {
      "fn": "Slave.deposit",
      "offset": [
        11646,
        11663
      ],
      "op": "AND",
      "path": "11"
    },
    "3195": {
      "fn": "Slave.deposit",
      "offset": [
        11646,
        11663
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3196": {
      "fn": "Slave.deposit",
      "offset": [
        11677,
        11683
      ],
      "op": "DUP7",
      "path": "11"
    },
    "3197": {
      "fn": "Slave.deposit",
      "offset": [
        11677,
        11683
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3198": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11693
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3200": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11693
      ],
      "op": "ADD",
      "path": "11"
    },
    "3201": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11693
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x22A7"
    },
    "3204": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        11576,
        11693
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3205": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11693
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3206": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11693
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3208": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11693
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3209": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11693
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3210": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3212": {
      "op": "NOT"
    },
    "3213": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11693
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3214": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11693
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3215": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11693
      ],
      "op": "SUB",
      "path": "11"
    },
    "3216": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11693
      ],
      "op": "ADD",
      "path": "11"
    },
    "3217": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11693
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3218": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11693
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3219": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11693
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3220": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11693
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3221": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11693
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3222": {
      "fn": "Slave.deposit",
      "offset": [
        11722,
        11739
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 15,
      "value": "0xB"
    },
    "3224": {
      "fn": "Slave.deposit",
      "offset": [
        11722,
        11739
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3225": {
      "fn": "Slave.deposit",
      "offset": [
        11722,
        11739
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3230": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3232": {
      "op": "SHL"
    },
    "3233": {
      "op": "SUB"
    },
    "3234": {
      "fn": "Slave.deposit",
      "offset": [
        11722,
        11739
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3235": {
      "fn": "Slave.deposit",
      "offset": [
        11722,
        11739
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3236": {
      "fn": "Slave.deposit",
      "offset": [
        11722,
        11739
      ],
      "op": "AND",
      "path": "11"
    },
    "3237": {
      "fn": "Slave.deposit",
      "offset": [
        11704,
        11740
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3239": {
      "fn": "Slave.deposit",
      "offset": [
        11704,
        11740
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3240": {
      "fn": "Slave.deposit",
      "offset": [
        11704,
        11740
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3241": {
      "fn": "Slave.deposit",
      "offset": [
        11704,
        11740
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3242": {
      "fn": "Slave.deposit",
      "offset": [
        11704,
        11721
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC"
    },
    "3244": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11693
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3246": {
      "fn": "Slave.deposit",
      "offset": [
        11704,
        11740
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3247": {
      "fn": "Slave.deposit",
      "offset": [
        11704,
        11740
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3248": {
      "fn": "Slave.deposit",
      "offset": [
        11704,
        11740
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3249": {
      "fn": "Slave.deposit",
      "offset": [
        11704,
        11740
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3250": {
      "fn": "Slave.deposit",
      "offset": [
        11704,
        11740
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3251": {
      "fn": "Slave.deposit",
      "offset": [
        11704,
        11740
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3252": {
      "fn": "Slave.deposit",
      "offset": [
        11704,
        11765
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3253": {
      "fn": "Slave.deposit",
      "offset": [
        11704,
        11765
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3260": {
      "op": "SHL"
    },
    "3261": {
      "op": "SUB"
    },
    "3262": {
      "op": "NOT"
    },
    "3263": {
      "fn": "Slave.deposit",
      "offset": [
        11704,
        11765
      ],
      "op": "AND",
      "path": "11"
    },
    "3264": {
      "fn": "Slave.deposit",
      "offset": [
        11755,
        11765
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3265": {
      "fn": "Slave.deposit",
      "offset": [
        11704,
        11765
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3266": {
      "fn": "Slave.deposit",
      "offset": [
        11704,
        11765
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3267": {
      "fn": "Slave.deposit",
      "offset": [
        11704,
        11765
      ],
      "op": "OR",
      "path": "11"
    },
    "3268": {
      "fn": "Slave.deposit",
      "offset": [
        11704,
        11765
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3269": {
      "fn": "Slave.deposit",
      "offset": [
        11704,
        11765
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3270": {
      "fn": "Slave.deposit",
      "offset": [
        11704,
        11765
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3271": {
      "fn": "Slave.deposit",
      "offset": [
        11793,
        11810
      ],
      "op": "DUP5",
      "path": "11",
      "statement": 16
    },
    "3272": {
      "fn": "Slave.deposit",
      "offset": [
        11793,
        11810
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3273": {
      "fn": "Slave.deposit",
      "offset": [
        11793,
        11810
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3274": {
      "fn": "Slave.deposit",
      "offset": [
        11793,
        11810
      ],
      "op": "AND",
      "path": "11"
    },
    "3275": {
      "fn": "Slave.deposit",
      "offset": [
        11775,
        11811
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3276": {
      "fn": "Slave.deposit",
      "offset": [
        11775,
        11811
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3277": {
      "fn": "Slave.deposit",
      "offset": [
        11775,
        11811
      ],
      "op": "DUP6",
      "path": "11"
    },
    "3278": {
      "fn": "Slave.deposit",
      "offset": [
        11775,
        11811
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3279": {
      "fn": "Slave.deposit",
      "offset": [
        11775,
        11811
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3280": {
      "fn": "Slave.deposit",
      "offset": [
        11722,
        11739
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3282": {
      "fn": "Slave.deposit",
      "offset": [
        11775,
        11818
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3283": {
      "fn": "Slave.deposit",
      "offset": [
        11775,
        11818
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3284": {
      "fn": "Slave.deposit",
      "offset": [
        11775,
        11818
      ],
      "op": "ADD",
      "path": "11"
    },
    "3285": {
      "fn": "Slave.deposit",
      "offset": [
        11775,
        11827
      ],
      "op": "DUP11",
      "path": "11"
    },
    "3286": {
      "fn": "Slave.deposit",
      "offset": [
        11775,
        11827
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3287": {
      "fn": "Slave.deposit",
      "offset": [
        11775,
        11827
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3288": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11867
      ],
      "op": "SWAP1",
      "path": "11",
      "statement": 17
    },
    "3289": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11867
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3290": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11867
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3291": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11855
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xD"
    },
    "3293": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11867
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3294": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11867
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3295": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11867
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "3296": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11867
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3297": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11867
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3298": {
      "fn": "Slave.deposit",
      "offset": [
        11873,
        11890
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "3299": {
      "fn": "Slave.deposit",
      "offset": [
        11873,
        11890
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3300": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3301": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3302": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3303": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "DUP8",
      "path": "11"
    },
    "3304": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "ADD",
      "path": "11"
    },
    "3305": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "DUP7",
      "path": "11"
    },
    "3306": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3307": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "3308": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3309": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3310": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3311": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3312": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3313": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "3315": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "DUP6",
      "path": "11"
    },
    "3316": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "DIV",
      "path": "11"
    },
    "3317": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "ADD",
      "path": "11"
    },
    "3318": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3319": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3320": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x10"
    },
    "3322": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "3323": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3324": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "SWAP7",
      "path": "11"
    },
    "3325": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "AND",
      "path": "11"
    },
    "3326": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "3327": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3328": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "3329": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "MUL",
      "path": "11"
    },
    "3330": {
      "fn": "Slave.deposit",
      "offset": [
        11722,
        11739
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "3333": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "EXP",
      "path": "11"
    },
    "3334": {
      "fn": "Slave.deposit",
      "offset": [
        11873,
        11890
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3335": {
      "fn": "Slave.deposit",
      "offset": [
        11873,
        11890
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3336": {
      "fn": "Slave.deposit",
      "offset": [
        11873,
        11890
      ],
      "op": "AND",
      "path": "11"
    },
    "3337": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3338": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "MUL",
      "path": "11"
    },
    "3339": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "3340": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "MUL",
      "path": "11"
    },
    "3341": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "NOT",
      "path": "11"
    },
    "3342": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3343": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "3344": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "AND",
      "path": "11"
    },
    "3345": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "OR",
      "path": "11"
    },
    "3346": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3347": {
      "fn": "Slave.deposit",
      "offset": [
        11837,
        11891
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3348": {
      "fn": "Slave.deposit",
      "offset": [
        11902,
        11926
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 18,
      "value": "0xA"
    },
    "3350": {
      "fn": "Slave.deposit",
      "offset": [
        11902,
        11936
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3351": {
      "fn": "Slave.deposit",
      "offset": [
        11902,
        11936
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3352": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11693
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "3353": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11693
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "3354": {
      "op": "POP"
    },
    "3355": {
      "fn": "Slave.deposit",
      "offset": [
        11821,
        11827
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3356": {
      "fn": "Slave.deposit",
      "offset": [
        11821,
        11827
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "3357": {
      "fn": "Slave.deposit",
      "offset": [
        11902,
        11926
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3358": {
      "fn": "Slave.deposit",
      "offset": [
        11902,
        11926
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3359": {
      "fn": "Slave.deposit",
      "offset": [
        11704,
        11740
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3360": {
      "fn": "Slave.deposit",
      "offset": [
        11902,
        11936
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD2A"
    },
    "3363": {
      "fn": "Slave.deposit",
      "offset": [
        11902,
        11936
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3364": {
      "fn": "Slave.deposit",
      "offset": [
        11821,
        11827
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3365": {
      "fn": "Slave.deposit",
      "offset": [
        11821,
        11827
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3366": {
      "fn": "Slave.deposit",
      "offset": [
        11902,
        11936
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x238F"
    },
    "3369": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        11902,
        11936
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3370": {
      "fn": "Slave.deposit",
      "offset": [
        11902,
        11936
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3371": {
      "fn": "Slave.deposit",
      "offset": [
        11902,
        11936
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3372": {
      "fn": "Slave.deposit",
      "offset": [
        11902,
        11936
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3373": {
      "fn": "Slave.deposit",
      "offset": [
        11902,
        11936
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3374": {
      "op": "POP"
    },
    "3375": {
      "op": "POP"
    },
    "3376": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11963
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 19,
      "value": "0xB"
    },
    "3378": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3379": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3380": {
      "fn": "Slave.deposit",
      "offset": [
        11967,
        11968
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3382": {
      "fn": "Slave.deposit",
      "offset": [
        11967,
        11968
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3383": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11963
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3384": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11963
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3386": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11963
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3387": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD4E"
    },
    "3390": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3391": {
      "fn": "Slave.deposit",
      "offset": [
        11967,
        11968
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3392": {
      "fn": "Slave.deposit",
      "offset": [
        11967,
        11968
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3399": {
      "op": "SHL"
    },
    "3400": {
      "op": "SUB"
    },
    "3401": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "AND",
      "path": "11"
    },
    "3402": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x23A2"
    },
    "3405": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        11946,
        11968
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3406": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3407": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "3408": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "POP",
      "path": "11"
    },
    "3409": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "3412": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "EXP",
      "path": "11"
    },
    "3413": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3414": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3415": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3422": {
      "op": "SHL"
    },
    "3423": {
      "op": "SUB"
    },
    "3424": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "MUL",
      "path": "11"
    },
    "3425": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "NOT",
      "path": "11"
    },
    "3426": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "AND",
      "path": "11"
    },
    "3427": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3428": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3435": {
      "op": "SHL"
    },
    "3436": {
      "op": "SUB"
    },
    "3437": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "AND",
      "path": "11"
    },
    "3438": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "MUL",
      "path": "11"
    },
    "3439": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "OR",
      "path": "11"
    },
    "3440": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3441": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3442": {
      "fn": "Slave.deposit",
      "offset": [
        11946,
        11968
      ],
      "op": "POP",
      "path": "11"
    },
    "3443": {
      "fn": "Slave.deposit",
      "offset": [
        11978,
        11990
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3445": {
      "fn": "Slave.deposit",
      "offset": [
        11993,
        12003
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD7C"
    },
    "3448": {
      "fn": "Slave.deposit",
      "offset": [
        11993,
        12001
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x155F"
    },
    "3451": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        11993,
        12003
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3452": {
      "fn": "Slave.deposit",
      "offset": [
        11993,
        12003
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3453": {
      "fn": "Slave.deposit",
      "offset": [
        12020,
        12029
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 20,
      "value": "0x2"
    },
    "3455": {
      "fn": "Slave.deposit",
      "offset": [
        12020,
        12029
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3456": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3458": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3459": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "3464": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3466": {
      "op": "SHL"
    },
    "3467": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3468": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3475": {
      "op": "SHL"
    },
    "3476": {
      "op": "SUB"
    },
    "3477": {
      "op": "DUP1"
    },
    "3478": {
      "op": "DUP5"
    },
    "3479": {
      "op": "AND"
    },
    "3480": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3482": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3483": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "ADD",
      "path": "11"
    },
    "3484": {
      "op": "MSTORE"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3487": {
      "op": "DUP3"
    },
    "3488": {
      "op": "ADD"
    },
    "3489": {
      "op": "DUP10"
    },
    "3490": {
      "op": "SWAP1"
    },
    "3491": {
      "op": "MSTORE"
    },
    "3492": {
      "fn": "Slave.deposit",
      "offset": [
        11978,
        12003
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "3493": {
      "fn": "Slave.deposit",
      "offset": [
        11978,
        12003
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "3494": {
      "op": "POP"
    },
    "3495": {
      "fn": "Slave.deposit",
      "offset": [
        12020,
        12029
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3496": {
      "fn": "Slave.deposit",
      "offset": [
        12020,
        12029
      ],
      "op": "AND",
      "path": "11"
    },
    "3497": {
      "fn": "Slave.deposit",
      "offset": [
        12020,
        12029
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3498": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12038
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95EA7B3"
    },
    "3503": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12038
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3506": {
      "op": "ADD"
    },
    "3507": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3509": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3511": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3512": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3513": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3514": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "SUB",
      "path": "11"
    },
    "3515": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3516": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3518": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "DUP8",
      "path": "11"
    },
    "3519": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "GAS",
      "path": "11"
    },
    "3520": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "CALL",
      "path": "11"
    },
    "3521": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3522": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3523": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3524": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDD1"
    },
    "3527": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3528": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3529": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3531": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3532": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "3533": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3534": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3536": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "REVERT",
      "path": "11"
    },
    "3537": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3538": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "POP",
      "path": "11"
    },
    "3539": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "POP",
      "path": "11"
    },
    "3540": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "POP",
      "path": "11"
    },
    "3541": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "POP",
      "path": "11"
    },
    "3542": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3544": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3545": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3546": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "3548": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "NOT",
      "path": "11"
    },
    "3549": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "3551": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3552": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "ADD",
      "path": "11"
    },
    "3553": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "AND",
      "path": "11"
    },
    "3554": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3555": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "ADD",
      "path": "11"
    },
    "3556": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3557": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3559": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3560": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "POP",
      "path": "11"
    },
    "3561": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3562": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "ADD",
      "path": "11"
    },
    "3563": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3564": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDF5"
    },
    "3567": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3568": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3569": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2285"
    },
    "3572": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        12013,
        12052
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3573": {
      "fn": "Slave.deposit",
      "offset": [
        12013,
        12052
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3574": {
      "op": "POP"
    },
    "3575": {
      "fn": "Slave.deposit",
      "offset": [
        12082,
        12091
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 21,
      "value": "0x2"
    },
    "3577": {
      "fn": "Slave.deposit",
      "offset": [
        12082,
        12091
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3578": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3580": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3581": {
      "op": "PUSH4",
      "value": "0xE8EDA9DF"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3588": {
      "op": "SHL"
    },
    "3589": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3590": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3597": {
      "op": "SHL"
    },
    "3598": {
      "op": "SUB"
    },
    "3599": {
      "fn": "Slave.deposit",
      "offset": [
        12082,
        12091
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3600": {
      "fn": "Slave.deposit",
      "offset": [
        12082,
        12091
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3601": {
      "fn": "Slave.deposit",
      "offset": [
        12082,
        12091
      ],
      "op": "AND",
      "path": "11"
    },
    "3602": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3604": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3605": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "ADD",
      "path": "11"
    },
    "3606": {
      "op": "MSTORE"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3609": {
      "op": "DUP2"
    },
    "3610": {
      "op": "ADD"
    },
    "3611": {
      "op": "DUP8"
    },
    "3612": {
      "op": "SWAP1"
    },
    "3613": {
      "op": "MSTORE"
    },
    "3614": {
      "fn": "Slave.deposit",
      "offset": [
        12109,
        12113
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3617": {
      "op": "DUP3"
    },
    "3618": {
      "op": "ADD"
    },
    "3619": {
      "op": "MSTORE"
    },
    "3620": {
      "fn": "Slave.deposit",
      "offset": [
        12082,
        12091
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3622": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3624": {
      "op": "DUP3"
    },
    "3625": {
      "op": "ADD"
    },
    "3626": {
      "op": "MSTORE"
    },
    "3627": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12081
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3628": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12081
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3629": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12081
      ],
      "op": "AND",
      "path": "11"
    },
    "3630": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12081
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3631": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12081
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE8EDA9DF"
    },
    "3636": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12081
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3639": {
      "op": "ADD"
    },
    "3640": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3642": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3644": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3645": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3646": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3647": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "SUB",
      "path": "11"
    },
    "3648": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3649": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3651": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "DUP8",
      "path": "11"
    },
    "3652": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3653": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "3654": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3655": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3656": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3657": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE51"
    },
    "3660": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3661": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3663": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3664": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "REVERT",
      "path": "11"
    },
    "3665": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3666": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "POP",
      "path": "11"
    },
    "3667": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "GAS",
      "path": "11"
    },
    "3668": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "CALL",
      "path": "11"
    },
    "3669": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3670": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3671": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3672": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE65"
    },
    "3675": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3676": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3677": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3679": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3680": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "3681": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3682": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3684": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "REVERT",
      "path": "11"
    },
    "3685": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3686": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "POP",
      "path": "11"
    },
    "3687": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "POP",
      "path": "11"
    },
    "3688": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "POP",
      "path": "11"
    },
    "3689": {
      "fn": "Slave.deposit",
      "offset": [
        12062,
        12118
      ],
      "op": "POP",
      "path": "11"
    },
    "3690": {
      "fn": "Slave.deposit",
      "offset": [
        12129,
        12178
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 22,
      "value": "0xE9C"
    },
    "3693": {
      "offset": [
        1703,
        1723
      ],
      "op": "PUSH8",
      "path": "11",
      "value": "0xDE41BA4FC9D91AD9"
    },
    "3702": {
      "fn": "Slave.deposit",
      "offset": [
        12156,
        12171
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "3735": {
      "fn": "Slave.deposit",
      "offset": [
        12173,
        12177
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3736": {
      "fn": "Slave.deposit",
      "offset": [
        12129,
        12141
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15E4"
    },
    "3739": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        12129,
        12178
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3740": {
      "fn": "Slave.deposit",
      "offset": [
        12129,
        12178
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3741": {
      "fn": "Slave.deposit",
      "offset": [
        12129,
        12178
      ],
      "op": "POP",
      "path": "11"
    },
    "3742": {
      "fn": "Slave.deposit",
      "offset": [
        11055,
        12185
      ],
      "op": "POP",
      "path": "11"
    },
    "3743": {
      "fn": "Slave.deposit",
      "offset": [
        11055,
        12185
      ],
      "op": "POP",
      "path": "11"
    },
    "3744": {
      "fn": "Slave.deposit",
      "offset": [
        11055,
        12185
      ],
      "op": "POP",
      "path": "11"
    },
    "3745": {
      "fn": "Slave.deposit",
      "offset": [
        11055,
        12185
      ],
      "op": "POP",
      "path": "11"
    },
    "3746": {
      "fn": "Slave.deposit",
      "offset": [
        11013,
        12185
      ],
      "op": "POP",
      "path": "11"
    },
    "3747": {
      "fn": "Slave.deposit",
      "jump": "o",
      "offset": [
        11013,
        12185
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3748": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6466,
        6924
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3749": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6602,
        6614
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 23,
      "value": "0x8"
    },
    "3751": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6602,
        6621
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3752": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6602,
        6621
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3753": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3755": {
      "op": "NOT"
    },
    "3756": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6602,
        6621
      ],
      "op": "AND",
      "path": "11"
    },
    "3757": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6617,
        6621
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3759": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6602,
        6621
      ],
      "op": "OR",
      "path": "11"
    },
    "3760": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6602,
        6621
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3761": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6602,
        6621
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3762": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6724,
        6744
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "3764": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6724,
        6744
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3765": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6724,
        6744
      ],
      "op": "ADD",
      "path": "11"
    },
    "3766": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6724,
        6744
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3767": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6700,
        6772
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3768": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6700,
        6772
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3769": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6602,
        6614
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3771": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6602,
        6614
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3772": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6602,
        6614
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3773": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6602,
        6614
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3774": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6700,
        6772
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xED0"
    },
    "3777": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6700,
        6772
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3778": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6700,
        6772
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3779": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6700,
        6772
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3780": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6700,
        6772
      ],
      "op": "ADD",
      "path": "11"
    },
    "3781": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6700,
        6772
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3783": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6700,
        6772
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3784": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6700,
        6772
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3785": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6700,
        6772
      ],
      "op": "ADD",
      "path": "11"
    },
    "3786": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6700,
        6772
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3787": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6700,
        6772
      ],
      "op": "ADD",
      "path": "11"
    },
    "3788": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6700,
        6772
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x23DA"
    },
    "3791": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "jump": "i",
      "offset": [
        6700,
        6772
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3792": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6700,
        6772
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3793": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6783,
        6807
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 24,
      "value": "0xA"
    },
    "3795": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6783,
        6835
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3796": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6783,
        6835
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3797": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6783,
        6835
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3798": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6783,
        6835
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3799": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6845,
        6862
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 25,
      "value": "0xB"
    },
    "3801": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6845,
        6883
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3802": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6845,
        6883
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3803": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3820": {
      "op": "NOT"
    },
    "3821": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6845,
        6883
      ],
      "op": "AND",
      "path": "11"
    },
    "3822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3828": {
      "op": "SHL"
    },
    "3829": {
      "op": "SUB"
    },
    "3830": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6845,
        6883
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3831": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6845,
        6883
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "3832": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6845,
        6883
      ],
      "op": "AND",
      "path": "11"
    },
    "3833": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6845,
        6883
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3834": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6845,
        6883
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3835": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6845,
        6883
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3836": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6845,
        6883
      ],
      "op": "OR",
      "path": "11"
    },
    "3837": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6845,
        6883
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3838": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6845,
        6883
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3839": {
      "op": "POP"
    },
    "3840": {
      "op": "POP"
    },
    "3841": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6893,
        6910
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 26,
      "value": "0xF"
    },
    "3843": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6893,
        6917
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3844": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6893,
        6917
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3847": {
      "op": "NOT"
    },
    "3848": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6893,
        6917
      ],
      "op": "AND",
      "path": "11"
    },
    "3849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3851": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6893,
        6917
      ],
      "op": "OR",
      "path": "11"
    },
    "3852": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6893,
        6917
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3853": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6893,
        6917
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3854": {
      "op": "POP"
    },
    "3855": {
      "op": "POP"
    },
    "3856": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "jump": "o",
      "offset": [
        6466,
        6924
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3857": {
      "offset": [
        2369,
        2393
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3858": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "3860": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3861": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3862": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3863": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3864": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "LT",
      "path": "11"
    },
    "3865": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF21"
    },
    "3868": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3869": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3871": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3872": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "REVERT",
      "path": "11"
    },
    "3873": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3874": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3876": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3877": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3878": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3879": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3881": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3882": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3883": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3884": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "ADD",
      "path": "11"
    },
    "3885": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3886": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2369,
        2393
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3887": {
      "op": "POP"
    },
    "3888": {
      "offset": [
        2369,
        2393
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3889": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "jump": "o",
      "offset": [
        2369,
        2393
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3890": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12619,
        13216
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3891": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12971,
        12980
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "3893": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12971,
        12980
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3894": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3896": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3897": {
      "op": "PUSH4",
      "value": "0x35EA6A75"
    },
    "3902": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3904": {
      "op": "SHL"
    },
    "3905": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3906": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3913": {
      "op": "SHL"
    },
    "3914": {
      "op": "SUB"
    },
    "3915": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12971,
        12980
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3916": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12971,
        12980
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3917": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12971,
        12980
      ],
      "op": "AND",
      "path": "11"
    },
    "3918": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3920": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3921": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "ADD",
      "path": "11"
    },
    "3922": {
      "op": "MSTORE"
    },
    "3923": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12702,
        12725
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3925": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12702,
        12725
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3926": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12702,
        12725
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3927": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12702,
        12725
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3928": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12702,
        12725
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3929": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12702,
        12725
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3930": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12911,
        12937
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "3963": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12953
      ],
      "op": "AND",
      "path": "11"
    },
    "3964": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12953
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3965": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12953
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x35EA6A75"
    },
    "3970": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12953
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3971": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3973": {
      "op": "ADD"
    },
    "3974": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x180"
    },
    "3977": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3979": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3980": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3981": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3982": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "SUB",
      "path": "11"
    },
    "3983": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3984": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "DUP7",
      "path": "11"
    },
    "3985": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "GAS",
      "path": "11"
    },
    "3986": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "3987": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3988": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3989": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3990": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFA3"
    },
    "3993": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3994": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3995": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3997": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3998": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "3999": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4000": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4002": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "REVERT",
      "path": "11"
    },
    "4003": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4004": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "POP",
      "path": "11"
    },
    "4005": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "POP",
      "path": "11"
    },
    "4006": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "POP",
      "path": "11"
    },
    "4007": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "POP",
      "path": "11"
    },
    "4008": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4010": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4011": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4012": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4014": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "NOT",
      "path": "11"
    },
    "4015": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4017": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4018": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "ADD",
      "path": "11"
    },
    "4019": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "AND",
      "path": "11"
    },
    "4020": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4021": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "ADD",
      "path": "11"
    },
    "4022": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4023": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4025": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4026": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "POP",
      "path": "11"
    },
    "4027": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4028": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "ADD",
      "path": "11"
    },
    "4029": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4030": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFC7"
    },
    "4033": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4034": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4035": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x241A"
    },
    "4038": {
      "fn": "Slave.sendAaveData",
      "jump": "i",
      "offset": [
        12893,
        12994
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4039": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12893,
        12994
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4040": {
      "op": "POP"
    },
    "4041": {
      "op": "POP"
    },
    "4042": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13025,
        13149
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4044": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13025,
        13149
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4045": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13025,
        13149
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4046": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13055,
        13056
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "4048": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13025,
        13149
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4050": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13025,
        13149
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4051": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13025,
        13149
      ],
      "op": "ADD",
      "path": "11"
    },
    "4052": {
      "op": "MSTORE"
    },
    "4053": {
      "op": "SWAP1"
    },
    "4054": {
      "op": "DUP2"
    },
    "4055": {
      "op": "ADD"
    },
    "4056": {
      "op": "DUP10"
    },
    "4057": {
      "op": "SWAP1"
    },
    "4058": {
      "op": "MSTORE"
    },
    "4059": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4061": {
      "op": "DUP2"
    },
    "4062": {
      "op": "ADD"
    },
    "4063": {
      "op": "DUP8"
    },
    "4064": {
      "op": "SWAP1"
    },
    "4065": {
      "op": "MSTORE"
    },
    "4066": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4068": {
      "op": "DUP2"
    },
    "4069": {
      "op": "ADD"
    },
    "4070": {
      "op": "DUP7"
    },
    "4071": {
      "op": "SWAP1"
    },
    "4072": {
      "op": "MSTORE"
    },
    "4073": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12660,
        12994
      ],
      "op": "SWAP8",
      "path": "11"
    },
    "4074": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12660,
        12994
      ],
      "op": "SWAP13",
      "path": "11"
    },
    "4075": {
      "op": "POP"
    },
    "4076": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12660,
        12994
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "4077": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12660,
        12994
      ],
      "op": "SWAP11",
      "path": "11"
    },
    "4078": {
      "op": "POP"
    },
    "4079": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12660,
        12994
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4080": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12660,
        12994
      ],
      "op": "SWAP9",
      "path": "11"
    },
    "4081": {
      "op": "POP"
    },
    "4082": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13005,
        13022
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4084": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13005,
        13022
      ],
      "op": "SWAP8",
      "path": "11"
    },
    "4085": {
      "op": "POP"
    },
    "4086": {
      "op": "POP"
    },
    "4087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4089": {
      "op": "SWAP1"
    },
    "4090": {
      "op": "SWAP5"
    },
    "4091": {
      "op": "ADD"
    },
    "4092": {
      "op": "SWAP5"
    },
    "4093": {
      "op": "POP"
    },
    "4094": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13025,
        13149
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1007"
    },
    "4097": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13025,
        13149
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "4098": {
      "op": "POP"
    },
    "4099": {
      "op": "POP"
    },
    "4100": {
      "op": "POP"
    },
    "4101": {
      "op": "POP"
    },
    "4102": {
      "op": "JUMP"
    },
    "4103": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13025,
        13149
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4104": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13025,
        13149
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4106": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13025,
        13149
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4107": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13025,
        13149
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4109": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13025,
        13149
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4110": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13025,
        13149
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4111": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13025,
        13149
      ],
      "op": "SUB",
      "path": "11"
    },
    "4112": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13025,
        13149
      ],
      "op": "SUB",
      "path": "11"
    },
    "4113": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13025,
        13149
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4114": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13025,
        13149
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4115": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13025,
        13149
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4116": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13025,
        13149
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4118": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13025,
        13149
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4119": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13005,
        13149
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4120": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13005,
        13149
      ],
      "op": "POP",
      "path": "11"
    },
    "4121": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13160,
        13209
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 27,
      "value": "0x104B"
    },
    "4124": {
      "offset": [
        1703,
        1723
      ],
      "op": "PUSH8",
      "path": "11",
      "value": "0xDE41BA4FC9D91AD9"
    },
    "4133": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13187,
        13202
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "4166": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13204,
        13208
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4167": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13160,
        13172
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15E4"
    },
    "4170": {
      "fn": "Slave.sendAaveData",
      "jump": "i",
      "offset": [
        13160,
        13209
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4171": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13160,
        13209
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4172": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13160,
        13209
      ],
      "op": "POP",
      "path": "11"
    },
    "4173": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12650,
        13216
      ],
      "op": "POP",
      "path": "11"
    },
    "4174": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12650,
        13216
      ],
      "op": "POP",
      "path": "11"
    },
    "4175": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12650,
        13216
      ],
      "op": "POP",
      "path": "11"
    },
    "4176": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12650,
        13216
      ],
      "op": "POP",
      "path": "11"
    },
    "4177": {
      "fn": "Slave.sendAaveData",
      "jump": "o",
      "offset": [
        12619,
        13216
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4178": {
      "fn": "Slave.warpAssets",
      "offset": [
        5077,
        6108
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4179": {
      "fn": "Slave.warpAssets",
      "offset": [
        5189,
        5201
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 28,
      "value": "0x8"
    },
    "4181": {
      "fn": "Slave.warpAssets",
      "offset": [
        5189,
        5209
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4182": {
      "fn": "Slave.warpAssets",
      "offset": [
        5189,
        5209
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4183": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4185": {
      "op": "NOT"
    },
    "4186": {
      "fn": "Slave.warpAssets",
      "offset": [
        5189,
        5209
      ],
      "op": "AND",
      "path": "11"
    },
    "4187": {
      "fn": "Slave.warpAssets",
      "offset": [
        5189,
        5209
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4188": {
      "fn": "Slave.warpAssets",
      "offset": [
        5189,
        5209
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4189": {
      "fn": "Slave.warpAssets",
      "offset": [
        5368,
        5388
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "4191": {
      "fn": "Slave.warpAssets",
      "offset": [
        5368,
        5388
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4192": {
      "fn": "Slave.warpAssets",
      "offset": [
        5368,
        5388
      ],
      "op": "ADD",
      "path": "11"
    },
    "4193": {
      "fn": "Slave.warpAssets",
      "offset": [
        5368,
        5388
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4194": {
      "fn": "Slave.warpAssets",
      "offset": [
        5357,
        5423
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4195": {
      "fn": "Slave.warpAssets",
      "offset": [
        5357,
        5423
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4196": {
      "fn": "Slave.warpAssets",
      "offset": [
        5204,
        5209
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4198": {
      "fn": "Slave.warpAssets",
      "offset": [
        5204,
        5209
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4199": {
      "fn": "Slave.warpAssets",
      "offset": [
        5204,
        5209
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4200": {
      "fn": "Slave.warpAssets",
      "offset": [
        5204,
        5209
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4201": {
      "fn": "Slave.warpAssets",
      "offset": [
        5204,
        5209
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4202": {
      "fn": "Slave.warpAssets",
      "offset": [
        5204,
        5209
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4203": {
      "fn": "Slave.warpAssets",
      "offset": [
        5357,
        5423
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x107C"
    },
    "4206": {
      "fn": "Slave.warpAssets",
      "offset": [
        5357,
        5423
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4207": {
      "fn": "Slave.warpAssets",
      "offset": [
        5357,
        5423
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4208": {
      "fn": "Slave.warpAssets",
      "offset": [
        5357,
        5423
      ],
      "op": "ADD",
      "path": "11"
    },
    "4209": {
      "fn": "Slave.warpAssets",
      "offset": [
        5357,
        5423
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4211": {
      "fn": "Slave.warpAssets",
      "offset": [
        5357,
        5423
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4212": {
      "fn": "Slave.warpAssets",
      "offset": [
        5357,
        5423
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4213": {
      "fn": "Slave.warpAssets",
      "offset": [
        5357,
        5423
      ],
      "op": "ADD",
      "path": "11"
    },
    "4214": {
      "fn": "Slave.warpAssets",
      "offset": [
        5357,
        5423
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4215": {
      "fn": "Slave.warpAssets",
      "offset": [
        5357,
        5423
      ],
      "op": "ADD",
      "path": "11"
    },
    "4216": {
      "fn": "Slave.warpAssets",
      "offset": [
        5357,
        5423
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x24B7"
    },
    "4219": {
      "fn": "Slave.warpAssets",
      "jump": "i",
      "offset": [
        5357,
        5423
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4220": {
      "fn": "Slave.warpAssets",
      "offset": [
        5357,
        5423
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4221": {
      "fn": "Slave.warpAssets",
      "offset": [
        5468,
        5478
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "4223": {
      "fn": "Slave.warpAssets",
      "offset": [
        5468,
        5478
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4224": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4226": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4227": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4234": {
      "op": "SHL"
    },
    "4235": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4236": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4237": {
      "fn": "Slave.warpAssets",
      "offset": [
        5498,
        5502
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "4238": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4240": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4241": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "ADD",
      "path": "11"
    },
    "4242": {
      "op": "MSTORE"
    },
    "4243": {
      "fn": "Slave.warpAssets",
      "offset": [
        5219,
        5423
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "4244": {
      "fn": "Slave.warpAssets",
      "offset": [
        5219,
        5423
      ],
      "op": "SWAP8",
      "path": "11"
    },
    "4245": {
      "op": "POP"
    },
    "4246": {
      "fn": "Slave.warpAssets",
      "offset": [
        5219,
        5423
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4247": {
      "fn": "Slave.warpAssets",
      "offset": [
        5219,
        5423
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "4248": {
      "op": "POP"
    },
    "4249": {
      "fn": "Slave.warpAssets",
      "offset": [
        5219,
        5423
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "4250": {
      "op": "POP"
    },
    "4251": {
      "fn": "Slave.warpAssets",
      "offset": [
        5434,
        5458
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4253": {
      "fn": "Slave.warpAssets",
      "offset": [
        5434,
        5458
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4254": {
      "op": "POP"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4261": {
      "op": "SHL"
    },
    "4262": {
      "op": "SUB"
    },
    "4263": {
      "fn": "Slave.warpAssets",
      "offset": [
        5468,
        5478
      ],
      "op": "AND",
      "path": "11"
    },
    "4264": {
      "fn": "Slave.warpAssets",
      "offset": [
        5468,
        5478
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4265": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5489
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "4270": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5489
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4271": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4273": {
      "op": "ADD"
    },
    "4274": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4276": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4278": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4279": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4280": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4281": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "SUB",
      "path": "11"
    },
    "4282": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4283": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "DUP7",
      "path": "11"
    },
    "4284": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "GAS",
      "path": "11"
    },
    "4285": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "4286": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4287": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4288": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4289": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10CE"
    },
    "4292": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4293": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4294": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4296": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4297": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "4298": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4299": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4301": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "REVERT",
      "path": "11"
    },
    "4302": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4303": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "POP",
      "path": "11"
    },
    "4304": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "POP",
      "path": "11"
    },
    "4305": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "POP",
      "path": "11"
    },
    "4306": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "POP",
      "path": "11"
    },
    "4307": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4309": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4310": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4311": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4313": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "NOT",
      "path": "11"
    },
    "4314": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4316": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4317": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "ADD",
      "path": "11"
    },
    "4318": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "AND",
      "path": "11"
    },
    "4319": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4320": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "ADD",
      "path": "11"
    },
    "4321": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4322": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4324": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4325": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "POP",
      "path": "11"
    },
    "4326": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4327": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "ADD",
      "path": "11"
    },
    "4328": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4329": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10F2"
    },
    "4332": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4333": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4334": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x226C"
    },
    "4337": {
      "fn": "Slave.warpAssets",
      "jump": "i",
      "offset": [
        5461,
        5504
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4338": {
      "fn": "Slave.warpAssets",
      "offset": [
        5461,
        5504
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4339": {
      "fn": "Slave.warpAssets",
      "offset": [
        5434,
        5504
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4340": {
      "fn": "Slave.warpAssets",
      "offset": [
        5434,
        5504
      ],
      "op": "POP",
      "path": "11"
    },
    "4341": {
      "fn": "Slave.warpAssets",
      "offset": [
        5514,
        5526
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4343": {
      "fn": "Slave.warpAssets",
      "offset": [
        5529,
        5539
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10FE"
    },
    "4346": {
      "fn": "Slave.warpAssets",
      "offset": [
        5529,
        5537
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x155F"
    },
    "4349": {
      "fn": "Slave.warpAssets",
      "jump": "i",
      "offset": [
        5529,
        5539
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4350": {
      "fn": "Slave.warpAssets",
      "offset": [
        5529,
        5539
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4351": {
      "fn": "Slave.warpAssets",
      "offset": [
        5557,
        5567
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 29,
      "value": "0x3"
    },
    "4353": {
      "fn": "Slave.warpAssets",
      "offset": [
        5557,
        5567
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4354": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4356": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4357": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4364": {
      "op": "SHL"
    },
    "4365": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4366": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4373": {
      "op": "SHL"
    },
    "4374": {
      "op": "SUB"
    },
    "4375": {
      "op": "DUP1"
    },
    "4376": {
      "op": "DUP5"
    },
    "4377": {
      "op": "AND"
    },
    "4378": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4380": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4381": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "ADD",
      "path": "11"
    },
    "4382": {
      "op": "MSTORE"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4385": {
      "op": "DUP3"
    },
    "4386": {
      "op": "ADD"
    },
    "4387": {
      "op": "DUP7"
    },
    "4388": {
      "op": "SWAP1"
    },
    "4389": {
      "op": "MSTORE"
    },
    "4390": {
      "fn": "Slave.warpAssets",
      "offset": [
        5514,
        5539
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4391": {
      "fn": "Slave.warpAssets",
      "offset": [
        5514,
        5539
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "4392": {
      "op": "POP"
    },
    "4393": {
      "fn": "Slave.warpAssets",
      "offset": [
        5557,
        5567
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4394": {
      "fn": "Slave.warpAssets",
      "offset": [
        5557,
        5567
      ],
      "op": "AND",
      "path": "11"
    },
    "4395": {
      "fn": "Slave.warpAssets",
      "offset": [
        5557,
        5567
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4396": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5576
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95EA7B3"
    },
    "4401": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5576
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4404": {
      "op": "ADD"
    },
    "4405": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4407": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4409": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4410": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4411": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4412": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "SUB",
      "path": "11"
    },
    "4413": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4414": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4416": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "DUP8",
      "path": "11"
    },
    "4417": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "GAS",
      "path": "11"
    },
    "4418": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "CALL",
      "path": "11"
    },
    "4419": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4420": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4421": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4422": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1153"
    },
    "4425": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4426": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4427": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4429": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4430": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "4431": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4432": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4434": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "REVERT",
      "path": "11"
    },
    "4435": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4436": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "POP",
      "path": "11"
    },
    "4437": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "POP",
      "path": "11"
    },
    "4438": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "POP",
      "path": "11"
    },
    "4439": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "POP",
      "path": "11"
    },
    "4440": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4442": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4443": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4444": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4446": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "NOT",
      "path": "11"
    },
    "4447": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4449": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4450": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "ADD",
      "path": "11"
    },
    "4451": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "AND",
      "path": "11"
    },
    "4452": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4453": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "ADD",
      "path": "11"
    },
    "4454": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4455": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4457": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4458": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "POP",
      "path": "11"
    },
    "4459": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4460": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "ADD",
      "path": "11"
    },
    "4461": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4462": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1177"
    },
    "4465": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4466": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4467": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2285"
    },
    "4470": {
      "fn": "Slave.warpAssets",
      "jump": "i",
      "offset": [
        5550,
        5600
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4471": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4472": {
      "fn": "Slave.warpAssets",
      "offset": [
        5550,
        5600
      ],
      "op": "POP",
      "path": "11"
    },
    "4473": {
      "fn": "Slave.warpAssets",
      "offset": [
        5611,
        5632
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4475": {
      "fn": "Slave.warpAssets",
      "offset": [
        5635,
        5662
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1182"
    },
    "4478": {
      "fn": "Slave.warpAssets",
      "offset": [
        5635,
        5660
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1BC3"
    },
    "4481": {
      "fn": "Slave.warpAssets",
      "jump": "i",
      "offset": [
        5635,
        5662
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4482": {
      "fn": "Slave.warpAssets",
      "offset": [
        5635,
        5662
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4483": {
      "fn": "Slave.warpAssets",
      "offset": [
        5673,
        5690
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 30,
      "value": "0x10"
    },
    "4485": {
      "fn": "Slave.warpAssets",
      "offset": [
        5673,
        5706
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4486": {
      "fn": "Slave.warpAssets",
      "offset": [
        5673,
        5706
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4487": {
      "fn": "Slave.warpAssets",
      "offset": [
        5673,
        5706
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4488": {
      "fn": "Slave.warpAssets",
      "offset": [
        5724,
        5733
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 31,
      "value": "0x2"
    },
    "4490": {
      "fn": "Slave.warpAssets",
      "offset": [
        5724,
        5733
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4491": {
      "fn": "Slave.warpAssets",
      "offset": [
        5743,
        5770
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4493": {
      "fn": "Slave.warpAssets",
      "offset": [
        5743,
        5770
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4494": {
      "fn": "Slave.warpAssets",
      "offset": [
        5743,
        5770
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4495": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4497": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4498": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "4503": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4505": {
      "op": "SHL"
    },
    "4506": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4507": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4514": {
      "op": "SHL"
    },
    "4515": {
      "op": "SUB"
    },
    "4516": {
      "fn": "Slave.warpAssets",
      "offset": [
        5743,
        5770
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4517": {
      "fn": "Slave.warpAssets",
      "offset": [
        5743,
        5770
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4518": {
      "fn": "Slave.warpAssets",
      "offset": [
        5743,
        5770
      ],
      "op": "AND",
      "path": "11"
    },
    "4519": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4520": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4521": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "ADD",
      "path": "11"
    },
    "4522": {
      "op": "SWAP3"
    },
    "4523": {
      "op": "SWAP1"
    },
    "4524": {
      "op": "SWAP3"
    },
    "4525": {
      "op": "MSTORE"
    },
    "4526": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4528": {
      "op": "DUP3"
    },
    "4529": {
      "op": "ADD"
    },
    "4530": {
      "op": "DUP5"
    },
    "4531": {
      "op": "SWAP1"
    },
    "4532": {
      "op": "MSTORE"
    },
    "4533": {
      "fn": "Slave.warpAssets",
      "offset": [
        5673,
        5706
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4534": {
      "fn": "Slave.warpAssets",
      "offset": [
        5673,
        5706
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "4535": {
      "op": "POP"
    },
    "4536": {
      "fn": "Slave.warpAssets",
      "offset": [
        5724,
        5733
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4537": {
      "fn": "Slave.warpAssets",
      "offset": [
        5724,
        5733
      ],
      "op": "AND",
      "path": "11"
    },
    "4538": {
      "fn": "Slave.warpAssets",
      "offset": [
        5724,
        5733
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4539": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5742
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95EA7B3"
    },
    "4544": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5742
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4545": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4547": {
      "op": "ADD"
    },
    "4548": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4550": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4552": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4553": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4554": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4555": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "SUB",
      "path": "11"
    },
    "4556": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4557": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4559": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "DUP8",
      "path": "11"
    },
    "4560": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "GAS",
      "path": "11"
    },
    "4561": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "CALL",
      "path": "11"
    },
    "4562": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4563": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4564": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4565": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x11E2"
    },
    "4568": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4569": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4570": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4572": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4573": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "4574": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4575": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4577": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "REVERT",
      "path": "11"
    },
    "4578": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4579": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "POP",
      "path": "11"
    },
    "4580": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "POP",
      "path": "11"
    },
    "4581": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "POP",
      "path": "11"
    },
    "4582": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "POP",
      "path": "11"
    },
    "4583": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4585": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4586": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4587": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4589": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "NOT",
      "path": "11"
    },
    "4590": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4592": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4593": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "ADD",
      "path": "11"
    },
    "4594": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "AND",
      "path": "11"
    },
    "4595": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4596": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "ADD",
      "path": "11"
    },
    "4597": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4598": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4600": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4601": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "POP",
      "path": "11"
    },
    "4602": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4603": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "ADD",
      "path": "11"
    },
    "4604": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4605": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1206"
    },
    "4608": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4609": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4610": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2285"
    },
    "4613": {
      "fn": "Slave.warpAssets",
      "jump": "i",
      "offset": [
        5717,
        5786
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4614": {
      "fn": "Slave.warpAssets",
      "offset": [
        5717,
        5786
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4615": {
      "op": "POP"
    },
    "4616": {
      "fn": "Slave.warpAssets",
      "offset": [
        5813,
        5840
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 32,
      "value": "0x4"
    },
    "4618": {
      "fn": "Slave.warpAssets",
      "offset": [
        5813,
        5840
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4619": {
      "fn": "Slave.warpAssets",
      "offset": [
        5813,
        5840
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4620": {
      "fn": "Slave.warpAssets",
      "offset": [
        5954,
        5963
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "4622": {
      "fn": "Slave.warpAssets",
      "offset": [
        5954,
        5963
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4623": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4625": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4626": {
      "op": "PUSH4",
      "value": "0x37E9A827"
    },
    "4631": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4633": {
      "op": "SHL"
    },
    "4634": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4635": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4636": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4637": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4638": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "ADD",
      "path": "11"
    },
    "4639": {
      "op": "DUP5"
    },
    "4640": {
      "op": "SWAP1"
    },
    "4641": {
      "op": "MSTORE"
    },
    "4642": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4647": {
      "op": "DUP10"
    },
    "4648": {
      "op": "AND"
    },
    "4649": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4651": {
      "op": "DUP5"
    },
    "4652": {
      "op": "ADD"
    },
    "4653": {
      "op": "MSTORE"
    },
    "4654": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4656": {
      "op": "DUP4"
    },
    "4657": {
      "op": "ADD"
    },
    "4658": {
      "op": "DUP8"
    },
    "4659": {
      "op": "SWAP1"
    },
    "4660": {
      "op": "MSTORE"
    },
    "4661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4665": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4667": {
      "op": "SHL"
    },
    "4668": {
      "op": "SUB"
    },
    "4669": {
      "fn": "Slave.warpAssets",
      "offset": [
        5954,
        5963
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4670": {
      "fn": "Slave.warpAssets",
      "offset": [
        5954,
        5963
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4671": {
      "fn": "Slave.warpAssets",
      "offset": [
        5954,
        5963
      ],
      "op": "AND",
      "path": "11"
    },
    "4672": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4674": {
      "op": "DUP5"
    },
    "4675": {
      "op": "ADD"
    },
    "4676": {
      "op": "MSTORE"
    },
    "4677": {
      "fn": "Slave.warpAssets",
      "offset": [
        5813,
        5840
      ],
      "op": "AND",
      "path": "11"
    },
    "4678": {
      "fn": "Slave.warpAssets",
      "offset": [
        5813,
        5840
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4679": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5856
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x6FD3504E"
    },
    "4684": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5856
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4685": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4687": {
      "op": "ADD"
    },
    "4688": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4690": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4692": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4693": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4694": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4695": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "SUB",
      "path": "11"
    },
    "4696": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4697": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4699": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "DUP8",
      "path": "11"
    },
    "4700": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "GAS",
      "path": "11"
    },
    "4701": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "CALL",
      "path": "11"
    },
    "4702": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4703": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4704": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4705": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x126E"
    },
    "4708": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4709": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4710": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4712": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4713": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "4714": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4715": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4717": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "REVERT",
      "path": "11"
    },
    "4718": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4719": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "POP",
      "path": "11"
    },
    "4720": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "POP",
      "path": "11"
    },
    "4721": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "POP",
      "path": "11"
    },
    "4722": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "POP",
      "path": "11"
    },
    "4723": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4725": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4726": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4727": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4729": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "NOT",
      "path": "11"
    },
    "4730": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4732": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4733": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "ADD",
      "path": "11"
    },
    "4734": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "AND",
      "path": "11"
    },
    "4735": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4736": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "ADD",
      "path": "11"
    },
    "4737": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4738": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4740": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4741": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "POP",
      "path": "11"
    },
    "4742": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4743": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "ADD",
      "path": "11"
    },
    "4744": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4745": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1292"
    },
    "4748": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4749": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4750": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2510"
    },
    "4753": {
      "fn": "Slave.warpAssets",
      "jump": "i",
      "offset": [
        5797,
        5973
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4754": {
      "fn": "Slave.warpAssets",
      "offset": [
        5797,
        5973
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4755": {
      "op": "POP"
    },
    "4756": {
      "fn": "Slave.warpAssets",
      "offset": [
        5984,
        6101
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 33,
      "value": "0x129D"
    },
    "4759": {
      "fn": "Slave.warpAssets",
      "offset": [
        6017,
        6035
      ],
      "op": "DUP6",
      "path": "11"
    },
    "4760": {
      "fn": "Slave.warpAssets",
      "offset": [
        6073,
        6088
      ],
      "op": "DUP6",
      "path": "11"
    },
    "4761": {
      "fn": "Slave.warpAssets",
      "offset": [
        5984,
        6003
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D3E"
    },
    "4764": {
      "fn": "Slave.warpAssets",
      "jump": "i",
      "offset": [
        5984,
        6101
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4765": {
      "fn": "Slave.warpAssets",
      "offset": [
        5984,
        6101
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4766": {
      "fn": "Slave.warpAssets",
      "offset": [
        5150,
        6108
      ],
      "op": "POP",
      "path": "11"
    },
    "4767": {
      "fn": "Slave.warpAssets",
      "offset": [
        5150,
        6108
      ],
      "op": "POP",
      "path": "11"
    },
    "4768": {
      "fn": "Slave.warpAssets",
      "offset": [
        5150,
        6108
      ],
      "op": "POP",
      "path": "11"
    },
    "4769": {
      "fn": "Slave.warpAssets",
      "offset": [
        5150,
        6108
      ],
      "op": "POP",
      "path": "11"
    },
    "4770": {
      "fn": "Slave.warpAssets",
      "offset": [
        5150,
        6108
      ],
      "op": "POP",
      "path": "11"
    },
    "4771": {
      "fn": "Slave.warpAssets",
      "offset": [
        5150,
        6108
      ],
      "op": "POP",
      "path": "11"
    },
    "4772": {
      "fn": "Slave.warpAssets",
      "offset": [
        5077,
        6108
      ],
      "op": "POP",
      "path": "11"
    },
    "4773": {
      "fn": "Slave.warpAssets",
      "jump": "o",
      "offset": [
        5077,
        6108
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4774": {
      "fn": "Slave.withdraw",
      "offset": [
        6930,
        7574
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4775": {
      "fn": "Slave.withdraw",
      "offset": [
        7014,
        7036
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4777": {
      "fn": "Slave.withdraw",
      "offset": [
        7038,
        7052
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4778": {
      "fn": "Slave.withdraw",
      "offset": [
        7080,
        7095
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4779": {
      "fn": "Slave.withdraw",
      "offset": [
        7080,
        7100
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "4781": {
      "fn": "Slave.withdraw",
      "offset": [
        7080,
        7100
      ],
      "op": "ADD",
      "path": "11"
    },
    "4782": {
      "fn": "Slave.withdraw",
      "offset": [
        7080,
        7100
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4783": {
      "fn": "Slave.withdraw",
      "offset": [
        7056,
        7149
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4784": {
      "fn": "Slave.withdraw",
      "offset": [
        7056,
        7149
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4786": {
      "fn": "Slave.withdraw",
      "offset": [
        7056,
        7149
      ],
      "op": "ADD",
      "path": "11"
    },
    "4787": {
      "fn": "Slave.withdraw",
      "offset": [
        7056,
        7149
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4788": {
      "fn": "Slave.withdraw",
      "offset": [
        7056,
        7149
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4789": {
      "fn": "Slave.withdraw",
      "offset": [
        7056,
        7149
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4790": {
      "fn": "Slave.withdraw",
      "offset": [
        7056,
        7149
      ],
      "op": "ADD",
      "path": "11"
    },
    "4791": {
      "fn": "Slave.withdraw",
      "offset": [
        7056,
        7149
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4792": {
      "fn": "Slave.withdraw",
      "offset": [
        7056,
        7149
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x12C1"
    },
    "4795": {
      "fn": "Slave.withdraw",
      "offset": [
        7056,
        7149
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4796": {
      "fn": "Slave.withdraw",
      "offset": [
        7056,
        7149
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4797": {
      "fn": "Slave.withdraw",
      "offset": [
        7056,
        7149
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x252D"
    },
    "4800": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7056,
        7149
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4801": {
      "fn": "Slave.withdraw",
      "offset": [
        7056,
        7149
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4802": {
      "fn": "Slave.withdraw",
      "offset": [
        7011,
        7149
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4803": {
      "fn": "Slave.withdraw",
      "offset": [
        7011,
        7149
      ],
      "op": "POP",
      "path": "11"
    },
    "4804": {
      "fn": "Slave.withdraw",
      "offset": [
        7011,
        7149
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4805": {
      "fn": "Slave.withdraw",
      "offset": [
        7011,
        7149
      ],
      "op": "POP",
      "path": "11"
    },
    "4806": {
      "fn": "Slave.withdraw",
      "offset": [
        7011,
        7149
      ],
      "op": "POP",
      "path": "11"
    },
    "4807": {
      "fn": "Slave.withdraw",
      "offset": [
        7160,
        7172
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4809": {
      "fn": "Slave.withdraw",
      "offset": [
        7175,
        7185
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x12D0"
    },
    "4812": {
      "fn": "Slave.withdraw",
      "offset": [
        7175,
        7183
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x155F"
    },
    "4815": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7175,
        7185
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4816": {
      "fn": "Slave.withdraw",
      "offset": [
        7175,
        7185
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4817": {
      "fn": "Slave.withdraw",
      "offset": [
        7223,
        7233
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "4819": {
      "fn": "Slave.withdraw",
      "offset": [
        7223,
        7233
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4820": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4822": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4823": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4828": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4830": {
      "op": "SHL"
    },
    "4831": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4832": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4833": {
      "fn": "Slave.withdraw",
      "offset": [
        7253,
        7257
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "4834": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4836": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4837": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "ADD",
      "path": "11"
    },
    "4838": {
      "op": "MSTORE"
    },
    "4839": {
      "fn": "Slave.withdraw",
      "offset": [
        7160,
        7185
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4840": {
      "fn": "Slave.withdraw",
      "offset": [
        7160,
        7185
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4841": {
      "op": "POP"
    },
    "4842": {
      "fn": "Slave.withdraw",
      "offset": [
        7195,
        7213
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4844": {
      "fn": "Slave.withdraw",
      "offset": [
        7195,
        7213
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4851": {
      "op": "SHL"
    },
    "4852": {
      "op": "SUB"
    },
    "4853": {
      "fn": "Slave.withdraw",
      "offset": [
        7223,
        7233
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4854": {
      "fn": "Slave.withdraw",
      "offset": [
        7223,
        7233
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4855": {
      "fn": "Slave.withdraw",
      "offset": [
        7223,
        7233
      ],
      "op": "AND",
      "path": "11"
    },
    "4856": {
      "fn": "Slave.withdraw",
      "offset": [
        7223,
        7233
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4857": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7244
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "4862": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7244
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4863": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4865": {
      "op": "ADD"
    },
    "4866": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4868": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4870": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4871": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4872": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4873": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "SUB",
      "path": "11"
    },
    "4874": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4875": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "DUP7",
      "path": "11"
    },
    "4876": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "GAS",
      "path": "11"
    },
    "4877": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "4878": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4879": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4880": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4881": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x131E"
    },
    "4884": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4885": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4886": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4888": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4889": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "4890": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4891": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4893": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "REVERT",
      "path": "11"
    },
    "4894": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4895": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "POP",
      "path": "11"
    },
    "4896": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "POP",
      "path": "11"
    },
    "4897": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "POP",
      "path": "11"
    },
    "4898": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "POP",
      "path": "11"
    },
    "4899": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4901": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4902": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4903": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4905": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "NOT",
      "path": "11"
    },
    "4906": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4908": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4909": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "ADD",
      "path": "11"
    },
    "4910": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "AND",
      "path": "11"
    },
    "4911": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4912": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "ADD",
      "path": "11"
    },
    "4913": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4914": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4916": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4917": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "POP",
      "path": "11"
    },
    "4918": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4919": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "ADD",
      "path": "11"
    },
    "4920": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4921": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1342"
    },
    "4924": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4925": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4926": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x226C"
    },
    "4929": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7216,
        7259
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4930": {
      "fn": "Slave.withdraw",
      "offset": [
        7216,
        7259
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4931": {
      "fn": "Slave.withdraw",
      "offset": [
        7195,
        7259
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4932": {
      "fn": "Slave.withdraw",
      "offset": [
        7195,
        7259
      ],
      "op": "POP",
      "path": "11"
    },
    "4933": {
      "fn": "Slave.withdraw",
      "offset": [
        7294,
        7308
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4935": {
      "fn": "Slave.withdraw",
      "offset": [
        7360,
        7384
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "4937": {
      "fn": "Slave.withdraw",
      "offset": [
        7360,
        7384
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4938": {
      "fn": "Slave.withdraw",
      "offset": [
        7334,
        7344
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4939": {
      "fn": "Slave.withdraw",
      "offset": [
        7313,
        7319
      ],
      "op": "DUP6",
      "path": "11"
    },
    "4940": {
      "fn": "Slave.withdraw",
      "offset": [
        7322,
        7330
      ],
      "op": "PUSH8",
      "path": "11",
      "value": "0xDE0B6B3A7640000"
    },
    "4949": {
      "fn": "Slave.withdraw",
      "offset": [
        7313,
        7330
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x135E"
    },
    "4952": {
      "fn": "Slave.withdraw",
      "offset": [
        7313,
        7330
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4953": {
      "fn": "Slave.withdraw",
      "offset": [
        7313,
        7330
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4954": {
      "fn": "Slave.withdraw",
      "offset": [
        7313,
        7330
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2356"
    },
    "4957": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7313,
        7330
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4958": {
      "fn": "Slave.withdraw",
      "offset": [
        7313,
        7330
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4959": {
      "fn": "Slave.withdraw",
      "offset": [
        7312,
        7344
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1368"
    },
    "4962": {
      "fn": "Slave.withdraw",
      "offset": [
        7312,
        7344
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4963": {
      "fn": "Slave.withdraw",
      "offset": [
        7312,
        7344
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4964": {
      "fn": "Slave.withdraw",
      "offset": [
        7312,
        7344
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2356"
    },
    "4967": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7312,
        7344
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4968": {
      "fn": "Slave.withdraw",
      "offset": [
        7312,
        7344
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4969": {
      "fn": "Slave.withdraw",
      "offset": [
        7311,
        7384
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1372"
    },
    "4972": {
      "fn": "Slave.withdraw",
      "offset": [
        7311,
        7384
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4973": {
      "fn": "Slave.withdraw",
      "offset": [
        7311,
        7384
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4974": {
      "fn": "Slave.withdraw",
      "offset": [
        7311,
        7384
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x236D"
    },
    "4977": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7311,
        7384
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4978": {
      "fn": "Slave.withdraw",
      "offset": [
        7311,
        7384
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4979": {
      "fn": "Slave.withdraw",
      "offset": [
        7294,
        7384
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4980": {
      "fn": "Slave.withdraw",
      "offset": [
        7294,
        7384
      ],
      "op": "POP",
      "path": "11"
    },
    "4981": {
      "fn": "Slave.withdraw",
      "offset": [
        7423,
        7429
      ],
      "op": "DUP4",
      "path": "11",
      "statement": 34
    },
    "4982": {
      "fn": "Slave.withdraw",
      "offset": [
        7395,
        7419
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "4984": {
      "fn": "Slave.withdraw",
      "offset": [
        7395,
        7419
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4986": {
      "fn": "Slave.withdraw",
      "offset": [
        7395,
        7429
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4987": {
      "fn": "Slave.withdraw",
      "offset": [
        7395,
        7429
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4988": {
      "fn": "Slave.withdraw",
      "offset": [
        7395,
        7429
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4989": {
      "fn": "Slave.withdraw",
      "offset": [
        7395,
        7429
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1386"
    },
    "4992": {
      "fn": "Slave.withdraw",
      "offset": [
        7395,
        7429
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4993": {
      "fn": "Slave.withdraw",
      "offset": [
        7395,
        7429
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4994": {
      "fn": "Slave.withdraw",
      "offset": [
        7395,
        7429
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x256D"
    },
    "4997": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7395,
        7429
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4998": {
      "fn": "Slave.withdraw",
      "offset": [
        7395,
        7429
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4999": {
      "fn": "Slave.withdraw",
      "offset": [
        7395,
        7429
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5000": {
      "fn": "Slave.withdraw",
      "offset": [
        7395,
        7429
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5001": {
      "fn": "Slave.withdraw",
      "offset": [
        7395,
        7429
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "5002": {
      "op": "POP"
    },
    "5003": {
      "op": "POP"
    },
    "5004": {
      "fn": "Slave.withdraw",
      "offset": [
        7447,
        7457
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 35,
      "value": "0x3"
    },
    "5006": {
      "fn": "Slave.withdraw",
      "offset": [
        7447,
        7457
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5011": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5013": {
      "op": "SHL"
    },
    "5014": {
      "op": "SUB"
    },
    "5015": {
      "fn": "Slave.withdraw",
      "offset": [
        7447,
        7457
      ],
      "op": "AND",
      "path": "11"
    },
    "5016": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7466
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95EA7B3"
    },
    "5021": {
      "fn": "Slave.withdraw",
      "offset": [
        7467,
        7471
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5022": {
      "fn": "Slave.withdraw",
      "offset": [
        7473,
        7490
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13AF"
    },
    "5025": {
      "fn": "Slave.withdraw",
      "offset": [
        7482,
        7490
      ],
      "op": "PUSH8",
      "path": "11",
      "value": "0xDE0B6B3A7640000"
    },
    "5034": {
      "fn": "Slave.withdraw",
      "offset": [
        7473,
        7479
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5035": {
      "fn": "Slave.withdraw",
      "offset": [
        7473,
        7490
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x236D"
    },
    "5038": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7473,
        7490
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5039": {
      "fn": "Slave.withdraw",
      "offset": [
        7473,
        7490
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5040": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5042": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5047": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5049": {
      "op": "SHL"
    },
    "5050": {
      "op": "SUB"
    },
    "5051": {
      "op": "NOT"
    },
    "5052": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "5054": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5055": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5056": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "SHL",
      "path": "11"
    },
    "5057": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "AND",
      "path": "11"
    },
    "5058": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5059": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5066": {
      "op": "SHL"
    },
    "5067": {
      "op": "SUB"
    },
    "5068": {
      "op": "SWAP1"
    },
    "5069": {
      "op": "SWAP3"
    },
    "5070": {
      "op": "AND"
    },
    "5071": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5073": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5074": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "ADD",
      "path": "11"
    },
    "5075": {
      "op": "MSTORE"
    },
    "5076": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5078": {
      "op": "DUP3"
    },
    "5079": {
      "op": "ADD"
    },
    "5080": {
      "op": "MSTORE"
    },
    "5081": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5083": {
      "op": "ADD"
    },
    "5084": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5086": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5088": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5089": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5090": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5091": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "SUB",
      "path": "11"
    },
    "5092": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5093": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5095": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "DUP8",
      "path": "11"
    },
    "5096": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "GAS",
      "path": "11"
    },
    "5097": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "CALL",
      "path": "11"
    },
    "5098": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5099": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5100": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5101": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13FA"
    },
    "5104": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5105": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5106": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5108": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5109": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "5110": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5111": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5113": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "REVERT",
      "path": "11"
    },
    "5114": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5115": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "POP",
      "path": "11"
    },
    "5116": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "POP",
      "path": "11"
    },
    "5117": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "POP",
      "path": "11"
    },
    "5118": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "POP",
      "path": "11"
    },
    "5119": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5121": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5122": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5123": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "5125": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "NOT",
      "path": "11"
    },
    "5126": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "5128": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5129": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "ADD",
      "path": "11"
    },
    "5130": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "AND",
      "path": "11"
    },
    "5131": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5132": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "ADD",
      "path": "11"
    },
    "5133": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5134": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5136": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5137": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "POP",
      "path": "11"
    },
    "5138": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5139": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "ADD",
      "path": "11"
    },
    "5140": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5141": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x141E"
    },
    "5144": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5145": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5146": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2285"
    },
    "5149": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7440,
        7491
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5150": {
      "fn": "Slave.withdraw",
      "offset": [
        7440,
        7491
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5151": {
      "op": "POP"
    },
    "5152": {
      "fn": "Slave.withdraw",
      "offset": [
        7522,
        7531
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 36,
      "value": "0x2"
    },
    "5154": {
      "fn": "Slave.withdraw",
      "offset": [
        7522,
        7531
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5161": {
      "op": "SHL"
    },
    "5162": {
      "op": "SUB"
    },
    "5163": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7521
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5164": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7521
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5165": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7521
      ],
      "op": "AND",
      "path": "11"
    },
    "5166": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7521
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5167": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7521
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x69328DEC"
    },
    "5172": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7521
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5173": {
      "fn": "Slave.withdraw",
      "offset": [
        7522,
        7531
      ],
      "op": "AND",
      "path": "11"
    },
    "5174": {
      "fn": "Slave.withdraw",
      "offset": [
        7533,
        7550
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1447"
    },
    "5177": {
      "fn": "Slave.withdraw",
      "offset": [
        7542,
        7550
      ],
      "op": "PUSH8",
      "path": "11",
      "value": "0xDE0B6B3A7640000"
    },
    "5186": {
      "fn": "Slave.withdraw",
      "offset": [
        7533,
        7539
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5187": {
      "fn": "Slave.withdraw",
      "offset": [
        7533,
        7550
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x236D"
    },
    "5190": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7533,
        7550
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5191": {
      "fn": "Slave.withdraw",
      "offset": [
        7533,
        7550
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5192": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5194": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5199": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5201": {
      "op": "SHL"
    },
    "5202": {
      "op": "SUB"
    },
    "5203": {
      "op": "NOT"
    },
    "5204": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "5206": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5207": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5208": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "SHL",
      "path": "11"
    },
    "5209": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "AND",
      "path": "11"
    },
    "5210": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5211": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5218": {
      "op": "SHL"
    },
    "5219": {
      "op": "SUB"
    },
    "5220": {
      "op": "SWAP3"
    },
    "5221": {
      "op": "DUP4"
    },
    "5222": {
      "op": "AND"
    },
    "5223": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5225": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5226": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "ADD",
      "path": "11"
    },
    "5227": {
      "op": "MSTORE"
    },
    "5228": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5230": {
      "op": "DUP2"
    },
    "5231": {
      "op": "ADD"
    },
    "5232": {
      "op": "SWAP2"
    },
    "5233": {
      "op": "SWAP1"
    },
    "5234": {
      "op": "SWAP2"
    },
    "5235": {
      "op": "MSTORE"
    },
    "5236": {
      "op": "SWAP1"
    },
    "5237": {
      "op": "DUP9"
    },
    "5238": {
      "op": "AND"
    },
    "5239": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5241": {
      "op": "DUP3"
    },
    "5242": {
      "op": "ADD"
    },
    "5243": {
      "op": "MSTORE"
    },
    "5244": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5246": {
      "op": "ADD"
    },
    "5247": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5249": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5251": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5252": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5253": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5254": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "SUB",
      "path": "11"
    },
    "5255": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5256": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5258": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "DUP8",
      "path": "11"
    },
    "5259": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "GAS",
      "path": "11"
    },
    "5260": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "CALL",
      "path": "11"
    },
    "5261": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5262": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5263": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5264": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x149D"
    },
    "5267": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5268": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5269": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5271": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5272": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "5273": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5274": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5276": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "REVERT",
      "path": "11"
    },
    "5277": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5278": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "POP",
      "path": "11"
    },
    "5279": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "POP",
      "path": "11"
    },
    "5280": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "POP",
      "path": "11"
    },
    "5281": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "POP",
      "path": "11"
    },
    "5282": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5284": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5285": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5286": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "5288": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "NOT",
      "path": "11"
    },
    "5289": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "5291": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5292": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "ADD",
      "path": "11"
    },
    "5293": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "AND",
      "path": "11"
    },
    "5294": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5295": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "ADD",
      "path": "11"
    },
    "5296": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5297": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5299": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5300": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "POP",
      "path": "11"
    },
    "5301": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5302": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "ADD",
      "path": "11"
    },
    "5303": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5304": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x129D"
    },
    "5307": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5308": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5309": {
      "fn": "Slave.withdraw",
      "offset": [
        7501,
        7567
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x226C"
    },
    "5312": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7501,
        7567
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5313": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4697,
        4849
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5318": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5320": {
      "op": "SHL"
    },
    "5321": {
      "op": "SUB"
    },
    "5322": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4811,
        4842
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 37
    },
    "5323": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4811,
        4842
      ],
      "op": "AND",
      "path": "11"
    },
    "5324": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4811,
        4842
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5326": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4811,
        4842
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5327": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4811,
        4842
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5328": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4811,
        4842
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5329": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4811,
        4829
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xD"
    },
    "5331": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4811,
        4842
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5333": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4811,
        4842
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5334": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4811,
        4842
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5335": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4811,
        4842
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5336": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4811,
        4842
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5338": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4811,
        4842
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5339": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4811,
        4842
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5340": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4811,
        4842
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5341": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4811,
        4842
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "5342": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5343": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5344": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5345": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5346": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5347": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5348": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "MUL",
      "path": "11"
    },
    "5349": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5350": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "ADD",
      "path": "11"
    },
    "5351": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5352": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "ADD",
      "path": "11"
    },
    "5353": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5354": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "5355": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5356": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5357": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5358": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5359": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4776,
        4792
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "5361": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4776,
        4792
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "5362": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "5363": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5364": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "ADD",
      "path": "11"
    },
    "5365": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4811,
        4842
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5366": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5367": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5368": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5369": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1553"
    },
    "5372": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5373": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5375": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "MUL",
      "path": "11"
    },
    "5376": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5377": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "ADD",
      "path": "11"
    },
    "5378": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5379": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5380": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5382": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5383": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5385": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5387": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "5388": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5389": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5391": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5392": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5393": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5394": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5395": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5396": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5397": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5398": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "5401": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "EXP",
      "path": "11"
    },
    "5402": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5403": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "DIV",
      "path": "11"
    },
    "5404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5408": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5410": {
      "op": "SHL"
    },
    "5411": {
      "op": "SUB"
    },
    "5412": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "AND",
      "path": "11"
    },
    "5413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5417": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5419": {
      "op": "SHL"
    },
    "5420": {
      "op": "SUB"
    },
    "5421": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "AND",
      "path": "11"
    },
    "5422": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5423": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5424": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5426": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "ADD",
      "path": "11"
    },
    "5427": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5428": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x10"
    },
    "5430": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "ADD",
      "path": "11"
    },
    "5431": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5432": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5434": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5435": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xF"
    },
    "5437": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "ADD",
      "path": "11"
    },
    "5438": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "DIV",
      "path": "11"
    },
    "5439": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "5440": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5441": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "ADD",
      "path": "11"
    },
    "5442": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "5443": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "5445": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "SUB",
      "path": "11"
    },
    "5446": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5447": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "MUL",
      "path": "11"
    },
    "5448": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5449": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "POP",
      "path": "11"
    },
    "5450": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5451": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5452": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "GT",
      "path": "11"
    },
    "5453": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1510"
    },
    "5456": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5457": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5458": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "POP",
      "path": "11"
    },
    "5459": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5460": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "POP",
      "path": "11"
    },
    "5461": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "POP",
      "path": "11"
    },
    "5462": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "POP",
      "path": "11"
    },
    "5463": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "POP",
      "path": "11"
    },
    "5464": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "POP",
      "path": "11"
    },
    "5465": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5466": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4804,
        4842
      ],
      "op": "POP",
      "path": "11"
    },
    "5467": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4697,
        4849
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5468": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4697,
        4849
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5469": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4697,
        4849
      ],
      "op": "POP",
      "path": "11"
    },
    "5470": {
      "fn": "Slave.getUserNonces",
      "jump": "o",
      "offset": [
        4697,
        4849
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5471": {
      "fn": "Slave._getPool",
      "offset": [
        10750,
        10932
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5472": {
      "fn": "Slave._getPool",
      "offset": [
        10793,
        10800
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5474": {
      "fn": "Slave._getPool",
      "offset": [
        10812,
        10824
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5475": {
      "fn": "Slave._getPool",
      "offset": [
        10850,
        10879
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "5508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5514": {
      "op": "SHL"
    },
    "5515": {
      "op": "SUB"
    },
    "5516": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10901
      ],
      "op": "AND",
      "path": "11"
    },
    "5517": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10901
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x26B1D5F"
    },
    "5522": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5524": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5525": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5526": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "5531": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "AND",
      "path": "11"
    },
    "5532": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "5534": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "SHL",
      "path": "11"
    },
    "5535": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5536": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5537": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5539": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "ADD",
      "path": "11"
    },
    "5540": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5542": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5544": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5545": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5546": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5547": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "SUB",
      "path": "11"
    },
    "5548": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5549": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "DUP7",
      "path": "11"
    },
    "5550": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "GAS",
      "path": "11"
    },
    "5551": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "5552": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5553": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5554": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5555": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15C0"
    },
    "5558": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5559": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5560": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5562": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5563": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "5564": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5565": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5567": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "REVERT",
      "path": "11"
    },
    "5568": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5569": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "POP",
      "path": "11"
    },
    "5570": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "POP",
      "path": "11"
    },
    "5571": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "POP",
      "path": "11"
    },
    "5572": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "POP",
      "path": "11"
    },
    "5573": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5575": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5576": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5577": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "5579": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "NOT",
      "path": "11"
    },
    "5580": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "5582": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5583": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "ADD",
      "path": "11"
    },
    "5584": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "AND",
      "path": "11"
    },
    "5585": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5586": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "ADD",
      "path": "11"
    },
    "5587": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5588": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5590": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5591": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "POP",
      "path": "11"
    },
    "5592": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5593": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "ADD",
      "path": "11"
    },
    "5594": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5595": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5D3"
    },
    "5598": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5599": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5600": {
      "fn": "Slave._getPool",
      "offset": [
        10827,
        10903
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2580"
    },
    "5603": {
      "fn": "Slave._getPool",
      "jump": "i",
      "offset": [
        10827,
        10903
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5604": {
      "fn": "Slave._sendMessage",
      "offset": [
        8903,
        10744
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5605": {
      "fn": "Slave._sendMessage",
      "offset": [
        9044,
        9061
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5607": {
      "fn": "Slave._sendMessage",
      "offset": [
        9073,
        9116
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1621"
    },
    "5610": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5612": {
      "op": "MLOAD"
    },
    "5613": {
      "op": "DUP1"
    },
    "5614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5616": {
      "op": "ADD"
    },
    "5617": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5619": {
      "op": "MSTORE"
    },
    "5620": {
      "op": "DUP1"
    },
    "5621": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5623": {
      "op": "DUP2"
    },
    "5624": {
      "op": "MSTORE"
    },
    "5625": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5627": {
      "op": "ADD"
    },
    "5628": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5630": {
      "op": "DUP2"
    },
    "5631": {
      "op": "MSTORE"
    },
    "5632": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5634": {
      "op": "ADD"
    },
    "5635": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5637": {
      "op": "DUP2"
    },
    "5638": {
      "op": "MSTORE"
    },
    "5639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5641": {
      "op": "ADD"
    },
    "5642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5650": {
      "op": "SHL"
    },
    "5651": {
      "op": "SUB"
    },
    "5652": {
      "op": "AND"
    },
    "5653": {
      "op": "DUP2"
    },
    "5654": {
      "op": "MSTORE"
    },
    "5655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5657": {
      "op": "ADD"
    },
    "5658": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5660": {
      "op": "DUP2"
    },
    "5661": {
      "op": "MSTORE"
    },
    "5662": {
      "op": "POP"
    },
    "5663": {
      "op": "SWAP1"
    },
    "5664": {
      "op": "JUMP"
    },
    "5665": {
      "fn": "Slave._sendMessage",
      "offset": [
        9073,
        9116
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5666": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 38,
      "value": "0x40"
    },
    "5668": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5669": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5670": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA0"
    },
    "5672": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5673": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "ADD",
      "path": "11"
    },
    "5674": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5675": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5676": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5681": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5683": {
      "op": "SHL"
    },
    "5684": {
      "op": "SUB"
    },
    "5685": {
      "op": "DUP6"
    },
    "5686": {
      "op": "AND"
    },
    "5687": {
      "fn": "Slave._sendMessage",
      "offset": [
        9304,
        9324
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC0"
    },
    "5689": {
      "fn": "Slave._sendMessage",
      "offset": [
        9304,
        9324
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5690": {
      "fn": "Slave._sendMessage",
      "offset": [
        9304,
        9324
      ],
      "op": "ADD",
      "path": "11"
    },
    "5691": {
      "op": "MSTORE"
    },
    "5692": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5693": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5695": {
      "op": "DUP2"
    },
    "5696": {
      "op": "ADD"
    },
    "5697": {
      "fn": "Slave._sendMessage",
      "offset": [
        9304,
        9324
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5699": {
      "fn": "Slave._sendMessage",
      "offset": [
        9304,
        9324
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5700": {
      "fn": "Slave._sendMessage",
      "offset": [
        9304,
        9324
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5701": {
      "fn": "Slave._sendMessage",
      "offset": [
        9304,
        9324
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5702": {
      "fn": "Slave._sendMessage",
      "offset": [
        9304,
        9324
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5703": {
      "fn": "Slave._sendMessage",
      "offset": [
        9304,
        9324
      ],
      "op": "SUB",
      "path": "11"
    },
    "5704": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5706": {
      "op": "NOT"
    },
    "5707": {
      "fn": "Slave._sendMessage",
      "offset": [
        9304,
        9324
      ],
      "op": "ADD",
      "path": "11"
    },
    "5708": {
      "fn": "Slave._sendMessage",
      "offset": [
        9304,
        9324
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5709": {
      "fn": "Slave._sendMessage",
      "offset": [
        9304,
        9324
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5710": {
      "fn": "Slave._sendMessage",
      "offset": [
        9304,
        9324
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5711": {
      "fn": "Slave._sendMessage",
      "offset": [
        9304,
        9324
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5712": {
      "fn": "Slave._sendMessage",
      "offset": [
        9304,
        9324
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5713": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5714": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5715": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5716": {
      "fn": "Slave._sendMessage",
      "offset": [
        9304,
        9324
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5718": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5719": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5720": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "ADD",
      "path": "11"
    },
    "5721": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "DUP8",
      "path": "11"
    },
    "5722": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5723": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5724": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5725": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5728": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5729": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5730": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5731": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5732": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5733": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "ADD",
      "path": "11"
    },
    "5734": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5735": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5736": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "5737": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5738": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5739": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "ADD",
      "path": "11"
    },
    "5740": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5741": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5742": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1699"
    },
    "5745": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5746": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5747": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5749": {
      "op": "DUP1"
    },
    "5750": {
      "op": "MLOAD"
    },
    "5751": {
      "op": "DUP1"
    },
    "5752": {
      "op": "DUP3"
    },
    "5753": {
      "op": "ADD"
    },
    "5754": {
      "op": "SWAP1"
    },
    "5755": {
      "op": "SWAP2"
    },
    "5756": {
      "op": "MSTORE"
    },
    "5757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5759": {
      "op": "DUP1"
    },
    "5760": {
      "op": "DUP3"
    },
    "5761": {
      "op": "MSTORE"
    },
    "5762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5764": {
      "op": "DUP3"
    },
    "5765": {
      "op": "ADD"
    },
    "5766": {
      "op": "MSTORE"
    },
    "5767": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5768": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5769": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5771": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "ADD",
      "path": "11"
    },
    "5772": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5773": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "5775": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5776": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "SUB",
      "path": "11"
    },
    "5777": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5778": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5779": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1672"
    },
    "5782": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5783": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5784": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "POP",
      "path": "11"
    },
    "5785": {
      "fn": "Slave._sendMessage",
      "offset": [
        9431,
        9461
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5786": {
      "op": "POP"
    },
    "5787": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5788": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5789": {
      "fn": "Slave._sendMessage",
      "offset": [
        9803,
        9814
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "5791": {
      "fn": "Slave._sendMessage",
      "offset": [
        9803,
        9814
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5798": {
      "op": "SHL"
    },
    "5799": {
      "op": "SUB"
    },
    "5800": {
      "fn": "Slave._sendMessage",
      "offset": [
        9803,
        9814
      ],
      "op": "AND",
      "path": "11"
    },
    "5801": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5803": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5804": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5805": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "ADD",
      "path": "11"
    },
    "5806": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5807": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5808": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5809": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5810": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5812": {
      "fn": "Slave._sendMessage",
      "offset": [
        9633,
        9677
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5813": {
      "fn": "Slave._sendMessage",
      "offset": [
        9633,
        9677
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5814": {
      "fn": "Slave._sendMessage",
      "offset": [
        9633,
        9677
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5815": {
      "fn": "Slave._sendMessage",
      "offset": [
        9633,
        9677
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5816": {
      "fn": "Slave._sendMessage",
      "offset": [
        9633,
        9677
      ],
      "op": "ADD",
      "path": "11"
    },
    "5817": {
      "fn": "Slave._sendMessage",
      "offset": [
        9633,
        9677
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5818": {
      "fn": "Slave._sendMessage",
      "offset": [
        9633,
        9677
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5819": {
      "fn": "Slave._sendMessage",
      "offset": [
        9666,
        9675
      ],
      "op": "PUSH3",
      "path": "11",
      "value": "0xF4240"
    },
    "5823": {
      "fn": "Slave._sendMessage",
      "offset": [
        9633,
        9677
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5824": {
      "fn": "Slave._sendMessage",
      "offset": [
        9633,
        9677
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5825": {
      "fn": "Slave._sendMessage",
      "offset": [
        9633,
        9677
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5826": {
      "fn": "Slave._sendMessage",
      "offset": [
        9633,
        9677
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5827": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 39
    },
    "5828": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5829": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "5831": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5832": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5833": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "ADD",
      "path": "4"
    },
    "5834": {
      "op": "SWAP3"
    },
    "5835": {
      "op": "SWAP1"
    },
    "5836": {
      "op": "SWAP3"
    },
    "5837": {
      "op": "MSTORE"
    },
    "5838": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5839": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5840": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5841": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5842": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "SUB",
      "path": "4"
    },
    "5843": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5844": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5845": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "ADD",
      "path": "4"
    },
    "5846": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5847": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5848": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5850": {
      "op": "ADD"
    },
    "5851": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5852": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5853": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5854": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5855": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "ADD",
      "path": "4"
    },
    "5856": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5857": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5862": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5864": {
      "op": "SHL"
    },
    "5865": {
      "op": "SUB"
    },
    "5866": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "AND",
      "path": "4"
    },
    "5867": {
      "op": "PUSH4",
      "value": "0x97A657C9"
    },
    "5872": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5874": {
      "op": "SHL"
    },
    "5875": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "OR",
      "path": "4"
    },
    "5876": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5877": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5878": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5879": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5880": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "ADD",
      "path": "11"
    },
    "5881": {
      "fn": "Slave._sendMessage",
      "offset": [
        9258,
        9826
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5882": {
      "fn": "Slave._sendMessage",
      "offset": [
        9889,
        9901
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5884": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9912
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5885": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9912
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5886": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5888": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5889": {
      "op": "PUSH4",
      "value": "0x20487DED"
    },
    "5894": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5896": {
      "op": "SHL"
    },
    "5897": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5898": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5899": {
      "fn": "Slave._sendMessage",
      "offset": [
        9241,
        9826
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "5900": {
      "fn": "Slave._sendMessage",
      "offset": [
        9241,
        9826
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "5901": {
      "op": "POP"
    },
    "5902": {
      "fn": "Slave._sendMessage",
      "offset": [
        9889,
        9901
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5903": {
      "fn": "Slave._sendMessage",
      "offset": [
        9889,
        9901
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5910": {
      "op": "SHL"
    },
    "5911": {
      "op": "SUB"
    },
    "5912": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9912
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5913": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9912
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5914": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9912
      ],
      "op": "AND",
      "path": "11"
    },
    "5915": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9912
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5916": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9919
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x20487DED"
    },
    "5921": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9919
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5922": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1731"
    },
    "5925": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5926": {
      "fn": "Slave._sendMessage",
      "offset": [
        9933,
        9957
      ],
      "op": "DUP10",
      "path": "11"
    },
    "5927": {
      "fn": "Slave._sendMessage",
      "offset": [
        9933,
        9957
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5928": {
      "fn": "Slave._sendMessage",
      "offset": [
        9241,
        9826
      ],
      "op": "DUP7",
      "path": "11"
    },
    "5929": {
      "fn": "Slave._sendMessage",
      "offset": [
        9241,
        9826
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5930": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5932": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "ADD",
      "path": "11"
    },
    "5933": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x25E3"
    },
    "5936": {
      "fn": "Slave._sendMessage",
      "jump": "i",
      "offset": [
        9904,
        9995
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5937": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5938": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5940": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5942": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5943": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5944": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5945": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "SUB",
      "path": "11"
    },
    "5946": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5947": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "DUP7",
      "path": "11"
    },
    "5948": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "GAS",
      "path": "11"
    },
    "5949": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "5950": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5951": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5952": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5953": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x174E"
    },
    "5956": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5957": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5958": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5960": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5961": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "5962": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5963": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5965": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "REVERT",
      "path": "11"
    },
    "5966": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5967": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "POP",
      "path": "11"
    },
    "5968": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "POP",
      "path": "11"
    },
    "5969": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "POP",
      "path": "11"
    },
    "5970": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "POP",
      "path": "11"
    },
    "5971": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5973": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5974": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5975": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "5977": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "NOT",
      "path": "11"
    },
    "5978": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "5980": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5981": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "ADD",
      "path": "11"
    },
    "5982": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "AND",
      "path": "11"
    },
    "5983": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5984": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "ADD",
      "path": "11"
    },
    "5985": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5986": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5988": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5989": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "POP",
      "path": "11"
    },
    "5990": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5991": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "ADD",
      "path": "11"
    },
    "5992": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5993": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1772"
    },
    "5996": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5997": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5998": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x226C"
    },
    "6001": {
      "fn": "Slave._sendMessage",
      "jump": "i",
      "offset": [
        9904,
        9995
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6002": {
      "fn": "Slave._sendMessage",
      "offset": [
        9904,
        9995
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6003": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10028
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 40,
      "value": "0x1"
    },
    "6005": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10028
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6006": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6008": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6009": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6014": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6016": {
      "op": "SHL"
    },
    "6017": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6018": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6019": {
      "fn": "Slave._sendMessage",
      "offset": [
        10047,
        10051
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "6020": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6022": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6023": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "ADD",
      "path": "11"
    },
    "6024": {
      "op": "MSTORE"
    },
    "6025": {
      "fn": "Slave._sendMessage",
      "offset": [
        9889,
        9995
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6026": {
      "fn": "Slave._sendMessage",
      "offset": [
        9889,
        9995
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "6027": {
      "op": "POP"
    },
    "6028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6032": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6034": {
      "op": "SHL"
    },
    "6035": {
      "op": "SUB"
    },
    "6036": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10028
      ],
      "op": "AND",
      "path": "11"
    },
    "6037": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10028
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6038": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10038
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "6043": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10038
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6044": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6046": {
      "op": "ADD"
    },
    "6047": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6049": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6051": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6052": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6053": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6054": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "SUB",
      "path": "11"
    },
    "6055": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6056": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "DUP7",
      "path": "11"
    },
    "6057": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "GAS",
      "path": "11"
    },
    "6058": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "6059": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6060": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6061": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6062": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x17BB"
    },
    "6065": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6066": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6067": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6069": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6070": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "6071": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6072": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6074": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "REVERT",
      "path": "11"
    },
    "6075": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6076": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "POP",
      "path": "11"
    },
    "6077": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "POP",
      "path": "11"
    },
    "6078": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "POP",
      "path": "11"
    },
    "6079": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "POP",
      "path": "11"
    },
    "6080": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6082": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6083": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6084": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6086": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "NOT",
      "path": "11"
    },
    "6087": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6089": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6090": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "ADD",
      "path": "11"
    },
    "6091": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "AND",
      "path": "11"
    },
    "6092": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6093": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "ADD",
      "path": "11"
    },
    "6094": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6095": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6097": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6098": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "POP",
      "path": "11"
    },
    "6099": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6100": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "ADD",
      "path": "11"
    },
    "6101": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6102": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x17DF"
    },
    "6105": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6106": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6107": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x226C"
    },
    "6110": {
      "fn": "Slave._sendMessage",
      "jump": "i",
      "offset": [
        10017,
        10053
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6111": {
      "fn": "Slave._sendMessage",
      "offset": [
        10017,
        10053
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6112": {
      "fn": "Slave._sendMessage",
      "offset": [
        10010,
        10014
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6113": {
      "branch": 59,
      "fn": "Slave._sendMessage",
      "offset": [
        10010,
        10053
      ],
      "op": "GT",
      "path": "11"
    },
    "6114": {
      "fn": "Slave._sendMessage",
      "offset": [
        10006,
        10134
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6115": {
      "fn": "Slave._sendMessage",
      "offset": [
        10006,
        10134
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1876"
    },
    "6118": {
      "branch": 59,
      "fn": "Slave._sendMessage",
      "offset": [
        10006,
        10134
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6119": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10102
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "6121": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10102
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6122": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6124": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6125": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6130": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6132": {
      "op": "SHL"
    },
    "6133": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6134": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6135": {
      "fn": "Slave._sendMessage",
      "offset": [
        10121,
        10125
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "6136": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6138": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6139": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "ADD",
      "path": "11"
    },
    "6140": {
      "op": "MSTORE"
    },
    "6141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6147": {
      "op": "SHL"
    },
    "6148": {
      "op": "SUB"
    },
    "6149": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10102
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6150": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10102
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6151": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10102
      ],
      "op": "AND",
      "path": "11"
    },
    "6152": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10102
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6153": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10112
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "6158": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10112
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6159": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6161": {
      "op": "ADD"
    },
    "6162": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6164": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6166": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6167": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6168": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6169": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "SUB",
      "path": "11"
    },
    "6170": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6171": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "DUP7",
      "path": "11"
    },
    "6172": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "GAS",
      "path": "11"
    },
    "6173": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "6174": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6175": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6176": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6177": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x182E"
    },
    "6180": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6181": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6182": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6184": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6185": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "6186": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6187": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6189": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "REVERT",
      "path": "11"
    },
    "6190": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6191": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "POP",
      "path": "11"
    },
    "6192": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "POP",
      "path": "11"
    },
    "6193": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "POP",
      "path": "11"
    },
    "6194": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "POP",
      "path": "11"
    },
    "6195": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6197": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6198": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6199": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6201": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "NOT",
      "path": "11"
    },
    "6202": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6204": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6205": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "ADD",
      "path": "11"
    },
    "6206": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "AND",
      "path": "11"
    },
    "6207": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6208": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "ADD",
      "path": "11"
    },
    "6209": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6210": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6212": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6213": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "POP",
      "path": "11"
    },
    "6214": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6215": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "ADD",
      "path": "11"
    },
    "6216": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6217": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1852"
    },
    "6220": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6221": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6222": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x226C"
    },
    "6225": {
      "fn": "Slave._sendMessage",
      "jump": "i",
      "offset": [
        10091,
        10127
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6226": {
      "fn": "Slave._sendMessage",
      "offset": [
        10091,
        10127
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6227": {
      "fn": "Slave._sendMessage",
      "offset": [
        10074,
        10134
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6229": {
      "fn": "Slave._sendMessage",
      "offset": [
        10074,
        10134
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6230": {
      "op": "PUSH4",
      "value": "0x4787A103"
    },
    "6235": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6237": {
      "op": "SHL"
    },
    "6238": {
      "fn": "Slave._sendMessage",
      "offset": [
        10074,
        10134
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6239": {
      "fn": "Slave._sendMessage",
      "offset": [
        10074,
        10134
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6240": {
      "fn": "Slave._sendMessage",
      "offset": [
        10074,
        10134
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6242": {
      "fn": "Slave._sendMessage",
      "offset": [
        10074,
        10134
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6243": {
      "fn": "Slave._sendMessage",
      "offset": [
        10074,
        10134
      ],
      "op": "ADD",
      "path": "11"
    },
    "6244": {
      "op": "SWAP2"
    },
    "6245": {
      "op": "SWAP1"
    },
    "6246": {
      "op": "SWAP2"
    },
    "6247": {
      "op": "MSTORE"
    },
    "6248": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6250": {
      "op": "DUP2"
    },
    "6251": {
      "op": "ADD"
    },
    "6252": {
      "op": "DUP3"
    },
    "6253": {
      "op": "SWAP1"
    },
    "6254": {
      "op": "MSTORE"
    },
    "6255": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6257": {
      "op": "ADD"
    },
    "6258": {
      "fn": "Slave._sendMessage",
      "offset": [
        10074,
        10134
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7C4"
    },
    "6261": {
      "op": "JUMP"
    },
    "6262": {
      "fn": "Slave._sendMessage",
      "offset": [
        10006,
        10134
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6263": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10263
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 41,
      "value": "0x1"
    },
    "6265": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10263
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6266": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10263
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6268": {
      "fn": "Slave._sendMessage",
      "offset": [
        10280,
        10288
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6269": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6271": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6272": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "6277": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6279": {
      "op": "SHL"
    },
    "6280": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6281": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6288": {
      "op": "SHL"
    },
    "6289": {
      "op": "SUB"
    },
    "6290": {
      "fn": "Slave._sendMessage",
      "offset": [
        10280,
        10288
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6291": {
      "fn": "Slave._sendMessage",
      "offset": [
        10280,
        10288
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6292": {
      "fn": "Slave._sendMessage",
      "offset": [
        10280,
        10288
      ],
      "op": "AND",
      "path": "11"
    },
    "6293": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6295": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6296": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "ADD",
      "path": "11"
    },
    "6297": {
      "op": "MSTORE"
    },
    "6298": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6300": {
      "op": "DUP2"
    },
    "6301": {
      "op": "ADD"
    },
    "6302": {
      "op": "DUP5"
    },
    "6303": {
      "op": "SWAP1"
    },
    "6304": {
      "op": "MSTORE"
    },
    "6305": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10263
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6306": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10263
      ],
      "op": "AND",
      "path": "11"
    },
    "6307": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10263
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6308": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10271
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95EA7B3"
    },
    "6313": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10271
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6314": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6316": {
      "op": "ADD"
    },
    "6317": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6319": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6321": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6322": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6323": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6324": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "SUB",
      "path": "11"
    },
    "6325": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6326": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6328": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "DUP8",
      "path": "11"
    },
    "6329": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "GAS",
      "path": "11"
    },
    "6330": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "CALL",
      "path": "11"
    },
    "6331": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6332": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6333": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6334": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x18CB"
    },
    "6337": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6338": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6339": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6341": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6342": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "6343": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6344": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6346": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "REVERT",
      "path": "11"
    },
    "6347": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6348": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "POP",
      "path": "11"
    },
    "6349": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "POP",
      "path": "11"
    },
    "6350": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "POP",
      "path": "11"
    },
    "6351": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "POP",
      "path": "11"
    },
    "6352": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6354": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6355": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6356": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6358": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "NOT",
      "path": "11"
    },
    "6359": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6361": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6362": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "ADD",
      "path": "11"
    },
    "6363": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "AND",
      "path": "11"
    },
    "6364": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6365": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "ADD",
      "path": "11"
    },
    "6366": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6367": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6369": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6370": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "POP",
      "path": "11"
    },
    "6371": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6372": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "ADD",
      "path": "11"
    },
    "6373": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6374": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x18EF"
    },
    "6377": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6378": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6379": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2285"
    },
    "6382": {
      "fn": "Slave._sendMessage",
      "jump": "i",
      "offset": [
        10252,
        10296
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6383": {
      "fn": "Slave._sendMessage",
      "offset": [
        10252,
        10296
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6384": {
      "op": "POP"
    },
    "6385": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10408
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 42,
      "value": "0x0"
    },
    "6387": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10408
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6388": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6390": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6391": {
      "op": "PUSH4",
      "value": "0x96F4E9F9"
    },
    "6396": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6398": {
      "op": "SHL"
    },
    "6399": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6400": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6407": {
      "op": "SHL"
    },
    "6408": {
      "op": "SUB"
    },
    "6409": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10408
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6410": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10408
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6411": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10408
      ],
      "op": "AND",
      "path": "11"
    },
    "6412": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10408
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6413": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10417
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x96F4E9F9"
    },
    "6418": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10417
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6419": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1922"
    },
    "6422": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6423": {
      "fn": "Slave._sendMessage",
      "offset": [
        10418,
        10442
      ],
      "op": "DUP10",
      "path": "11"
    },
    "6424": {
      "fn": "Slave._sendMessage",
      "offset": [
        10418,
        10442
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6425": {
      "fn": "Slave._sendMessage",
      "offset": [
        10444,
        10458
      ],
      "op": "DUP7",
      "path": "11"
    },
    "6426": {
      "fn": "Slave._sendMessage",
      "offset": [
        10444,
        10458
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6427": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6429": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "ADD",
      "path": "11"
    },
    "6430": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x25E3"
    },
    "6433": {
      "fn": "Slave._sendMessage",
      "jump": "i",
      "offset": [
        10400,
        10459
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6434": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6435": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6437": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6439": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6440": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6441": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6442": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "SUB",
      "path": "11"
    },
    "6443": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6444": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6446": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "DUP8",
      "path": "11"
    },
    "6447": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "GAS",
      "path": "11"
    },
    "6448": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "CALL",
      "path": "11"
    },
    "6449": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6450": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6451": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6452": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1941"
    },
    "6455": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6456": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6457": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6459": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6460": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "6461": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6462": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6464": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "REVERT",
      "path": "11"
    },
    "6465": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6466": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "POP",
      "path": "11"
    },
    "6467": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "POP",
      "path": "11"
    },
    "6468": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "POP",
      "path": "11"
    },
    "6469": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "POP",
      "path": "11"
    },
    "6470": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6472": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6473": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6474": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6476": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "NOT",
      "path": "11"
    },
    "6477": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6479": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6480": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "ADD",
      "path": "11"
    },
    "6481": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "AND",
      "path": "11"
    },
    "6482": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6483": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "ADD",
      "path": "11"
    },
    "6484": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6485": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6487": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6488": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "POP",
      "path": "11"
    },
    "6489": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6490": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "ADD",
      "path": "11"
    },
    "6491": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6492": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1965"
    },
    "6495": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6496": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6497": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x226C"
    },
    "6500": {
      "fn": "Slave._sendMessage",
      "jump": "i",
      "offset": [
        10400,
        10459
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6501": {
      "fn": "Slave._sendMessage",
      "offset": [
        10400,
        10459
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6502": {
      "fn": "Slave._sendMessage",
      "offset": [
        10637,
        10648
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 43,
      "value": "0x1"
    },
    "6504": {
      "fn": "Slave._sendMessage",
      "offset": [
        10637,
        10648
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6505": {
      "fn": "Slave._sendMessage",
      "offset": [
        10521,
        10677
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6507": {
      "fn": "Slave._sendMessage",
      "offset": [
        10521,
        10677
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6508": {
      "fn": "Slave._sendMessage",
      "offset": [
        10521,
        10677
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6513": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6515": {
      "op": "SHL"
    },
    "6516": {
      "op": "SUB"
    },
    "6517": {
      "op": "DUP1"
    },
    "6518": {
      "op": "DUP11"
    },
    "6519": {
      "op": "AND"
    },
    "6520": {
      "op": "DUP3"
    },
    "6521": {
      "op": "MSTORE"
    },
    "6522": {
      "fn": "Slave._sendMessage",
      "offset": [
        10637,
        10648
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6523": {
      "fn": "Slave._sendMessage",
      "offset": [
        10637,
        10648
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "6524": {
      "fn": "Slave._sendMessage",
      "offset": [
        10637,
        10648
      ],
      "op": "AND",
      "path": "11"
    },
    "6525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6527": {
      "op": "DUP4"
    },
    "6528": {
      "op": "ADD"
    },
    "6529": {
      "op": "MSTORE"
    },
    "6530": {
      "op": "DUP2"
    },
    "6531": {
      "op": "ADD"
    },
    "6532": {
      "op": "DUP4"
    },
    "6533": {
      "op": "SWAP1"
    },
    "6534": {
      "op": "MSTORE"
    },
    "6535": {
      "fn": "Slave._sendMessage",
      "offset": [
        10388,
        10459
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6536": {
      "fn": "Slave._sendMessage",
      "offset": [
        10388,
        10459
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "6537": {
      "op": "POP"
    },
    "6538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6542": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6544": {
      "op": "SHL"
    },
    "6545": {
      "op": "SUB"
    },
    "6546": {
      "fn": "Slave._sendMessage",
      "offset": [
        10521,
        10677
      ],
      "op": "DUP8",
      "path": "11"
    },
    "6547": {
      "fn": "Slave._sendMessage",
      "offset": [
        10521,
        10677
      ],
      "op": "AND",
      "path": "11"
    },
    "6548": {
      "fn": "Slave._sendMessage",
      "offset": [
        10521,
        10677
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6549": {
      "fn": "Slave._sendMessage",
      "offset": [
        10388,
        10459
      ],
      "op": "DUP5",
      "path": "11"
    },
    "6550": {
      "fn": "Slave._sendMessage",
      "offset": [
        10388,
        10459
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6551": {
      "fn": "Slave._sendMessage",
      "offset": [
        10521,
        10677
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x9FB548811CFE022BA6400D8533A80D63FBC228E596F93603959DC47B1886AF54"
    },
    "6584": {
      "fn": "Slave._sendMessage",
      "offset": [
        10521,
        10677
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6585": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6587": {
      "op": "ADD"
    },
    "6588": {
      "fn": "Slave._sendMessage",
      "offset": [
        10521,
        10677
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6590": {
      "fn": "Slave._sendMessage",
      "offset": [
        10521,
        10677
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6591": {
      "fn": "Slave._sendMessage",
      "offset": [
        10521,
        10677
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6592": {
      "fn": "Slave._sendMessage",
      "offset": [
        10521,
        10677
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6593": {
      "fn": "Slave._sendMessage",
      "offset": [
        10521,
        10677
      ],
      "op": "SUB",
      "path": "11"
    },
    "6594": {
      "fn": "Slave._sendMessage",
      "offset": [
        10521,
        10677
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6595": {
      "fn": "Slave._sendMessage",
      "offset": [
        10521,
        10677
      ],
      "op": "LOG3",
      "path": "11"
    },
    "6596": {
      "fn": "Slave._sendMessage",
      "offset": [
        10721,
        10737
      ],
      "op": "POP",
      "path": "11",
      "statement": 44
    },
    "6597": {
      "fn": "Slave._sendMessage",
      "offset": [
        10721,
        10737
      ],
      "op": "POP",
      "path": "11"
    },
    "6598": {
      "fn": "Slave._sendMessage",
      "offset": [
        8903,
        10744
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "6599": {
      "fn": "Slave._sendMessage",
      "offset": [
        8903,
        10744
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "6600": {
      "fn": "Slave._sendMessage",
      "offset": [
        8903,
        10744
      ],
      "op": "POP",
      "path": "11"
    },
    "6601": {
      "fn": "Slave._sendMessage",
      "offset": [
        8903,
        10744
      ],
      "op": "POP",
      "path": "11"
    },
    "6602": {
      "fn": "Slave._sendMessage",
      "offset": [
        8903,
        10744
      ],
      "op": "POP",
      "path": "11"
    },
    "6603": {
      "fn": "Slave._sendMessage",
      "jump": "o",
      "offset": [
        8903,
        10744
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6604": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13632,
        13928
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6605": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13719,
        13728
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "6607": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13719,
        13728
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6608": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6610": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6611": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6616": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6618": {
      "op": "SHL"
    },
    "6619": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6620": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6621": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13748,
        13752
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "6622": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6624": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6625": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "ADD",
      "path": "11"
    },
    "6626": {
      "op": "MSTORE"
    },
    "6627": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13687,
        13709
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6629": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13687,
        13709
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6636": {
      "op": "SHL"
    },
    "6637": {
      "op": "SUB"
    },
    "6638": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13719,
        13728
      ],
      "op": "AND",
      "path": "11"
    },
    "6639": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13719,
        13728
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6640": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13739
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "6645": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13739
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6646": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6648": {
      "op": "ADD"
    },
    "6649": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6651": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6653": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6654": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6655": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6656": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "SUB",
      "path": "11"
    },
    "6657": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6658": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "DUP7",
      "path": "11"
    },
    "6659": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "GAS",
      "path": "11"
    },
    "6660": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "6661": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6662": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6663": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6664": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A15"
    },
    "6667": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6668": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6669": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6671": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6672": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "6673": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6674": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6676": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "REVERT",
      "path": "11"
    },
    "6677": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6678": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "POP",
      "path": "11"
    },
    "6679": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "POP",
      "path": "11"
    },
    "6680": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "POP",
      "path": "11"
    },
    "6681": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "POP",
      "path": "11"
    },
    "6682": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6684": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6685": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6686": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6688": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "NOT",
      "path": "11"
    },
    "6689": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6691": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6692": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "ADD",
      "path": "11"
    },
    "6693": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "AND",
      "path": "11"
    },
    "6694": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6695": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "ADD",
      "path": "11"
    },
    "6696": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6697": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6699": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6700": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "POP",
      "path": "11"
    },
    "6701": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6702": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "ADD",
      "path": "11"
    },
    "6703": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6704": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A39"
    },
    "6707": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6708": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6709": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x226C"
    },
    "6712": {
      "fn": "Slave._assetsAllocationDeposit",
      "jump": "i",
      "offset": [
        13712,
        13754
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6713": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13712,
        13754
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6714": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13687,
        13754
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6715": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13687,
        13754
      ],
      "op": "POP",
      "path": "11"
    },
    "6716": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13764,
        13776
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6718": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13779,
        13789
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A45"
    },
    "6721": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13779,
        13787
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x155F"
    },
    "6724": {
      "fn": "Slave._assetsAllocationDeposit",
      "jump": "i",
      "offset": [
        13779,
        13789
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6725": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13779,
        13789
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6726": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13807,
        13816
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 45,
      "value": "0x2"
    },
    "6728": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13807,
        13816
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6729": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6731": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6732": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "6737": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6739": {
      "op": "SHL"
    },
    "6740": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6741": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6748": {
      "op": "SHL"
    },
    "6749": {
      "op": "SUB"
    },
    "6750": {
      "op": "DUP1"
    },
    "6751": {
      "op": "DUP5"
    },
    "6752": {
      "op": "AND"
    },
    "6753": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6755": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6756": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "ADD",
      "path": "11"
    },
    "6757": {
      "op": "MSTORE"
    },
    "6758": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6760": {
      "op": "DUP3"
    },
    "6761": {
      "op": "ADD"
    },
    "6762": {
      "op": "DUP7"
    },
    "6763": {
      "op": "SWAP1"
    },
    "6764": {
      "op": "MSTORE"
    },
    "6765": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13764,
        13789
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "6766": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13764,
        13789
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "6767": {
      "op": "POP"
    },
    "6768": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13807,
        13816
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6769": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13807,
        13816
      ],
      "op": "AND",
      "path": "11"
    },
    "6770": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13807,
        13816
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6771": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13825
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95EA7B3"
    },
    "6776": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13825
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6777": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6779": {
      "op": "ADD"
    },
    "6780": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6782": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6784": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6785": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6786": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6787": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "SUB",
      "path": "11"
    },
    "6788": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6789": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6791": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "DUP8",
      "path": "11"
    },
    "6792": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "GAS",
      "path": "11"
    },
    "6793": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "CALL",
      "path": "11"
    },
    "6794": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6795": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6796": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6797": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A9A"
    },
    "6800": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6801": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6802": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6804": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6805": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "6806": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6807": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6809": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "REVERT",
      "path": "11"
    },
    "6810": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6811": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "POP",
      "path": "11"
    },
    "6812": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "POP",
      "path": "11"
    },
    "6813": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "POP",
      "path": "11"
    },
    "6814": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "POP",
      "path": "11"
    },
    "6815": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6817": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6818": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6819": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6821": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "NOT",
      "path": "11"
    },
    "6822": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6824": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6825": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "ADD",
      "path": "11"
    },
    "6826": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "AND",
      "path": "11"
    },
    "6827": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6828": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "ADD",
      "path": "11"
    },
    "6829": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6830": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6832": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6833": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "POP",
      "path": "11"
    },
    "6834": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6835": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "ADD",
      "path": "11"
    },
    "6836": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6837": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1ABE"
    },
    "6840": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6841": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6842": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2285"
    },
    "6845": {
      "fn": "Slave._assetsAllocationDeposit",
      "jump": "i",
      "offset": [
        13800,
        13847
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6846": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13800,
        13847
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6847": {
      "op": "POP"
    },
    "6848": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13877,
        13886
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 46,
      "value": "0x2"
    },
    "6850": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13877,
        13886
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6851": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6853": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6854": {
      "op": "PUSH4",
      "value": "0xE8EDA9DF"
    },
    "6859": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6861": {
      "op": "SHL"
    },
    "6862": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6863": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6870": {
      "op": "SHL"
    },
    "6871": {
      "op": "SUB"
    },
    "6872": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13877,
        13886
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6873": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13877,
        13886
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6874": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13877,
        13886
      ],
      "op": "AND",
      "path": "11"
    },
    "6875": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6877": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6878": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "ADD",
      "path": "11"
    },
    "6879": {
      "op": "MSTORE"
    },
    "6880": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6882": {
      "op": "DUP2"
    },
    "6883": {
      "op": "ADD"
    },
    "6884": {
      "op": "DUP5"
    },
    "6885": {
      "op": "SWAP1"
    },
    "6886": {
      "op": "MSTORE"
    },
    "6887": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13912,
        13916
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "6888": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6890": {
      "op": "DUP3"
    },
    "6891": {
      "op": "ADD"
    },
    "6892": {
      "op": "MSTORE"
    },
    "6893": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13877,
        13886
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6895": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6897": {
      "op": "DUP3"
    },
    "6898": {
      "op": "ADD"
    },
    "6899": {
      "op": "MSTORE"
    },
    "6900": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13876
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6901": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13876
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6902": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13876
      ],
      "op": "AND",
      "path": "11"
    },
    "6903": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13876
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6904": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13876
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE8EDA9DF"
    },
    "6909": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13876
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6910": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6912": {
      "op": "ADD"
    },
    "6913": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6915": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6917": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6918": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6919": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6920": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "SUB",
      "path": "11"
    },
    "6921": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6922": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6924": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "DUP8",
      "path": "11"
    },
    "6925": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6926": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "6927": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6928": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6929": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6930": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B1A"
    },
    "6933": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6934": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6936": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6937": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "REVERT",
      "path": "11"
    },
    "6938": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6939": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "POP",
      "path": "11"
    },
    "6940": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "GAS",
      "path": "11"
    },
    "6941": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "CALL",
      "path": "11"
    },
    "6942": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6943": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6944": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6945": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE9C"
    },
    "6948": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6949": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6950": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6952": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6953": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "6954": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6955": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6957": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13857,
        13921
      ],
      "op": "REVERT",
      "path": "11"
    },
    "6958": {
      "fn": "Slave._ccipReceive",
      "offset": [
        7964,
        8897
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6959": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8344,
        8357
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6961": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8360,
        8398
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B39"
    },
    "6964": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8383,
        8397
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6965": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8360,
        8382
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D8B"
    },
    "6968": {
      "fn": "Slave._ccipReceive",
      "jump": "i",
      "offset": [
        8360,
        8398
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6969": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8360,
        8398
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6970": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8344,
        8398
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6971": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8344,
        8398
      ],
      "op": "POP",
      "path": "11"
    },
    "6972": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8413,
        8420
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6973": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8413,
        8425
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "6975": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8413,
        8425
      ],
      "op": "AND",
      "path": "11"
    },
    "6976": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8424,
        8425
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6978": {
      "branch": 60,
      "fn": "Slave._ccipReceive",
      "offset": [
        8413,
        8425
      ],
      "op": "SUB",
      "path": "11"
    },
    "6979": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8409,
        8706
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B53"
    },
    "6982": {
      "branch": 60,
      "fn": "Slave._ccipReceive",
      "offset": [
        8409,
        8706
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6983": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8441,
        8467
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 47,
      "value": "0x1B4F"
    },
    "6986": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8452,
        8466
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6987": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8441,
        8451
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1052"
    },
    "6990": {
      "fn": "Slave._ccipReceive",
      "jump": "i",
      "offset": [
        8441,
        8467
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6991": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8441,
        8467
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6992": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8063,
        8897
      ],
      "op": "POP",
      "path": "11"
    },
    "6993": {
      "fn": "Slave._ccipReceive",
      "offset": [
        7964,
        8897
      ],
      "op": "POP",
      "path": "11"
    },
    "6994": {
      "fn": "Slave._ccipReceive",
      "jump": "o",
      "offset": [
        7964,
        8897
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6995": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8409,
        8706
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6996": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8488,
        8495
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6997": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8488,
        8500
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "6999": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8488,
        8500
      ],
      "op": "AND",
      "path": "11"
    },
    "7000": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8499,
        8500
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "7002": {
      "branch": 61,
      "fn": "Slave._ccipReceive",
      "offset": [
        8488,
        8500
      ],
      "op": "SUB",
      "path": "11"
    },
    "7003": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8484,
        8706
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B67"
    },
    "7006": {
      "branch": 61,
      "fn": "Slave._ccipReceive",
      "offset": [
        8484,
        8706
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7007": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8516,
        8540
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 48,
      "value": "0x1B4F"
    },
    "7010": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8525,
        8539
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7011": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8516,
        8524
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x12A6"
    },
    "7014": {
      "fn": "Slave._ccipReceive",
      "jump": "i",
      "offset": [
        8516,
        8540
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7015": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8484,
        8706
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7016": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8561,
        8568
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7017": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8561,
        8573
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "7019": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8561,
        8573
      ],
      "op": "AND",
      "path": "11"
    },
    "7020": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8572,
        8573
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "7022": {
      "branch": 62,
      "fn": "Slave._ccipReceive",
      "offset": [
        8561,
        8573
      ],
      "op": "SUB",
      "path": "11"
    },
    "7023": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8557,
        8706
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B7B"
    },
    "7026": {
      "branch": 62,
      "fn": "Slave._ccipReceive",
      "offset": [
        8557,
        8706
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7027": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8589,
        8627
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 49,
      "value": "0x1B4F"
    },
    "7030": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8612,
        8626
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7031": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8589,
        8611
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEA4"
    },
    "7034": {
      "fn": "Slave._ccipReceive",
      "jump": "i",
      "offset": [
        8589,
        8627
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7035": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8557,
        8706
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7036": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8658,
        8695
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 50,
      "value": "0x40"
    },
    "7038": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8658,
        8695
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7039": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7043": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7045": {
      "op": "SHL"
    },
    "7046": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8658,
        8695
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7047": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8658,
        8695
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7050": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8658,
        8695
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "7052": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8658,
        8695
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7053": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8658,
        8695
      ],
      "op": "ADD",
      "path": "11"
    },
    "7054": {
      "op": "MSTORE"
    },
    "7055": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "7057": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7059": {
      "op": "DUP3"
    },
    "7060": {
      "op": "ADD"
    },
    "7061": {
      "op": "MSTORE"
    },
    "7062": {
      "op": "PUSH32",
      "value": "0x696E76616C696420636F6D6D616E642066726F6D204D61737465720000000000"
    },
    "7095": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7097": {
      "op": "DUP3"
    },
    "7098": {
      "op": "ADD"
    },
    "7099": {
      "op": "MSTORE"
    },
    "7100": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7102": {
      "op": "ADD"
    },
    "7103": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8658,
        8695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7C4"
    },
    "7106": {
      "op": "JUMP"
    },
    "7107": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        13934,
        14263
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7108": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14042,
        14052
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "7110": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14042,
        14052
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7111": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7113": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7114": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "7119": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7121": {
      "op": "SHL"
    },
    "7122": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7123": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7124": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14072,
        14076
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "7125": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "7127": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7128": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "ADD",
      "path": "11"
    },
    "7129": {
      "op": "MSTORE"
    },
    "7130": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        13989,
        13996
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7132": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        13989,
        13996
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7133": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        13989,
        13996
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7134": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        13989,
        13996
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7141": {
      "op": "SHL"
    },
    "7142": {
      "op": "SUB"
    },
    "7143": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14042,
        14052
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7144": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14042,
        14052
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7145": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14042,
        14052
      ],
      "op": "AND",
      "path": "11"
    },
    "7146": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14042,
        14052
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7147": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14063
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "7152": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14063
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7153": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7155": {
      "op": "ADD"
    },
    "7156": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "7158": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7160": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7161": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7162": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7163": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "SUB",
      "path": "11"
    },
    "7164": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7165": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "DUP7",
      "path": "11"
    },
    "7166": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "GAS",
      "path": "11"
    },
    "7167": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "7168": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7169": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7170": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7171": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C10"
    },
    "7174": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7175": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7176": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7178": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7179": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "7180": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7181": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7183": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "REVERT",
      "path": "11"
    },
    "7184": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7185": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "POP",
      "path": "11"
    },
    "7186": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "POP",
      "path": "11"
    },
    "7187": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "POP",
      "path": "11"
    },
    "7188": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "POP",
      "path": "11"
    },
    "7189": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7191": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7192": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7193": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "7195": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "NOT",
      "path": "11"
    },
    "7196": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "7198": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7199": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "ADD",
      "path": "11"
    },
    "7200": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "AND",
      "path": "11"
    },
    "7201": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7202": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "ADD",
      "path": "11"
    },
    "7203": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7204": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7206": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7207": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "POP",
      "path": "11"
    },
    "7208": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7209": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "ADD",
      "path": "11"
    },
    "7210": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7211": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C34"
    },
    "7214": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7215": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7216": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x226C"
    },
    "7219": {
      "fn": "Slave._assetsAllocationWithdraw",
      "jump": "i",
      "offset": [
        14035,
        14078
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7220": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14035,
        14078
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7221": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14008,
        14078
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7222": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14008,
        14078
      ],
      "op": "POP",
      "path": "11"
    },
    "7223": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14088,
        14100
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7225": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14103,
        14113
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C40"
    },
    "7228": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14103,
        14111
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x155F"
    },
    "7231": {
      "fn": "Slave._assetsAllocationWithdraw",
      "jump": "i",
      "offset": [
        14103,
        14113
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7232": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14103,
        14113
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7233": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14131,
        14141
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 51,
      "value": "0x3"
    },
    "7235": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14131,
        14141
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7236": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7238": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7239": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "7244": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7246": {
      "op": "SHL"
    },
    "7247": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7248": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7255": {
      "op": "SHL"
    },
    "7256": {
      "op": "SUB"
    },
    "7257": {
      "op": "DUP1"
    },
    "7258": {
      "op": "DUP5"
    },
    "7259": {
      "op": "AND"
    },
    "7260": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "7262": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7263": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "ADD",
      "path": "11"
    },
    "7264": {
      "op": "MSTORE"
    },
    "7265": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7267": {
      "op": "DUP3"
    },
    "7268": {
      "op": "ADD"
    },
    "7269": {
      "op": "DUP7"
    },
    "7270": {
      "op": "SWAP1"
    },
    "7271": {
      "op": "MSTORE"
    },
    "7272": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14088,
        14113
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "7273": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14088,
        14113
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "7274": {
      "op": "POP"
    },
    "7275": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14131,
        14141
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7276": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14131,
        14141
      ],
      "op": "AND",
      "path": "11"
    },
    "7277": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14131,
        14141
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7278": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14150
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95EA7B3"
    },
    "7283": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14150
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7284": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7286": {
      "op": "ADD"
    },
    "7287": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "7289": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7291": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7292": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7293": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7294": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "SUB",
      "path": "11"
    },
    "7295": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7296": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7298": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "DUP8",
      "path": "11"
    },
    "7299": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "GAS",
      "path": "11"
    },
    "7300": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "CALL",
      "path": "11"
    },
    "7301": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7302": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7303": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7304": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C95"
    },
    "7307": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7308": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7309": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7311": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7312": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "7313": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7314": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7316": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "REVERT",
      "path": "11"
    },
    "7317": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7318": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "POP",
      "path": "11"
    },
    "7319": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "POP",
      "path": "11"
    },
    "7320": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "POP",
      "path": "11"
    },
    "7321": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "POP",
      "path": "11"
    },
    "7322": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7324": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7325": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7326": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "7328": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "NOT",
      "path": "11"
    },
    "7329": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "7331": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7332": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "ADD",
      "path": "11"
    },
    "7333": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "AND",
      "path": "11"
    },
    "7334": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7335": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "ADD",
      "path": "11"
    },
    "7336": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7337": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7339": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7340": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "POP",
      "path": "11"
    },
    "7341": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7342": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "ADD",
      "path": "11"
    },
    "7343": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7344": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1CB9"
    },
    "7347": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7348": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7349": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2285"
    },
    "7352": {
      "fn": "Slave._assetsAllocationWithdraw",
      "jump": "i",
      "offset": [
        14124,
        14174
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7353": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14124,
        14174
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7354": {
      "op": "POP"
    },
    "7355": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14213,
        14222
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 52,
      "value": "0x2"
    },
    "7357": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14213,
        14222
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7358": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7360": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7361": {
      "op": "PUSH4",
      "value": "0x1A4CA37B"
    },
    "7366": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "7368": {
      "op": "SHL"
    },
    "7369": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7370": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7377": {
      "op": "SHL"
    },
    "7378": {
      "op": "SUB"
    },
    "7379": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14213,
        14222
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7380": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14213,
        14222
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7381": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14213,
        14222
      ],
      "op": "AND",
      "path": "11"
    },
    "7382": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "7384": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7385": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "ADD",
      "path": "11"
    },
    "7386": {
      "op": "MSTORE"
    },
    "7387": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7389": {
      "op": "DUP2"
    },
    "7390": {
      "op": "ADD"
    },
    "7391": {
      "op": "DUP5"
    },
    "7392": {
      "op": "SWAP1"
    },
    "7393": {
      "op": "MSTORE"
    },
    "7394": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14250,
        14254
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "7395": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7397": {
      "op": "DUP3"
    },
    "7398": {
      "op": "ADD"
    },
    "7399": {
      "op": "MSTORE"
    },
    "7400": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14212
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7401": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14212
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7402": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14212
      ],
      "op": "AND",
      "path": "11"
    },
    "7403": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14212
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7404": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14212
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x69328DEC"
    },
    "7409": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14212
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7410": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7412": {
      "op": "ADD"
    },
    "7413": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "7415": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7417": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7418": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7419": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7420": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "SUB",
      "path": "11"
    },
    "7421": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7422": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7424": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "DUP8",
      "path": "11"
    },
    "7425": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "GAS",
      "path": "11"
    },
    "7426": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "CALL",
      "path": "11"
    },
    "7427": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7428": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7429": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7430": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D13"
    },
    "7433": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7434": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7435": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7437": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7438": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "7439": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7440": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7442": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "REVERT",
      "path": "11"
    },
    "7443": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7444": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "POP",
      "path": "11"
    },
    "7445": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "POP",
      "path": "11"
    },
    "7446": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "POP",
      "path": "11"
    },
    "7447": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "POP",
      "path": "11"
    },
    "7448": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7450": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7451": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7452": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "7454": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "NOT",
      "path": "11"
    },
    "7455": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "7457": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7458": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "ADD",
      "path": "11"
    },
    "7459": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "AND",
      "path": "11"
    },
    "7460": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7461": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "ADD",
      "path": "11"
    },
    "7462": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7463": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7465": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7466": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "POP",
      "path": "11"
    },
    "7467": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7468": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "ADD",
      "path": "11"
    },
    "7469": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7470": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D37"
    },
    "7473": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7474": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7475": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x226C"
    },
    "7478": {
      "fn": "Slave._assetsAllocationWithdraw",
      "jump": "i",
      "offset": [
        14192,
        14256
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7479": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14192,
        14256
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7480": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14185,
        14256
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "7481": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14185,
        14256
      ],
      "op": "POP",
      "path": "11"
    },
    "7482": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14185,
        14256
      ],
      "op": "POP",
      "path": "11"
    },
    "7483": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14185,
        14256
      ],
      "op": "POP",
      "path": "11"
    },
    "7484": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        13934,
        14263
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7485": {
      "fn": "Slave._assetsAllocationWithdraw",
      "jump": "o",
      "offset": [
        13934,
        14263
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7486": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6114,
        6460
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7487": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6325,
        6349
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "7489": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6325,
        6349
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7490": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6363,
        6380
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xB"
    },
    "7492": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6363,
        6380
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7493": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6280,
        6390
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7495": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6280,
        6390
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7496": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6280,
        6390
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7497": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6249,
        6250
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "7499": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6280,
        6390
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "7501": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6280,
        6390
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7502": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6280,
        6390
      ],
      "op": "ADD",
      "path": "11"
    },
    "7503": {
      "op": "DUP2"
    },
    "7504": {
      "op": "SWAP1"
    },
    "7505": {
      "op": "MSTORE"
    },
    "7506": {
      "op": "SWAP2"
    },
    "7507": {
      "op": "DUP2"
    },
    "7508": {
      "op": "ADD"
    },
    "7509": {
      "op": "SWAP4"
    },
    "7510": {
      "op": "SWAP1"
    },
    "7511": {
      "op": "SWAP4"
    },
    "7512": {
      "op": "MSTORE"
    },
    "7513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7517": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7519": {
      "op": "SHL"
    },
    "7520": {
      "op": "SUB"
    },
    "7521": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6363,
        6380
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7522": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6363,
        6380
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7523": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6363,
        6380
      ],
      "op": "AND",
      "path": "11"
    },
    "7524": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7526": {
      "op": "DUP4"
    },
    "7527": {
      "op": "ADD"
    },
    "7528": {
      "op": "MSTORE"
    },
    "7529": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6249,
        6250
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7530": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6233,
        6246
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7532": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6233,
        6246
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7533": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7535": {
      "op": "ADD"
    },
    "7536": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6280,
        6390
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7538": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6280,
        6390
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7539": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6280,
        6390
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "7541": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6280,
        6390
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7542": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6280,
        6390
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7543": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6280,
        6390
      ],
      "op": "SUB",
      "path": "11"
    },
    "7544": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6280,
        6390
      ],
      "op": "SUB",
      "path": "11"
    },
    "7545": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6280,
        6390
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7546": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6280,
        6390
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7547": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6280,
        6390
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7548": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6280,
        6390
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7550": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6280,
        6390
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7551": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6260,
        6390
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7552": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6260,
        6390
      ],
      "op": "POP",
      "path": "11"
    },
    "7553": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6401,
        6453
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 53,
      "value": "0x104B"
    },
    "7556": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6414,
        6425
      ],
      "op": "DUP5",
      "path": "11"
    },
    "7557": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6427,
        6446
      ],
      "op": "DUP5",
      "path": "11"
    },
    "7558": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6448,
        6452
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7559": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6401,
        6413
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15E4"
    },
    "7562": {
      "fn": "Slave._sendSupplyAndNonce",
      "jump": "i",
      "offset": [
        6401,
        6453
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7563": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        4855,
        5071
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7564": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        4965,
        4970
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7566": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        4982,
        4995
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7567": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5009,
        5024
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7568": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5009,
        5029
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "7570": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5009,
        5029
      ],
      "op": "ADD",
      "path": "11"
    },
    "7571": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5009,
        5029
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7572": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        4998,
        5039
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7573": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        4998,
        5039
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "7575": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        4998,
        5039
      ],
      "op": "ADD",
      "path": "11"
    },
    "7576": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        4998,
        5039
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7577": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        4998,
        5039
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7578": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        4998,
        5039
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7579": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        4998,
        5039
      ],
      "op": "ADD",
      "path": "11"
    },
    "7580": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        4998,
        5039
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7581": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        4998,
        5039
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1DA6"
    },
    "7584": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        4998,
        5039
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7585": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        4998,
        5039
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7586": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        4998,
        5039
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x26BC"
    },
    "7589": {
      "fn": "Slave._internalCommandRouter",
      "jump": "i",
      "offset": [
        4998,
        5039
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7590": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        4998,
        5039
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7591": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        4982,
        5039
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "7592": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        4855,
        5071
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "7593": {
      "op": "POP"
    },
    "7594": {
      "op": "POP"
    },
    "7595": {
      "op": "POP"
    },
    "7596": {
      "fn": "Slave._internalCommandRouter",
      "jump": "o",
      "offset": [
        4855,
        5071
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7597": {
      "op": "JUMPDEST"
    },
    "7598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7600": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7602": {
      "op": "DUP3"
    },
    "7603": {
      "op": "DUP5"
    },
    "7604": {
      "op": "SUB"
    },
    "7605": {
      "op": "SLT"
    },
    "7606": {
      "op": "ISZERO"
    },
    "7607": {
      "op": "PUSH2",
      "value": "0x1DBF"
    },
    "7610": {
      "op": "JUMPI"
    },
    "7611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7613": {
      "op": "DUP1"
    },
    "7614": {
      "op": "REVERT"
    },
    "7615": {
      "op": "JUMPDEST"
    },
    "7616": {
      "op": "DUP2"
    },
    "7617": {
      "op": "CALLDATALOAD"
    },
    "7618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7622": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7624": {
      "op": "SHL"
    },
    "7625": {
      "op": "SUB"
    },
    "7626": {
      "op": "NOT"
    },
    "7627": {
      "op": "DUP2"
    },
    "7628": {
      "op": "AND"
    },
    "7629": {
      "op": "DUP2"
    },
    "7630": {
      "op": "EQ"
    },
    "7631": {
      "op": "PUSH2",
      "value": "0x1DA6"
    },
    "7634": {
      "op": "JUMPI"
    },
    "7635": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7637": {
      "op": "DUP1"
    },
    "7638": {
      "op": "REVERT"
    },
    "7639": {
      "op": "JUMPDEST"
    },
    "7640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7644": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7646": {
      "op": "SHL"
    },
    "7647": {
      "op": "SUB"
    },
    "7648": {
      "op": "DUP2"
    },
    "7649": {
      "op": "AND"
    },
    "7650": {
      "op": "DUP2"
    },
    "7651": {
      "op": "EQ"
    },
    "7652": {
      "op": "PUSH2",
      "value": "0x9E3"
    },
    "7655": {
      "op": "JUMPI"
    },
    "7656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7658": {
      "op": "DUP1"
    },
    "7659": {
      "op": "REVERT"
    },
    "7660": {
      "op": "JUMPDEST"
    },
    "7661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7665": {
      "op": "DUP3"
    },
    "7666": {
      "op": "DUP5"
    },
    "7667": {
      "op": "SUB"
    },
    "7668": {
      "op": "SLT"
    },
    "7669": {
      "op": "ISZERO"
    },
    "7670": {
      "op": "PUSH2",
      "value": "0x1DFE"
    },
    "7673": {
      "op": "JUMPI"
    },
    "7674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7676": {
      "op": "DUP1"
    },
    "7677": {
      "op": "REVERT"
    },
    "7678": {
      "op": "JUMPDEST"
    },
    "7679": {
      "op": "DUP2"
    },
    "7680": {
      "op": "CALLDATALOAD"
    },
    "7681": {
      "op": "PUSH2",
      "value": "0x1DA6"
    },
    "7684": {
      "op": "DUP2"
    },
    "7685": {
      "op": "PUSH2",
      "value": "0x1DD7"
    },
    "7688": {
      "jump": "i",
      "op": "JUMP"
    },
    "7689": {
      "op": "JUMPDEST"
    },
    "7690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7696": {
      "op": "SHL"
    },
    "7697": {
      "op": "SUB"
    },
    "7698": {
      "op": "DUP2"
    },
    "7699": {
      "op": "AND"
    },
    "7700": {
      "op": "DUP2"
    },
    "7701": {
      "op": "EQ"
    },
    "7702": {
      "op": "PUSH2",
      "value": "0x9E3"
    },
    "7705": {
      "op": "JUMPI"
    },
    "7706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7708": {
      "op": "DUP1"
    },
    "7709": {
      "op": "REVERT"
    },
    "7710": {
      "op": "JUMPDEST"
    },
    "7711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7713": {
      "op": "DUP1"
    },
    "7714": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7716": {
      "op": "DUP4"
    },
    "7717": {
      "op": "DUP6"
    },
    "7718": {
      "op": "SUB"
    },
    "7719": {
      "op": "SLT"
    },
    "7720": {
      "op": "ISZERO"
    },
    "7721": {
      "op": "PUSH2",
      "value": "0x1E31"
    },
    "7724": {
      "op": "JUMPI"
    },
    "7725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7727": {
      "op": "DUP1"
    },
    "7728": {
      "op": "REVERT"
    },
    "7729": {
      "op": "JUMPDEST"
    },
    "7730": {
      "op": "DUP3"
    },
    "7731": {
      "op": "CALLDATALOAD"
    },
    "7732": {
      "op": "PUSH2",
      "value": "0x1E3C"
    },
    "7735": {
      "op": "DUP2"
    },
    "7736": {
      "op": "PUSH2",
      "value": "0x1E09"
    },
    "7739": {
      "jump": "i",
      "op": "JUMP"
    },
    "7740": {
      "op": "JUMPDEST"
    },
    "7741": {
      "op": "SWAP5"
    },
    "7742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7744": {
      "op": "SWAP4"
    },
    "7745": {
      "op": "SWAP1"
    },
    "7746": {
      "op": "SWAP4"
    },
    "7747": {
      "op": "ADD"
    },
    "7748": {
      "op": "CALLDATALOAD"
    },
    "7749": {
      "op": "SWAP4"
    },
    "7750": {
      "op": "POP"
    },
    "7751": {
      "op": "POP"
    },
    "7752": {
      "op": "POP"
    },
    "7753": {
      "jump": "o",
      "op": "JUMP"
    },
    "7754": {
      "op": "JUMPDEST"
    },
    "7755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7757": {
      "op": "DUP1"
    },
    "7758": {
      "op": "DUP4"
    },
    "7759": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7761": {
      "op": "DUP5"
    },
    "7762": {
      "op": "ADD"
    },
    "7763": {
      "op": "SLT"
    },
    "7764": {
      "op": "PUSH2",
      "value": "0x1E5C"
    },
    "7767": {
      "op": "JUMPI"
    },
    "7768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7770": {
      "op": "DUP1"
    },
    "7771": {
      "op": "REVERT"
    },
    "7772": {
      "op": "JUMPDEST"
    },
    "7773": {
      "op": "POP"
    },
    "7774": {
      "op": "DUP2"
    },
    "7775": {
      "op": "CALLDATALOAD"
    },
    "7776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7780": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7782": {
      "op": "SHL"
    },
    "7783": {
      "op": "SUB"
    },
    "7784": {
      "op": "DUP2"
    },
    "7785": {
      "op": "GT"
    },
    "7786": {
      "op": "ISZERO"
    },
    "7787": {
      "op": "PUSH2",
      "value": "0x1E73"
    },
    "7790": {
      "op": "JUMPI"
    },
    "7791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7793": {
      "op": "DUP1"
    },
    "7794": {
      "op": "REVERT"
    },
    "7795": {
      "op": "JUMPDEST"
    },
    "7796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7798": {
      "op": "DUP4"
    },
    "7799": {
      "op": "ADD"
    },
    "7800": {
      "op": "SWAP2"
    },
    "7801": {
      "op": "POP"
    },
    "7802": {
      "op": "DUP4"
    },
    "7803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7805": {
      "op": "DUP3"
    },
    "7806": {
      "op": "DUP6"
    },
    "7807": {
      "op": "ADD"
    },
    "7808": {
      "op": "ADD"
    },
    "7809": {
      "op": "GT"
    },
    "7810": {
      "op": "ISZERO"
    },
    "7811": {
      "op": "PUSH2",
      "value": "0x1E8B"
    },
    "7814": {
      "op": "JUMPI"
    },
    "7815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7817": {
      "op": "DUP1"
    },
    "7818": {
      "op": "REVERT"
    },
    "7819": {
      "op": "JUMPDEST"
    },
    "7820": {
      "op": "SWAP3"
    },
    "7821": {
      "op": "POP"
    },
    "7822": {
      "op": "SWAP3"
    },
    "7823": {
      "op": "SWAP1"
    },
    "7824": {
      "op": "POP"
    },
    "7825": {
      "jump": "o",
      "op": "JUMP"
    },
    "7826": {
      "op": "JUMPDEST"
    },
    "7827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7829": {
      "op": "DUP1"
    },
    "7830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7832": {
      "op": "DUP1"
    },
    "7833": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7835": {
      "op": "DUP6"
    },
    "7836": {
      "op": "DUP8"
    },
    "7837": {
      "op": "SUB"
    },
    "7838": {
      "op": "SLT"
    },
    "7839": {
      "op": "ISZERO"
    },
    "7840": {
      "op": "PUSH2",
      "value": "0x1EA8"
    },
    "7843": {
      "op": "JUMPI"
    },
    "7844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7846": {
      "op": "DUP1"
    },
    "7847": {
      "op": "REVERT"
    },
    "7848": {
      "op": "JUMPDEST"
    },
    "7849": {
      "op": "DUP5"
    },
    "7850": {
      "op": "CALLDATALOAD"
    },
    "7851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7855": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7857": {
      "op": "SHL"
    },
    "7858": {
      "op": "SUB"
    },
    "7859": {
      "op": "DUP1"
    },
    "7860": {
      "op": "DUP3"
    },
    "7861": {
      "op": "GT"
    },
    "7862": {
      "op": "ISZERO"
    },
    "7863": {
      "op": "PUSH2",
      "value": "0x1EBF"
    },
    "7866": {
      "op": "JUMPI"
    },
    "7867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7869": {
      "op": "DUP1"
    },
    "7870": {
      "op": "REVERT"
    },
    "7871": {
      "op": "JUMPDEST"
    },
    "7872": {
      "op": "PUSH2",
      "value": "0x1ECB"
    },
    "7875": {
      "op": "DUP9"
    },
    "7876": {
      "op": "DUP4"
    },
    "7877": {
      "op": "DUP10"
    },
    "7878": {
      "op": "ADD"
    },
    "7879": {
      "op": "PUSH2",
      "value": "0x1E4A"
    },
    "7882": {
      "jump": "i",
      "op": "JUMP"
    },
    "7883": {
      "op": "JUMPDEST"
    },
    "7884": {
      "op": "SWAP1"
    },
    "7885": {
      "op": "SWAP7"
    },
    "7886": {
      "op": "POP"
    },
    "7887": {
      "op": "SWAP5"
    },
    "7888": {
      "op": "POP"
    },
    "7889": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7891": {
      "op": "DUP8"
    },
    "7892": {
      "op": "ADD"
    },
    "7893": {
      "op": "CALLDATALOAD"
    },
    "7894": {
      "op": "SWAP2"
    },
    "7895": {
      "op": "POP"
    },
    "7896": {
      "op": "DUP1"
    },
    "7897": {
      "op": "DUP3"
    },
    "7898": {
      "op": "GT"
    },
    "7899": {
      "op": "ISZERO"
    },
    "7900": {
      "op": "PUSH2",
      "value": "0x1EE4"
    },
    "7903": {
      "op": "JUMPI"
    },
    "7904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7906": {
      "op": "DUP1"
    },
    "7907": {
      "op": "REVERT"
    },
    "7908": {
      "op": "JUMPDEST"
    },
    "7909": {
      "op": "POP"
    },
    "7910": {
      "op": "PUSH2",
      "value": "0x1EF1"
    },
    "7913": {
      "op": "DUP8"
    },
    "7914": {
      "op": "DUP3"
    },
    "7915": {
      "op": "DUP9"
    },
    "7916": {
      "op": "ADD"
    },
    "7917": {
      "op": "PUSH2",
      "value": "0x1E4A"
    },
    "7920": {
      "jump": "i",
      "op": "JUMP"
    },
    "7921": {
      "op": "JUMPDEST"
    },
    "7922": {
      "op": "SWAP6"
    },
    "7923": {
      "op": "SWAP9"
    },
    "7924": {
      "op": "SWAP5"
    },
    "7925": {
      "op": "SWAP8"
    },
    "7926": {
      "op": "POP"
    },
    "7927": {
      "op": "SWAP6"
    },
    "7928": {
      "op": "POP"
    },
    "7929": {
      "op": "POP"
    },
    "7930": {
      "op": "POP"
    },
    "7931": {
      "op": "POP"
    },
    "7932": {
      "jump": "o",
      "op": "JUMP"
    },
    "7933": {
      "op": "JUMPDEST"
    },
    "7934": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7936": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7938": {
      "op": "DUP3"
    },
    "7939": {
      "op": "DUP5"
    },
    "7940": {
      "op": "SUB"
    },
    "7941": {
      "op": "SLT"
    },
    "7942": {
      "op": "ISZERO"
    },
    "7943": {
      "op": "PUSH2",
      "value": "0x1F0F"
    },
    "7946": {
      "op": "JUMPI"
    },
    "7947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7949": {
      "op": "DUP1"
    },
    "7950": {
      "op": "REVERT"
    },
    "7951": {
      "op": "JUMPDEST"
    },
    "7952": {
      "op": "DUP2"
    },
    "7953": {
      "op": "CALLDATALOAD"
    },
    "7954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7958": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7960": {
      "op": "SHL"
    },
    "7961": {
      "op": "SUB"
    },
    "7962": {
      "op": "DUP2"
    },
    "7963": {
      "op": "GT"
    },
    "7964": {
      "op": "ISZERO"
    },
    "7965": {
      "op": "PUSH2",
      "value": "0x1F25"
    },
    "7968": {
      "op": "JUMPI"
    },
    "7969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7971": {
      "op": "DUP1"
    },
    "7972": {
      "op": "REVERT"
    },
    "7973": {
      "op": "JUMPDEST"
    },
    "7974": {
      "op": "DUP3"
    },
    "7975": {
      "op": "ADD"
    },
    "7976": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7978": {
      "op": "DUP2"
    },
    "7979": {
      "op": "DUP6"
    },
    "7980": {
      "op": "SUB"
    },
    "7981": {
      "op": "SLT"
    },
    "7982": {
      "op": "ISZERO"
    },
    "7983": {
      "op": "PUSH2",
      "value": "0x1DA6"
    },
    "7986": {
      "op": "JUMPI"
    },
    "7987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7989": {
      "op": "DUP1"
    },
    "7990": {
      "op": "REVERT"
    },
    "7991": {
      "op": "JUMPDEST"
    },
    "7992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7994": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7996": {
      "op": "DUP3"
    },
    "7997": {
      "op": "DUP5"
    },
    "7998": {
      "op": "SUB"
    },
    "7999": {
      "op": "SLT"
    },
    "8000": {
      "op": "ISZERO"
    },
    "8001": {
      "op": "PUSH2",
      "value": "0x1F49"
    },
    "8004": {
      "op": "JUMPI"
    },
    "8005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8007": {
      "op": "DUP1"
    },
    "8008": {
      "op": "REVERT"
    },
    "8009": {
      "op": "JUMPDEST"
    },
    "8010": {
      "op": "POP"
    },
    "8011": {
      "op": "CALLDATALOAD"
    },
    "8012": {
      "op": "SWAP2"
    },
    "8013": {
      "op": "SWAP1"
    },
    "8014": {
      "op": "POP"
    },
    "8015": {
      "jump": "o",
      "op": "JUMP"
    },
    "8016": {
      "op": "JUMPDEST"
    },
    "8017": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8022": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8024": {
      "op": "SHL"
    },
    "8025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8027": {
      "op": "MSTORE"
    },
    "8028": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "8030": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8032": {
      "op": "MSTORE"
    },
    "8033": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8037": {
      "op": "REVERT"
    },
    "8038": {
      "op": "JUMPDEST"
    },
    "8039": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8041": {
      "op": "DUP1"
    },
    "8042": {
      "op": "MLOAD"
    },
    "8043": {
      "op": "SWAP1"
    },
    "8044": {
      "op": "DUP2"
    },
    "8045": {
      "op": "ADD"
    },
    "8046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8050": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8052": {
      "op": "SHL"
    },
    "8053": {
      "op": "SUB"
    },
    "8054": {
      "op": "DUP2"
    },
    "8055": {
      "op": "GT"
    },
    "8056": {
      "op": "DUP3"
    },
    "8057": {
      "op": "DUP3"
    },
    "8058": {
      "op": "LT"
    },
    "8059": {
      "op": "OR"
    },
    "8060": {
      "op": "ISZERO"
    },
    "8061": {
      "op": "PUSH2",
      "value": "0x1F88"
    },
    "8064": {
      "op": "JUMPI"
    },
    "8065": {
      "op": "PUSH2",
      "value": "0x1F88"
    },
    "8068": {
      "op": "PUSH2",
      "value": "0x1F50"
    },
    "8071": {
      "jump": "i",
      "op": "JUMP"
    },
    "8072": {
      "op": "JUMPDEST"
    },
    "8073": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8075": {
      "op": "MSTORE"
    },
    "8076": {
      "op": "SWAP1"
    },
    "8077": {
      "jump": "o",
      "op": "JUMP"
    },
    "8078": {
      "op": "JUMPDEST"
    },
    "8079": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8081": {
      "op": "MLOAD"
    },
    "8082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8084": {
      "op": "DUP2"
    },
    "8085": {
      "op": "ADD"
    },
    "8086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8090": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8092": {
      "op": "SHL"
    },
    "8093": {
      "op": "SUB"
    },
    "8094": {
      "op": "DUP2"
    },
    "8095": {
      "op": "GT"
    },
    "8096": {
      "op": "DUP3"
    },
    "8097": {
      "op": "DUP3"
    },
    "8098": {
      "op": "LT"
    },
    "8099": {
      "op": "OR"
    },
    "8100": {
      "op": "ISZERO"
    },
    "8101": {
      "op": "PUSH2",
      "value": "0x1F88"
    },
    "8104": {
      "op": "JUMPI"
    },
    "8105": {
      "op": "PUSH2",
      "value": "0x1F88"
    },
    "8108": {
      "op": "PUSH2",
      "value": "0x1F50"
    },
    "8111": {
      "jump": "i",
      "op": "JUMP"
    },
    "8112": {
      "op": "JUMPDEST"
    },
    "8113": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8115": {
      "op": "MLOAD"
    },
    "8116": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8118": {
      "op": "DUP3"
    },
    "8119": {
      "op": "ADD"
    },
    "8120": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8122": {
      "op": "NOT"
    },
    "8123": {
      "op": "AND"
    },
    "8124": {
      "op": "DUP2"
    },
    "8125": {
      "op": "ADD"
    },
    "8126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8130": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8132": {
      "op": "SHL"
    },
    "8133": {
      "op": "SUB"
    },
    "8134": {
      "op": "DUP2"
    },
    "8135": {
      "op": "GT"
    },
    "8136": {
      "op": "DUP3"
    },
    "8137": {
      "op": "DUP3"
    },
    "8138": {
      "op": "LT"
    },
    "8139": {
      "op": "OR"
    },
    "8140": {
      "op": "ISZERO"
    },
    "8141": {
      "op": "PUSH2",
      "value": "0x1FD8"
    },
    "8144": {
      "op": "JUMPI"
    },
    "8145": {
      "op": "PUSH2",
      "value": "0x1FD8"
    },
    "8148": {
      "op": "PUSH2",
      "value": "0x1F50"
    },
    "8151": {
      "jump": "i",
      "op": "JUMP"
    },
    "8152": {
      "op": "JUMPDEST"
    },
    "8153": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8155": {
      "op": "MSTORE"
    },
    "8156": {
      "op": "SWAP2"
    },
    "8157": {
      "op": "SWAP1"
    },
    "8158": {
      "op": "POP"
    },
    "8159": {
      "jump": "o",
      "op": "JUMP"
    },
    "8160": {
      "op": "JUMPDEST"
    },
    "8161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8165": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8167": {
      "op": "SHL"
    },
    "8168": {
      "op": "SUB"
    },
    "8169": {
      "op": "DUP2"
    },
    "8170": {
      "op": "AND"
    },
    "8171": {
      "op": "DUP2"
    },
    "8172": {
      "op": "EQ"
    },
    "8173": {
      "op": "PUSH2",
      "value": "0x9E3"
    },
    "8176": {
      "op": "JUMPI"
    },
    "8177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8179": {
      "op": "DUP1"
    },
    "8180": {
      "op": "REVERT"
    },
    "8181": {
      "op": "JUMPDEST"
    },
    "8182": {
      "op": "DUP1"
    },
    "8183": {
      "op": "CALLDATALOAD"
    },
    "8184": {
      "op": "PUSH2",
      "value": "0x2000"
    },
    "8187": {
      "op": "DUP2"
    },
    "8188": {
      "op": "PUSH2",
      "value": "0x1FE0"
    },
    "8191": {
      "jump": "i",
      "op": "JUMP"
    },
    "8192": {
      "op": "JUMPDEST"
    },
    "8193": {
      "op": "SWAP2"
    },
    "8194": {
      "op": "SWAP1"
    },
    "8195": {
      "op": "POP"
    },
    "8196": {
      "jump": "o",
      "op": "JUMP"
    },
    "8197": {
      "op": "JUMPDEST"
    },
    "8198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8200": {
      "op": "DUP3"
    },
    "8201": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8203": {
      "op": "DUP4"
    },
    "8204": {
      "op": "ADD"
    },
    "8205": {
      "op": "SLT"
    },
    "8206": {
      "op": "PUSH2",
      "value": "0x2016"
    },
    "8209": {
      "op": "JUMPI"
    },
    "8210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8212": {
      "op": "DUP1"
    },
    "8213": {
      "op": "REVERT"
    },
    "8214": {
      "op": "JUMPDEST"
    },
    "8215": {
      "op": "DUP2"
    },
    "8216": {
      "op": "CALLDATALOAD"
    },
    "8217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8221": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8223": {
      "op": "SHL"
    },
    "8224": {
      "op": "SUB"
    },
    "8225": {
      "op": "DUP2"
    },
    "8226": {
      "op": "GT"
    },
    "8227": {
      "op": "ISZERO"
    },
    "8228": {
      "op": "PUSH2",
      "value": "0x202F"
    },
    "8231": {
      "op": "JUMPI"
    },
    "8232": {
      "op": "PUSH2",
      "value": "0x202F"
    },
    "8235": {
      "op": "PUSH2",
      "value": "0x1F50"
    },
    "8238": {
      "jump": "i",
      "op": "JUMP"
    },
    "8239": {
      "op": "JUMPDEST"
    },
    "8240": {
      "op": "PUSH2",
      "value": "0x2042"
    },
    "8243": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8245": {
      "op": "DUP3"
    },
    "8246": {
      "op": "ADD"
    },
    "8247": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8249": {
      "op": "NOT"
    },
    "8250": {
      "op": "AND"
    },
    "8251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8253": {
      "op": "ADD"
    },
    "8254": {
      "op": "PUSH2",
      "value": "0x1FB0"
    },
    "8257": {
      "jump": "i",
      "op": "JUMP"
    },
    "8258": {
      "op": "JUMPDEST"
    },
    "8259": {
      "op": "DUP2"
    },
    "8260": {
      "op": "DUP2"
    },
    "8261": {
      "op": "MSTORE"
    },
    "8262": {
      "op": "DUP5"
    },
    "8263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8265": {
      "op": "DUP4"
    },
    "8266": {
      "op": "DUP7"
    },
    "8267": {
      "op": "ADD"
    },
    "8268": {
      "op": "ADD"
    },
    "8269": {
      "op": "GT"
    },
    "8270": {
      "op": "ISZERO"
    },
    "8271": {
      "op": "PUSH2",
      "value": "0x2057"
    },
    "8274": {
      "op": "JUMPI"
    },
    "8275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8277": {
      "op": "DUP1"
    },
    "8278": {
      "op": "REVERT"
    },
    "8279": {
      "op": "JUMPDEST"
    },
    "8280": {
      "op": "DUP2"
    },
    "8281": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8283": {
      "op": "DUP6"
    },
    "8284": {
      "op": "ADD"
    },
    "8285": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8287": {
      "op": "DUP4"
    },
    "8288": {
      "op": "ADD"
    },
    "8289": {
      "op": "CALLDATACOPY"
    },
    "8290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8292": {
      "op": "SWAP2"
    },
    "8293": {
      "op": "DUP2"
    },
    "8294": {
      "op": "ADD"
    },
    "8295": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8297": {
      "op": "ADD"
    },
    "8298": {
      "op": "SWAP2"
    },
    "8299": {
      "op": "SWAP1"
    },
    "8300": {
      "op": "SWAP2"
    },
    "8301": {
      "op": "MSTORE"
    },
    "8302": {
      "op": "SWAP4"
    },
    "8303": {
      "op": "SWAP3"
    },
    "8304": {
      "op": "POP"
    },
    "8305": {
      "op": "POP"
    },
    "8306": {
      "op": "POP"
    },
    "8307": {
      "jump": "o",
      "op": "JUMP"
    },
    "8308": {
      "op": "JUMPDEST"
    },
    "8309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8311": {
      "op": "DUP3"
    },
    "8312": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8314": {
      "op": "DUP4"
    },
    "8315": {
      "op": "ADD"
    },
    "8316": {
      "op": "SLT"
    },
    "8317": {
      "op": "PUSH2",
      "value": "0x2085"
    },
    "8320": {
      "op": "JUMPI"
    },
    "8321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8323": {
      "op": "DUP1"
    },
    "8324": {
      "op": "REVERT"
    },
    "8325": {
      "op": "JUMPDEST"
    },
    "8326": {
      "op": "DUP2"
    },
    "8327": {
      "op": "CALLDATALOAD"
    },
    "8328": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8334": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8336": {
      "op": "SHL"
    },
    "8337": {
      "op": "SUB"
    },
    "8338": {
      "op": "DUP3"
    },
    "8339": {
      "op": "GT"
    },
    "8340": {
      "op": "ISZERO"
    },
    "8341": {
      "op": "PUSH2",
      "value": "0x20A0"
    },
    "8344": {
      "op": "JUMPI"
    },
    "8345": {
      "op": "PUSH2",
      "value": "0x20A0"
    },
    "8348": {
      "op": "PUSH2",
      "value": "0x1F50"
    },
    "8351": {
      "jump": "i",
      "op": "JUMP"
    },
    "8352": {
      "op": "JUMPDEST"
    },
    "8353": {
      "op": "PUSH2",
      "value": "0x20AE"
    },
    "8356": {
      "op": "DUP2"
    },
    "8357": {
      "op": "DUP4"
    },
    "8358": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8360": {
      "op": "SHL"
    },
    "8361": {
      "op": "ADD"
    },
    "8362": {
      "op": "PUSH2",
      "value": "0x1FB0"
    },
    "8365": {
      "jump": "i",
      "op": "JUMP"
    },
    "8366": {
      "op": "JUMPDEST"
    },
    "8367": {
      "op": "DUP3"
    },
    "8368": {
      "op": "DUP2"
    },
    "8369": {
      "op": "MSTORE"
    },
    "8370": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "8372": {
      "op": "SWAP3"
    },
    "8373": {
      "op": "SWAP1"
    },
    "8374": {
      "op": "SWAP3"
    },
    "8375": {
      "op": "SHL"
    },
    "8376": {
      "op": "DUP5"
    },
    "8377": {
      "op": "ADD"
    },
    "8378": {
      "op": "DUP2"
    },
    "8379": {
      "op": "ADD"
    },
    "8380": {
      "op": "SWAP2"
    },
    "8381": {
      "op": "DUP2"
    },
    "8382": {
      "op": "DUP2"
    },
    "8383": {
      "op": "ADD"
    },
    "8384": {
      "op": "SWAP1"
    },
    "8385": {
      "op": "DUP7"
    },
    "8386": {
      "op": "DUP5"
    },
    "8387": {
      "op": "GT"
    },
    "8388": {
      "op": "ISZERO"
    },
    "8389": {
      "op": "PUSH2",
      "value": "0x20CD"
    },
    "8392": {
      "op": "JUMPI"
    },
    "8393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8395": {
      "op": "DUP1"
    },
    "8396": {
      "op": "REVERT"
    },
    "8397": {
      "op": "JUMPDEST"
    },
    "8398": {
      "op": "DUP3"
    },
    "8399": {
      "op": "DUP7"
    },
    "8400": {
      "op": "ADD"
    },
    "8401": {
      "op": "JUMPDEST"
    },
    "8402": {
      "op": "DUP5"
    },
    "8403": {
      "op": "DUP2"
    },
    "8404": {
      "op": "LT"
    },
    "8405": {
      "op": "ISZERO"
    },
    "8406": {
      "op": "PUSH2",
      "value": "0x2115"
    },
    "8409": {
      "op": "JUMPI"
    },
    "8410": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8412": {
      "op": "DUP2"
    },
    "8413": {
      "op": "DUP10"
    },
    "8414": {
      "op": "SUB"
    },
    "8415": {
      "op": "SLT"
    },
    "8416": {
      "op": "ISZERO"
    },
    "8417": {
      "op": "PUSH2",
      "value": "0x20EA"
    },
    "8420": {
      "op": "JUMPI"
    },
    "8421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8423": {
      "op": "DUP1"
    },
    "8424": {
      "op": "DUP2"
    },
    "8425": {
      "op": "REVERT"
    },
    "8426": {
      "op": "JUMPDEST"
    },
    "8427": {
      "op": "PUSH2",
      "value": "0x20F2"
    },
    "8430": {
      "op": "PUSH2",
      "value": "0x1F66"
    },
    "8433": {
      "jump": "i",
      "op": "JUMP"
    },
    "8434": {
      "op": "JUMPDEST"
    },
    "8435": {
      "op": "DUP2"
    },
    "8436": {
      "op": "CALLDATALOAD"
    },
    "8437": {
      "op": "PUSH2",
      "value": "0x20FD"
    },
    "8440": {
      "op": "DUP2"
    },
    "8441": {
      "op": "PUSH2",
      "value": "0x1E09"
    },
    "8444": {
      "jump": "i",
      "op": "JUMP"
    },
    "8445": {
      "op": "JUMPDEST"
    },
    "8446": {
      "op": "DUP2"
    },
    "8447": {
      "op": "MSTORE"
    },
    "8448": {
      "op": "DUP2"
    },
    "8449": {
      "op": "DUP6"
    },
    "8450": {
      "op": "ADD"
    },
    "8451": {
      "op": "CALLDATALOAD"
    },
    "8452": {
      "op": "DUP6"
    },
    "8453": {
      "op": "DUP3"
    },
    "8454": {
      "op": "ADD"
    },
    "8455": {
      "op": "MSTORE"
    },
    "8456": {
      "op": "DUP4"
    },
    "8457": {
      "op": "MSTORE"
    },
    "8458": {
      "op": "SWAP2"
    },
    "8459": {
      "op": "DUP4"
    },
    "8460": {
      "op": "ADD"
    },
    "8461": {
      "op": "SWAP2"
    },
    "8462": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8464": {
      "op": "ADD"
    },
    "8465": {
      "op": "PUSH2",
      "value": "0x20D1"
    },
    "8468": {
      "op": "JUMP"
    },
    "8469": {
      "op": "JUMPDEST"
    },
    "8470": {
      "op": "POP"
    },
    "8471": {
      "op": "SWAP7"
    },
    "8472": {
      "op": "SWAP6"
    },
    "8473": {
      "op": "POP"
    },
    "8474": {
      "op": "POP"
    },
    "8475": {
      "op": "POP"
    },
    "8476": {
      "op": "POP"
    },
    "8477": {
      "op": "POP"
    },
    "8478": {
      "op": "POP"
    },
    "8479": {
      "jump": "o",
      "op": "JUMP"
    },
    "8480": {
      "op": "JUMPDEST"
    },
    "8481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8483": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8485": {
      "op": "DUP3"
    },
    "8486": {
      "op": "DUP5"
    },
    "8487": {
      "op": "SUB"
    },
    "8488": {
      "op": "SLT"
    },
    "8489": {
      "op": "ISZERO"
    },
    "8490": {
      "op": "PUSH2",
      "value": "0x2132"
    },
    "8493": {
      "op": "JUMPI"
    },
    "8494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8496": {
      "op": "DUP1"
    },
    "8497": {
      "op": "REVERT"
    },
    "8498": {
      "op": "JUMPDEST"
    },
    "8499": {
      "op": "PUSH2",
      "value": "0x213A"
    },
    "8502": {
      "op": "PUSH2",
      "value": "0x1F8E"
    },
    "8505": {
      "jump": "i",
      "op": "JUMP"
    },
    "8506": {
      "op": "JUMPDEST"
    },
    "8507": {
      "op": "SWAP1"
    },
    "8508": {
      "op": "POP"
    },
    "8509": {
      "op": "DUP2"
    },
    "8510": {
      "op": "CALLDATALOAD"
    },
    "8511": {
      "op": "DUP2"
    },
    "8512": {
      "op": "MSTORE"
    },
    "8513": {
      "op": "PUSH2",
      "value": "0x214C"
    },
    "8516": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8518": {
      "op": "DUP4"
    },
    "8519": {
      "op": "ADD"
    },
    "8520": {
      "op": "PUSH2",
      "value": "0x1FF5"
    },
    "8523": {
      "jump": "i",
      "op": "JUMP"
    },
    "8524": {
      "op": "JUMPDEST"
    },
    "8525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8527": {
      "op": "DUP3"
    },
    "8528": {
      "op": "ADD"
    },
    "8529": {
      "op": "MSTORE"
    },
    "8530": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8532": {
      "op": "DUP3"
    },
    "8533": {
      "op": "ADD"
    },
    "8534": {
      "op": "CALLDATALOAD"
    },
    "8535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8539": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8541": {
      "op": "SHL"
    },
    "8542": {
      "op": "SUB"
    },
    "8543": {
      "op": "DUP1"
    },
    "8544": {
      "op": "DUP3"
    },
    "8545": {
      "op": "GT"
    },
    "8546": {
      "op": "ISZERO"
    },
    "8547": {
      "op": "PUSH2",
      "value": "0x216B"
    },
    "8550": {
      "op": "JUMPI"
    },
    "8551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8553": {
      "op": "DUP1"
    },
    "8554": {
      "op": "REVERT"
    },
    "8555": {
      "op": "JUMPDEST"
    },
    "8556": {
      "op": "PUSH2",
      "value": "0x2177"
    },
    "8559": {
      "op": "DUP6"
    },
    "8560": {
      "op": "DUP4"
    },
    "8561": {
      "op": "DUP7"
    },
    "8562": {
      "op": "ADD"
    },
    "8563": {
      "op": "PUSH2",
      "value": "0x2005"
    },
    "8566": {
      "jump": "i",
      "op": "JUMP"
    },
    "8567": {
      "op": "JUMPDEST"
    },
    "8568": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8570": {
      "op": "DUP5"
    },
    "8571": {
      "op": "ADD"
    },
    "8572": {
      "op": "MSTORE"
    },
    "8573": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8575": {
      "op": "DUP5"
    },
    "8576": {
      "op": "ADD"
    },
    "8577": {
      "op": "CALLDATALOAD"
    },
    "8578": {
      "op": "SWAP2"
    },
    "8579": {
      "op": "POP"
    },
    "8580": {
      "op": "DUP1"
    },
    "8581": {
      "op": "DUP3"
    },
    "8582": {
      "op": "GT"
    },
    "8583": {
      "op": "ISZERO"
    },
    "8584": {
      "op": "PUSH2",
      "value": "0x2190"
    },
    "8587": {
      "op": "JUMPI"
    },
    "8588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8590": {
      "op": "DUP1"
    },
    "8591": {
      "op": "REVERT"
    },
    "8592": {
      "op": "JUMPDEST"
    },
    "8593": {
      "op": "PUSH2",
      "value": "0x219C"
    },
    "8596": {
      "op": "DUP6"
    },
    "8597": {
      "op": "DUP4"
    },
    "8598": {
      "op": "DUP7"
    },
    "8599": {
      "op": "ADD"
    },
    "8600": {
      "op": "PUSH2",
      "value": "0x2005"
    },
    "8603": {
      "jump": "i",
      "op": "JUMP"
    },
    "8604": {
      "op": "JUMPDEST"
    },
    "8605": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8607": {
      "op": "DUP5"
    },
    "8608": {
      "op": "ADD"
    },
    "8609": {
      "op": "MSTORE"
    },
    "8610": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8612": {
      "op": "DUP5"
    },
    "8613": {
      "op": "ADD"
    },
    "8614": {
      "op": "CALLDATALOAD"
    },
    "8615": {
      "op": "SWAP2"
    },
    "8616": {
      "op": "POP"
    },
    "8617": {
      "op": "DUP1"
    },
    "8618": {
      "op": "DUP3"
    },
    "8619": {
      "op": "GT"
    },
    "8620": {
      "op": "ISZERO"
    },
    "8621": {
      "op": "PUSH2",
      "value": "0x21B5"
    },
    "8624": {
      "op": "JUMPI"
    },
    "8625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8627": {
      "op": "DUP1"
    },
    "8628": {
      "op": "REVERT"
    },
    "8629": {
      "op": "JUMPDEST"
    },
    "8630": {
      "op": "POP"
    },
    "8631": {
      "op": "PUSH2",
      "value": "0x21C2"
    },
    "8634": {
      "op": "DUP5"
    },
    "8635": {
      "op": "DUP3"
    },
    "8636": {
      "op": "DUP6"
    },
    "8637": {
      "op": "ADD"
    },
    "8638": {
      "op": "PUSH2",
      "value": "0x2074"
    },
    "8641": {
      "jump": "i",
      "op": "JUMP"
    },
    "8642": {
      "op": "JUMPDEST"
    },
    "8643": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8645": {
      "op": "DUP4"
    },
    "8646": {
      "op": "ADD"
    },
    "8647": {
      "op": "MSTORE"
    },
    "8648": {
      "op": "POP"
    },
    "8649": {
      "op": "SWAP3"
    },
    "8650": {
      "op": "SWAP2"
    },
    "8651": {
      "op": "POP"
    },
    "8652": {
      "op": "POP"
    },
    "8653": {
      "jump": "o",
      "op": "JUMP"
    },
    "8654": {
      "op": "JUMPDEST"
    },
    "8655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8659": {
      "op": "DUP3"
    },
    "8660": {
      "op": "DUP5"
    },
    "8661": {
      "op": "SUB"
    },
    "8662": {
      "op": "SLT"
    },
    "8663": {
      "op": "ISZERO"
    },
    "8664": {
      "op": "PUSH2",
      "value": "0x21E0"
    },
    "8667": {
      "op": "JUMPI"
    },
    "8668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8670": {
      "op": "DUP1"
    },
    "8671": {
      "op": "REVERT"
    },
    "8672": {
      "op": "JUMPDEST"
    },
    "8673": {
      "op": "DUP2"
    },
    "8674": {
      "op": "CALLDATALOAD"
    },
    "8675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8679": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8681": {
      "op": "SHL"
    },
    "8682": {
      "op": "SUB"
    },
    "8683": {
      "op": "DUP2"
    },
    "8684": {
      "op": "GT"
    },
    "8685": {
      "op": "ISZERO"
    },
    "8686": {
      "op": "PUSH2",
      "value": "0x21F6"
    },
    "8689": {
      "op": "JUMPI"
    },
    "8690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8692": {
      "op": "DUP1"
    },
    "8693": {
      "op": "REVERT"
    },
    "8694": {
      "op": "JUMPDEST"
    },
    "8695": {
      "op": "PUSH2",
      "value": "0xA9B"
    },
    "8698": {
      "op": "DUP5"
    },
    "8699": {
      "op": "DUP3"
    },
    "8700": {
      "op": "DUP6"
    },
    "8701": {
      "op": "ADD"
    },
    "8702": {
      "op": "PUSH2",
      "value": "0x2120"
    },
    "8705": {
      "jump": "i",
      "op": "JUMP"
    },
    "8706": {
      "op": "JUMPDEST"
    },
    "8707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8709": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8711": {
      "op": "DUP3"
    },
    "8712": {
      "op": "DUP5"
    },
    "8713": {
      "op": "SUB"
    },
    "8714": {
      "op": "SLT"
    },
    "8715": {
      "op": "ISZERO"
    },
    "8716": {
      "op": "PUSH2",
      "value": "0x2214"
    },
    "8719": {
      "op": "JUMPI"
    },
    "8720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8722": {
      "op": "DUP1"
    },
    "8723": {
      "op": "REVERT"
    },
    "8724": {
      "op": "JUMPDEST"
    },
    "8725": {
      "op": "DUP2"
    },
    "8726": {
      "op": "CALLDATALOAD"
    },
    "8727": {
      "op": "PUSH2",
      "value": "0x1DA6"
    },
    "8730": {
      "op": "DUP2"
    },
    "8731": {
      "op": "PUSH2",
      "value": "0x1E09"
    },
    "8734": {
      "jump": "i",
      "op": "JUMP"
    },
    "8735": {
      "op": "JUMPDEST"
    },
    "8736": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8738": {
      "op": "DUP1"
    },
    "8739": {
      "op": "DUP3"
    },
    "8740": {
      "op": "MSTORE"
    },
    "8741": {
      "op": "DUP3"
    },
    "8742": {
      "op": "MLOAD"
    },
    "8743": {
      "op": "DUP3"
    },
    "8744": {
      "op": "DUP3"
    },
    "8745": {
      "op": "ADD"
    },
    "8746": {
      "op": "DUP2"
    },
    "8747": {
      "op": "SWAP1"
    },
    "8748": {
      "op": "MSTORE"
    },
    "8749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8751": {
      "op": "SWAP2"
    },
    "8752": {
      "op": "SWAP1"
    },
    "8753": {
      "op": "DUP5"
    },
    "8754": {
      "op": "DUP3"
    },
    "8755": {
      "op": "ADD"
    },
    "8756": {
      "op": "SWAP1"
    },
    "8757": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8759": {
      "op": "DUP6"
    },
    "8760": {
      "op": "ADD"
    },
    "8761": {
      "op": "SWAP1"
    },
    "8762": {
      "op": "DUP5"
    },
    "8763": {
      "op": "JUMPDEST"
    },
    "8764": {
      "op": "DUP2"
    },
    "8765": {
      "op": "DUP2"
    },
    "8766": {
      "op": "LT"
    },
    "8767": {
      "op": "ISZERO"
    },
    "8768": {
      "op": "PUSH2",
      "value": "0x2260"
    },
    "8771": {
      "op": "JUMPI"
    },
    "8772": {
      "op": "DUP4"
    },
    "8773": {
      "op": "MLOAD"
    },
    "8774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8778": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8780": {
      "op": "SHL"
    },
    "8781": {
      "op": "SUB"
    },
    "8782": {
      "op": "AND"
    },
    "8783": {
      "op": "DUP4"
    },
    "8784": {
      "op": "MSTORE"
    },
    "8785": {
      "op": "SWAP3"
    },
    "8786": {
      "op": "DUP5"
    },
    "8787": {
      "op": "ADD"
    },
    "8788": {
      "op": "SWAP3"
    },
    "8789": {
      "op": "SWAP2"
    },
    "8790": {
      "op": "DUP5"
    },
    "8791": {
      "op": "ADD"
    },
    "8792": {
      "op": "SWAP2"
    },
    "8793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8795": {
      "op": "ADD"
    },
    "8796": {
      "op": "PUSH2",
      "value": "0x223B"
    },
    "8799": {
      "op": "JUMP"
    },
    "8800": {
      "op": "JUMPDEST"
    },
    "8801": {
      "op": "POP"
    },
    "8802": {
      "op": "SWAP1"
    },
    "8803": {
      "op": "SWAP7"
    },
    "8804": {
      "op": "SWAP6"
    },
    "8805": {
      "op": "POP"
    },
    "8806": {
      "op": "POP"
    },
    "8807": {
      "op": "POP"
    },
    "8808": {
      "op": "POP"
    },
    "8809": {
      "op": "POP"
    },
    "8810": {
      "op": "POP"
    },
    "8811": {
      "jump": "o",
      "op": "JUMP"
    },
    "8812": {
      "op": "JUMPDEST"
    },
    "8813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8817": {
      "op": "DUP3"
    },
    "8818": {
      "op": "DUP5"
    },
    "8819": {
      "op": "SUB"
    },
    "8820": {
      "op": "SLT"
    },
    "8821": {
      "op": "ISZERO"
    },
    "8822": {
      "op": "PUSH2",
      "value": "0x227E"
    },
    "8825": {
      "op": "JUMPI"
    },
    "8826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8828": {
      "op": "DUP1"
    },
    "8829": {
      "op": "REVERT"
    },
    "8830": {
      "op": "JUMPDEST"
    },
    "8831": {
      "op": "POP"
    },
    "8832": {
      "op": "MLOAD"
    },
    "8833": {
      "op": "SWAP2"
    },
    "8834": {
      "op": "SWAP1"
    },
    "8835": {
      "op": "POP"
    },
    "8836": {
      "jump": "o",
      "op": "JUMP"
    },
    "8837": {
      "op": "JUMPDEST"
    },
    "8838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8840": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8842": {
      "op": "DUP3"
    },
    "8843": {
      "op": "DUP5"
    },
    "8844": {
      "op": "SUB"
    },
    "8845": {
      "op": "SLT"
    },
    "8846": {
      "op": "ISZERO"
    },
    "8847": {
      "op": "PUSH2",
      "value": "0x2297"
    },
    "8850": {
      "op": "JUMPI"
    },
    "8851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8853": {
      "op": "DUP1"
    },
    "8854": {
      "op": "REVERT"
    },
    "8855": {
      "op": "JUMPDEST"
    },
    "8856": {
      "op": "DUP2"
    },
    "8857": {
      "op": "MLOAD"
    },
    "8858": {
      "op": "DUP1"
    },
    "8859": {
      "op": "ISZERO"
    },
    "8860": {
      "op": "ISZERO"
    },
    "8861": {
      "op": "DUP2"
    },
    "8862": {
      "op": "EQ"
    },
    "8863": {
      "op": "PUSH2",
      "value": "0x1DA6"
    },
    "8866": {
      "op": "JUMPI"
    },
    "8867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8869": {
      "op": "DUP1"
    },
    "8870": {
      "op": "REVERT"
    },
    "8871": {
      "op": "JUMPDEST"
    },
    "8872": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8874": {
      "op": "SWAP5"
    },
    "8875": {
      "op": "SWAP1"
    },
    "8876": {
      "op": "SWAP5"
    },
    "8877": {
      "op": "AND"
    },
    "8878": {
      "op": "DUP5"
    },
    "8879": {
      "op": "MSTORE"
    },
    "8880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8884": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8886": {
      "op": "SHL"
    },
    "8887": {
      "op": "SUB"
    },
    "8888": {
      "op": "SWAP3"
    },
    "8889": {
      "op": "SWAP1"
    },
    "8890": {
      "op": "SWAP3"
    },
    "8891": {
      "op": "AND"
    },
    "8892": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8894": {
      "op": "DUP5"
    },
    "8895": {
      "op": "ADD"
    },
    "8896": {
      "op": "MSTORE"
    },
    "8897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8901": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8903": {
      "op": "SHL"
    },
    "8904": {
      "op": "SUB"
    },
    "8905": {
      "op": "AND"
    },
    "8906": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8908": {
      "op": "DUP4"
    },
    "8909": {
      "op": "ADD"
    },
    "8910": {
      "op": "MSTORE"
    },
    "8911": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8913": {
      "op": "DUP3"
    },
    "8914": {
      "op": "ADD"
    },
    "8915": {
      "op": "MSTORE"
    },
    "8916": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8918": {
      "op": "ADD"
    },
    "8919": {
      "op": "SWAP1"
    },
    "8920": {
      "jump": "o",
      "op": "JUMP"
    },
    "8921": {
      "op": "JUMPDEST"
    },
    "8922": {
      "op": "DUP2"
    },
    "8923": {
      "op": "DUP4"
    },
    "8924": {
      "op": "MSTORE"
    },
    "8925": {
      "op": "DUP2"
    },
    "8926": {
      "op": "DUP2"
    },
    "8927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8929": {
      "op": "DUP6"
    },
    "8930": {
      "op": "ADD"
    },
    "8931": {
      "op": "CALLDATACOPY"
    },
    "8932": {
      "op": "POP"
    },
    "8933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8935": {
      "op": "DUP3"
    },
    "8936": {
      "op": "DUP3"
    },
    "8937": {
      "op": "ADD"
    },
    "8938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8940": {
      "op": "SWAP1"
    },
    "8941": {
      "op": "DUP2"
    },
    "8942": {
      "op": "ADD"
    },
    "8943": {
      "op": "SWAP2"
    },
    "8944": {
      "op": "SWAP1"
    },
    "8945": {
      "op": "SWAP2"
    },
    "8946": {
      "op": "MSTORE"
    },
    "8947": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8949": {
      "op": "SWAP1"
    },
    "8950": {
      "op": "SWAP2"
    },
    "8951": {
      "op": "ADD"
    },
    "8952": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8954": {
      "op": "NOT"
    },
    "8955": {
      "op": "AND"
    },
    "8956": {
      "op": "SWAP1"
    },
    "8957": {
      "op": "SWAP2"
    },
    "8958": {
      "op": "ADD"
    },
    "8959": {
      "op": "ADD"
    },
    "8960": {
      "op": "SWAP1"
    },
    "8961": {
      "jump": "o",
      "op": "JUMP"
    },
    "8962": {
      "op": "JUMPDEST"
    },
    "8963": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8965": {
      "op": "DUP2"
    },
    "8966": {
      "op": "MSTORE"
    },
    "8967": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8969": {
      "op": "PUSH2",
      "value": "0x2316"
    },
    "8972": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8974": {
      "op": "DUP4"
    },
    "8975": {
      "op": "ADD"
    },
    "8976": {
      "op": "DUP7"
    },
    "8977": {
      "op": "DUP9"
    },
    "8978": {
      "op": "PUSH2",
      "value": "0x22D9"
    },
    "8981": {
      "jump": "i",
      "op": "JUMP"
    },
    "8982": {
      "op": "JUMPDEST"
    },
    "8983": {
      "op": "DUP3"
    },
    "8984": {
      "op": "DUP2"
    },
    "8985": {
      "op": "SUB"
    },
    "8986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8988": {
      "op": "DUP5"
    },
    "8989": {
      "op": "ADD"
    },
    "8990": {
      "op": "MSTORE"
    },
    "8991": {
      "op": "PUSH2",
      "value": "0x2329"
    },
    "8994": {
      "op": "DUP2"
    },
    "8995": {
      "op": "DUP6"
    },
    "8996": {
      "op": "DUP8"
    },
    "8997": {
      "op": "PUSH2",
      "value": "0x22D9"
    },
    "9000": {
      "jump": "i",
      "op": "JUMP"
    },
    "9001": {
      "op": "JUMPDEST"
    },
    "9002": {
      "op": "SWAP8"
    },
    "9003": {
      "op": "SWAP7"
    },
    "9004": {
      "op": "POP"
    },
    "9005": {
      "op": "POP"
    },
    "9006": {
      "op": "POP"
    },
    "9007": {
      "op": "POP"
    },
    "9008": {
      "op": "POP"
    },
    "9009": {
      "op": "POP"
    },
    "9010": {
      "op": "POP"
    },
    "9011": {
      "jump": "o",
      "op": "JUMP"
    },
    "9012": {
      "op": "JUMPDEST"
    },
    "9013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9015": {
      "op": "PUSH2",
      "value": "0x5D3"
    },
    "9018": {
      "op": "CALLDATASIZE"
    },
    "9019": {
      "op": "DUP4"
    },
    "9020": {
      "op": "PUSH2",
      "value": "0x2120"
    },
    "9023": {
      "jump": "i",
      "op": "JUMP"
    },
    "9024": {
      "op": "JUMPDEST"
    },
    "9025": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9030": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9032": {
      "op": "SHL"
    },
    "9033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9035": {
      "op": "MSTORE"
    },
    "9036": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "9038": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9040": {
      "op": "MSTORE"
    },
    "9041": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9045": {
      "op": "REVERT"
    },
    "9046": {
      "op": "JUMPDEST"
    },
    "9047": {
      "op": "DUP1"
    },
    "9048": {
      "op": "DUP3"
    },
    "9049": {
      "op": "MUL"
    },
    "9050": {
      "op": "DUP2"
    },
    "9051": {
      "op": "ISZERO"
    },
    "9052": {
      "op": "DUP3"
    },
    "9053": {
      "op": "DUP3"
    },
    "9054": {
      "op": "DIV"
    },
    "9055": {
      "op": "DUP5"
    },
    "9056": {
      "op": "EQ"
    },
    "9057": {
      "op": "OR"
    },
    "9058": {
      "op": "PUSH2",
      "value": "0x5D3"
    },
    "9061": {
      "op": "JUMPI"
    },
    "9062": {
      "op": "PUSH2",
      "value": "0x5D3"
    },
    "9065": {
      "op": "PUSH2",
      "value": "0x2340"
    },
    "9068": {
      "jump": "i",
      "op": "JUMP"
    },
    "9069": {
      "op": "JUMPDEST"
    },
    "9070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9072": {
      "op": "DUP3"
    },
    "9073": {
      "op": "PUSH2",
      "value": "0x238A"
    },
    "9076": {
      "op": "JUMPI"
    },
    "9077": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9082": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9084": {
      "op": "SHL"
    },
    "9085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9087": {
      "op": "MSTORE"
    },
    "9088": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "9090": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9092": {
      "op": "MSTORE"
    },
    "9093": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9097": {
      "op": "REVERT"
    },
    "9098": {
      "op": "JUMPDEST"
    },
    "9099": {
      "op": "POP"
    },
    "9100": {
      "op": "DIV"
    },
    "9101": {
      "op": "SWAP1"
    },
    "9102": {
      "jump": "o",
      "op": "JUMP"
    },
    "9103": {
      "op": "JUMPDEST"
    },
    "9104": {
      "op": "DUP1"
    },
    "9105": {
      "op": "DUP3"
    },
    "9106": {
      "op": "ADD"
    },
    "9107": {
      "op": "DUP1"
    },
    "9108": {
      "op": "DUP3"
    },
    "9109": {
      "op": "GT"
    },
    "9110": {
      "op": "ISZERO"
    },
    "9111": {
      "op": "PUSH2",
      "value": "0x5D3"
    },
    "9114": {
      "op": "JUMPI"
    },
    "9115": {
      "op": "PUSH2",
      "value": "0x5D3"
    },
    "9118": {
      "op": "PUSH2",
      "value": "0x2340"
    },
    "9121": {
      "jump": "i",
      "op": "JUMP"
    },
    "9122": {
      "op": "JUMPDEST"
    },
    "9123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9127": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9129": {
      "op": "SHL"
    },
    "9130": {
      "op": "SUB"
    },
    "9131": {
      "op": "DUP2"
    },
    "9132": {
      "op": "DUP2"
    },
    "9133": {
      "op": "AND"
    },
    "9134": {
      "op": "DUP4"
    },
    "9135": {
      "op": "DUP3"
    },
    "9136": {
      "op": "AND"
    },
    "9137": {
      "op": "ADD"
    },
    "9138": {
      "op": "SWAP1"
    },
    "9139": {
      "op": "DUP1"
    },
    "9140": {
      "op": "DUP3"
    },
    "9141": {
      "op": "GT"
    },
    "9142": {
      "op": "ISZERO"
    },
    "9143": {
      "op": "PUSH2",
      "value": "0x23C2"
    },
    "9146": {
      "op": "JUMPI"
    },
    "9147": {
      "op": "PUSH2",
      "value": "0x23C2"
    },
    "9150": {
      "op": "PUSH2",
      "value": "0x2340"
    },
    "9153": {
      "jump": "i",
      "op": "JUMP"
    },
    "9154": {
      "op": "JUMPDEST"
    },
    "9155": {
      "op": "POP"
    },
    "9156": {
      "op": "SWAP3"
    },
    "9157": {
      "op": "SWAP2"
    },
    "9158": {
      "op": "POP"
    },
    "9159": {
      "op": "POP"
    },
    "9160": {
      "jump": "o",
      "op": "JUMP"
    },
    "9161": {
      "op": "JUMPDEST"
    },
    "9162": {
      "op": "DUP1"
    },
    "9163": {
      "op": "MLOAD"
    },
    "9164": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9166": {
      "op": "DUP2"
    },
    "9167": {
      "op": "AND"
    },
    "9168": {
      "op": "DUP2"
    },
    "9169": {
      "op": "EQ"
    },
    "9170": {
      "op": "PUSH2",
      "value": "0x2000"
    },
    "9173": {
      "op": "JUMPI"
    },
    "9174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9176": {
      "op": "DUP1"
    },
    "9177": {
      "op": "REVERT"
    },
    "9178": {
      "op": "JUMPDEST"
    },
    "9179": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9181": {
      "op": "DUP1"
    },
    "9182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9184": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9186": {
      "op": "DUP5"
    },
    "9187": {
      "op": "DUP7"
    },
    "9188": {
      "op": "SUB"
    },
    "9189": {
      "op": "SLT"
    },
    "9190": {
      "op": "ISZERO"
    },
    "9191": {
      "op": "PUSH2",
      "value": "0x23EF"
    },
    "9194": {
      "op": "JUMPI"
    },
    "9195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9197": {
      "op": "DUP1"
    },
    "9198": {
      "op": "REVERT"
    },
    "9199": {
      "op": "JUMPDEST"
    },
    "9200": {
      "op": "PUSH2",
      "value": "0x23F8"
    },
    "9203": {
      "op": "DUP5"
    },
    "9204": {
      "op": "PUSH2",
      "value": "0x23C9"
    },
    "9207": {
      "jump": "i",
      "op": "JUMP"
    },
    "9208": {
      "op": "JUMPDEST"
    },
    "9209": {
      "op": "SWAP3"
    },
    "9210": {
      "op": "POP"
    },
    "9211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9213": {
      "op": "DUP5"
    },
    "9214": {
      "op": "ADD"
    },
    "9215": {
      "op": "MLOAD"
    },
    "9216": {
      "op": "SWAP2"
    },
    "9217": {
      "op": "POP"
    },
    "9218": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9220": {
      "op": "DUP5"
    },
    "9221": {
      "op": "ADD"
    },
    "9222": {
      "op": "MLOAD"
    },
    "9223": {
      "op": "PUSH2",
      "value": "0x240F"
    },
    "9226": {
      "op": "DUP2"
    },
    "9227": {
      "op": "PUSH2",
      "value": "0x1DD7"
    },
    "9230": {
      "jump": "i",
      "op": "JUMP"
    },
    "9231": {
      "op": "JUMPDEST"
    },
    "9232": {
      "op": "DUP1"
    },
    "9233": {
      "op": "SWAP2"
    },
    "9234": {
      "op": "POP"
    },
    "9235": {
      "op": "POP"
    },
    "9236": {
      "op": "SWAP3"
    },
    "9237": {
      "op": "POP"
    },
    "9238": {
      "op": "SWAP3"
    },
    "9239": {
      "op": "POP"
    },
    "9240": {
      "op": "SWAP3"
    },
    "9241": {
      "jump": "o",
      "op": "JUMP"
    },
    "9242": {
      "op": "JUMPDEST"
    },
    "9243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9245": {
      "op": "DUP1"
    },
    "9246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9248": {
      "op": "DUP1"
    },
    "9249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9251": {
      "op": "DUP1"
    },
    "9252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9254": {
      "op": "DUP1"
    },
    "9255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9257": {
      "op": "DUP1"
    },
    "9258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9260": {
      "op": "DUP1"
    },
    "9261": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "9264": {
      "op": "DUP14"
    },
    "9265": {
      "op": "DUP16"
    },
    "9266": {
      "op": "SUB"
    },
    "9267": {
      "op": "SLT"
    },
    "9268": {
      "op": "ISZERO"
    },
    "9269": {
      "op": "PUSH2",
      "value": "0x243D"
    },
    "9272": {
      "op": "JUMPI"
    },
    "9273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9275": {
      "op": "DUP1"
    },
    "9276": {
      "op": "REVERT"
    },
    "9277": {
      "op": "JUMPDEST"
    },
    "9278": {
      "op": "DUP13"
    },
    "9279": {
      "op": "MLOAD"
    },
    "9280": {
      "op": "SWAP12"
    },
    "9281": {
      "op": "POP"
    },
    "9282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9284": {
      "op": "DUP14"
    },
    "9285": {
      "op": "ADD"
    },
    "9286": {
      "op": "MLOAD"
    },
    "9287": {
      "op": "SWAP11"
    },
    "9288": {
      "op": "POP"
    },
    "9289": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9291": {
      "op": "DUP14"
    },
    "9292": {
      "op": "ADD"
    },
    "9293": {
      "op": "MLOAD"
    },
    "9294": {
      "op": "SWAP10"
    },
    "9295": {
      "op": "POP"
    },
    "9296": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9298": {
      "op": "DUP14"
    },
    "9299": {
      "op": "ADD"
    },
    "9300": {
      "op": "MLOAD"
    },
    "9301": {
      "op": "SWAP9"
    },
    "9302": {
      "op": "POP"
    },
    "9303": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9305": {
      "op": "DUP14"
    },
    "9306": {
      "op": "ADD"
    },
    "9307": {
      "op": "MLOAD"
    },
    "9308": {
      "op": "SWAP8"
    },
    "9309": {
      "op": "POP"
    },
    "9310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9312": {
      "op": "DUP14"
    },
    "9313": {
      "op": "ADD"
    },
    "9314": {
      "op": "MLOAD"
    },
    "9315": {
      "op": "SWAP7"
    },
    "9316": {
      "op": "POP"
    },
    "9317": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9319": {
      "op": "DUP14"
    },
    "9320": {
      "op": "ADD"
    },
    "9321": {
      "op": "MLOAD"
    },
    "9322": {
      "op": "SWAP6"
    },
    "9323": {
      "op": "POP"
    },
    "9324": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9326": {
      "op": "DUP14"
    },
    "9327": {
      "op": "ADD"
    },
    "9328": {
      "op": "MLOAD"
    },
    "9329": {
      "op": "SWAP5"
    },
    "9330": {
      "op": "POP"
    },
    "9331": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "9334": {
      "op": "DUP14"
    },
    "9335": {
      "op": "ADD"
    },
    "9336": {
      "op": "MLOAD"
    },
    "9337": {
      "op": "SWAP4"
    },
    "9338": {
      "op": "POP"
    },
    "9339": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "9342": {
      "op": "DUP14"
    },
    "9343": {
      "op": "ADD"
    },
    "9344": {
      "op": "MLOAD"
    },
    "9345": {
      "op": "SWAP3"
    },
    "9346": {
      "op": "POP"
    },
    "9347": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "9350": {
      "op": "DUP14"
    },
    "9351": {
      "op": "ADD"
    },
    "9352": {
      "op": "MLOAD"
    },
    "9353": {
      "op": "SWAP2"
    },
    "9354": {
      "op": "POP"
    },
    "9355": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "9358": {
      "op": "DUP14"
    },
    "9359": {
      "op": "ADD"
    },
    "9360": {
      "op": "MLOAD"
    },
    "9361": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "9367": {
      "op": "DUP2"
    },
    "9368": {
      "op": "AND"
    },
    "9369": {
      "op": "DUP2"
    },
    "9370": {
      "op": "EQ"
    },
    "9371": {
      "op": "PUSH2",
      "value": "0x24A3"
    },
    "9374": {
      "op": "JUMPI"
    },
    "9375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9377": {
      "op": "DUP1"
    },
    "9378": {
      "op": "REVERT"
    },
    "9379": {
      "op": "JUMPDEST"
    },
    "9380": {
      "op": "DUP1"
    },
    "9381": {
      "op": "SWAP2"
    },
    "9382": {
      "op": "POP"
    },
    "9383": {
      "op": "POP"
    },
    "9384": {
      "op": "SWAP3"
    },
    "9385": {
      "op": "SWAP6"
    },
    "9386": {
      "op": "SWAP9"
    },
    "9387": {
      "op": "SWAP12"
    },
    "9388": {
      "op": "POP"
    },
    "9389": {
      "op": "SWAP3"
    },
    "9390": {
      "op": "SWAP6"
    },
    "9391": {
      "op": "SWAP9"
    },
    "9392": {
      "op": "SWAP12"
    },
    "9393": {
      "op": "POP"
    },
    "9394": {
      "op": "SWAP3"
    },
    "9395": {
      "op": "SWAP6"
    },
    "9396": {
      "op": "SWAP9"
    },
    "9397": {
      "op": "SWAP12"
    },
    "9398": {
      "jump": "o",
      "op": "JUMP"
    },
    "9399": {
      "op": "JUMPDEST"
    },
    "9400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9402": {
      "op": "DUP1"
    },
    "9403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9405": {
      "op": "DUP1"
    },
    "9406": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9408": {
      "op": "DUP6"
    },
    "9409": {
      "op": "DUP8"
    },
    "9410": {
      "op": "SUB"
    },
    "9411": {
      "op": "SLT"
    },
    "9412": {
      "op": "ISZERO"
    },
    "9413": {
      "op": "PUSH2",
      "value": "0x24CD"
    },
    "9416": {
      "op": "JUMPI"
    },
    "9417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9419": {
      "op": "DUP1"
    },
    "9420": {
      "op": "REVERT"
    },
    "9421": {
      "op": "JUMPDEST"
    },
    "9422": {
      "op": "PUSH2",
      "value": "0x24D6"
    },
    "9425": {
      "op": "DUP6"
    },
    "9426": {
      "op": "PUSH2",
      "value": "0x23C9"
    },
    "9429": {
      "jump": "i",
      "op": "JUMP"
    },
    "9430": {
      "op": "JUMPDEST"
    },
    "9431": {
      "op": "SWAP4"
    },
    "9432": {
      "op": "POP"
    },
    "9433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9435": {
      "op": "DUP6"
    },
    "9436": {
      "op": "ADD"
    },
    "9437": {
      "op": "MLOAD"
    },
    "9438": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "9443": {
      "op": "DUP2"
    },
    "9444": {
      "op": "AND"
    },
    "9445": {
      "op": "DUP2"
    },
    "9446": {
      "op": "EQ"
    },
    "9447": {
      "op": "PUSH2",
      "value": "0x24EF"
    },
    "9450": {
      "op": "JUMPI"
    },
    "9451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9453": {
      "op": "DUP1"
    },
    "9454": {
      "op": "REVERT"
    },
    "9455": {
      "op": "JUMPDEST"
    },
    "9456": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9458": {
      "op": "DUP7"
    },
    "9459": {
      "op": "ADD"
    },
    "9460": {
      "op": "MLOAD"
    },
    "9461": {
      "op": "SWAP1"
    },
    "9462": {
      "op": "SWAP4"
    },
    "9463": {
      "op": "POP"
    },
    "9464": {
      "op": "PUSH2",
      "value": "0x2500"
    },
    "9467": {
      "op": "DUP2"
    },
    "9468": {
      "op": "PUSH2",
      "value": "0x1FE0"
    },
    "9471": {
      "jump": "i",
      "op": "JUMP"
    },
    "9472": {
      "op": "JUMPDEST"
    },
    "9473": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9475": {
      "op": "SWAP6"
    },
    "9476": {
      "op": "SWAP1"
    },
    "9477": {
      "op": "SWAP6"
    },
    "9478": {
      "op": "ADD"
    },
    "9479": {
      "op": "MLOAD"
    },
    "9480": {
      "op": "SWAP4"
    },
    "9481": {
      "op": "SWAP7"
    },
    "9482": {
      "op": "SWAP3"
    },
    "9483": {
      "op": "SWAP6"
    },
    "9484": {
      "op": "POP"
    },
    "9485": {
      "op": "POP"
    },
    "9486": {
      "op": "POP"
    },
    "9487": {
      "jump": "o",
      "op": "JUMP"
    },
    "9488": {
      "op": "JUMPDEST"
    },
    "9489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9493": {
      "op": "DUP3"
    },
    "9494": {
      "op": "DUP5"
    },
    "9495": {
      "op": "SUB"
    },
    "9496": {
      "op": "SLT"
    },
    "9497": {
      "op": "ISZERO"
    },
    "9498": {
      "op": "PUSH2",
      "value": "0x2522"
    },
    "9501": {
      "op": "JUMPI"
    },
    "9502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9504": {
      "op": "DUP1"
    },
    "9505": {
      "op": "REVERT"
    },
    "9506": {
      "op": "JUMPDEST"
    },
    "9507": {
      "op": "DUP2"
    },
    "9508": {
      "op": "MLOAD"
    },
    "9509": {
      "op": "PUSH2",
      "value": "0x1DA6"
    },
    "9512": {
      "op": "DUP2"
    },
    "9513": {
      "op": "PUSH2",
      "value": "0x1FE0"
    },
    "9516": {
      "jump": "i",
      "op": "JUMP"
    },
    "9517": {
      "op": "JUMPDEST"
    },
    "9518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9520": {
      "op": "DUP1"
    },
    "9521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9523": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9525": {
      "op": "DUP5"
    },
    "9526": {
      "op": "DUP7"
    },
    "9527": {
      "op": "SUB"
    },
    "9528": {
      "op": "SLT"
    },
    "9529": {
      "op": "ISZERO"
    },
    "9530": {
      "op": "PUSH2",
      "value": "0x2542"
    },
    "9533": {
      "op": "JUMPI"
    },
    "9534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9536": {
      "op": "DUP1"
    },
    "9537": {
      "op": "REVERT"
    },
    "9538": {
      "op": "JUMPDEST"
    },
    "9539": {
      "op": "PUSH2",
      "value": "0x254B"
    },
    "9542": {
      "op": "DUP5"
    },
    "9543": {
      "op": "PUSH2",
      "value": "0x23C9"
    },
    "9546": {
      "jump": "i",
      "op": "JUMP"
    },
    "9547": {
      "op": "JUMPDEST"
    },
    "9548": {
      "op": "SWAP3"
    },
    "9549": {
      "op": "POP"
    },
    "9550": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9552": {
      "op": "DUP5"
    },
    "9553": {
      "op": "ADD"
    },
    "9554": {
      "op": "MLOAD"
    },
    "9555": {
      "op": "PUSH2",
      "value": "0x255B"
    },
    "9558": {
      "op": "DUP2"
    },
    "9559": {
      "op": "PUSH2",
      "value": "0x1E09"
    },
    "9562": {
      "jump": "i",
      "op": "JUMP"
    },
    "9563": {
      "op": "JUMPDEST"
    },
    "9564": {
      "op": "DUP1"
    },
    "9565": {
      "op": "SWAP3"
    },
    "9566": {
      "op": "POP"
    },
    "9567": {
      "op": "POP"
    },
    "9568": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9570": {
      "op": "DUP5"
    },
    "9571": {
      "op": "ADD"
    },
    "9572": {
      "op": "MLOAD"
    },
    "9573": {
      "op": "SWAP1"
    },
    "9574": {
      "op": "POP"
    },
    "9575": {
      "op": "SWAP3"
    },
    "9576": {
      "op": "POP"
    },
    "9577": {
      "op": "SWAP3"
    },
    "9578": {
      "op": "POP"
    },
    "9579": {
      "op": "SWAP3"
    },
    "9580": {
      "jump": "o",
      "op": "JUMP"
    },
    "9581": {
      "op": "JUMPDEST"
    },
    "9582": {
      "op": "DUP2"
    },
    "9583": {
      "op": "DUP2"
    },
    "9584": {
      "op": "SUB"
    },
    "9585": {
      "op": "DUP2"
    },
    "9586": {
      "op": "DUP2"
    },
    "9587": {
      "op": "GT"
    },
    "9588": {
      "op": "ISZERO"
    },
    "9589": {
      "op": "PUSH2",
      "value": "0x5D3"
    },
    "9592": {
      "op": "JUMPI"
    },
    "9593": {
      "op": "PUSH2",
      "value": "0x5D3"
    },
    "9596": {
      "op": "PUSH2",
      "value": "0x2340"
    },
    "9599": {
      "jump": "i",
      "op": "JUMP"
    },
    "9600": {
      "op": "JUMPDEST"
    },
    "9601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9605": {
      "op": "DUP3"
    },
    "9606": {
      "op": "DUP5"
    },
    "9607": {
      "op": "SUB"
    },
    "9608": {
      "op": "SLT"
    },
    "9609": {
      "op": "ISZERO"
    },
    "9610": {
      "op": "PUSH2",
      "value": "0x2592"
    },
    "9613": {
      "op": "JUMPI"
    },
    "9614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9616": {
      "op": "DUP1"
    },
    "9617": {
      "op": "REVERT"
    },
    "9618": {
      "op": "JUMPDEST"
    },
    "9619": {
      "op": "DUP2"
    },
    "9620": {
      "op": "MLOAD"
    },
    "9621": {
      "op": "PUSH2",
      "value": "0x1DA6"
    },
    "9624": {
      "op": "DUP2"
    },
    "9625": {
      "op": "PUSH2",
      "value": "0x1E09"
    },
    "9628": {
      "jump": "i",
      "op": "JUMP"
    },
    "9629": {
      "op": "JUMPDEST"
    },
    "9630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9632": {
      "op": "DUP2"
    },
    "9633": {
      "op": "MLOAD"
    },
    "9634": {
      "op": "DUP1"
    },
    "9635": {
      "op": "DUP5"
    },
    "9636": {
      "op": "MSTORE"
    },
    "9637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9639": {
      "op": "JUMPDEST"
    },
    "9640": {
      "op": "DUP2"
    },
    "9641": {
      "op": "DUP2"
    },
    "9642": {
      "op": "LT"
    },
    "9643": {
      "op": "ISZERO"
    },
    "9644": {
      "op": "PUSH2",
      "value": "0x25C3"
    },
    "9647": {
      "op": "JUMPI"
    },
    "9648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9650": {
      "op": "DUP2"
    },
    "9651": {
      "op": "DUP6"
    },
    "9652": {
      "op": "ADD"
    },
    "9653": {
      "op": "DUP2"
    },
    "9654": {
      "op": "ADD"
    },
    "9655": {
      "op": "MLOAD"
    },
    "9656": {
      "op": "DUP7"
    },
    "9657": {
      "op": "DUP4"
    },
    "9658": {
      "op": "ADD"
    },
    "9659": {
      "op": "DUP3"
    },
    "9660": {
      "op": "ADD"
    },
    "9661": {
      "op": "MSTORE"
    },
    "9662": {
      "op": "ADD"
    },
    "9663": {
      "op": "PUSH2",
      "value": "0x25A7"
    },
    "9666": {
      "op": "JUMP"
    },
    "9667": {
      "op": "JUMPDEST"
    },
    "9668": {
      "op": "POP"
    },
    "9669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9673": {
      "op": "DUP3"
    },
    "9674": {
      "op": "DUP7"
    },
    "9675": {
      "op": "ADD"
    },
    "9676": {
      "op": "ADD"
    },
    "9677": {
      "op": "MSTORE"
    },
    "9678": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9680": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9682": {
      "op": "NOT"
    },
    "9683": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9685": {
      "op": "DUP4"
    },
    "9686": {
      "op": "ADD"
    },
    "9687": {
      "op": "AND"
    },
    "9688": {
      "op": "DUP6"
    },
    "9689": {
      "op": "ADD"
    },
    "9690": {
      "op": "ADD"
    },
    "9691": {
      "op": "SWAP2"
    },
    "9692": {
      "op": "POP"
    },
    "9693": {
      "op": "POP"
    },
    "9694": {
      "op": "SWAP3"
    },
    "9695": {
      "op": "SWAP2"
    },
    "9696": {
      "op": "POP"
    },
    "9697": {
      "op": "POP"
    },
    "9698": {
      "jump": "o",
      "op": "JUMP"
    },
    "9699": {
      "op": "JUMPDEST"
    },
    "9700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9702": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9708": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9710": {
      "op": "SHL"
    },
    "9711": {
      "op": "SUB"
    },
    "9712": {
      "op": "DUP6"
    },
    "9713": {
      "op": "AND"
    },
    "9714": {
      "op": "DUP4"
    },
    "9715": {
      "op": "MSTORE"
    },
    "9716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9718": {
      "op": "DUP2"
    },
    "9719": {
      "op": "DUP2"
    },
    "9720": {
      "op": "DUP6"
    },
    "9721": {
      "op": "ADD"
    },
    "9722": {
      "op": "MSTORE"
    },
    "9723": {
      "op": "DUP5"
    },
    "9724": {
      "op": "MLOAD"
    },
    "9725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9727": {
      "op": "DUP4"
    },
    "9728": {
      "op": "DUP7"
    },
    "9729": {
      "op": "ADD"
    },
    "9730": {
      "op": "MSTORE"
    },
    "9731": {
      "op": "PUSH2",
      "value": "0x260F"
    },
    "9734": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9736": {
      "op": "DUP7"
    },
    "9737": {
      "op": "ADD"
    },
    "9738": {
      "op": "DUP3"
    },
    "9739": {
      "op": "PUSH2",
      "value": "0x259D"
    },
    "9742": {
      "jump": "i",
      "op": "JUMP"
    },
    "9743": {
      "op": "JUMPDEST"
    },
    "9744": {
      "op": "SWAP1"
    },
    "9745": {
      "op": "POP"
    },
    "9746": {
      "op": "DUP2"
    },
    "9747": {
      "op": "DUP7"
    },
    "9748": {
      "op": "ADD"
    },
    "9749": {
      "op": "MLOAD"
    },
    "9750": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "9752": {
      "op": "NOT"
    },
    "9753": {
      "op": "DUP1"
    },
    "9754": {
      "op": "DUP8"
    },
    "9755": {
      "op": "DUP5"
    },
    "9756": {
      "op": "SUB"
    },
    "9757": {
      "op": "ADD"
    },
    "9758": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9760": {
      "op": "DUP9"
    },
    "9761": {
      "op": "ADD"
    },
    "9762": {
      "op": "MSTORE"
    },
    "9763": {
      "op": "PUSH2",
      "value": "0x262C"
    },
    "9766": {
      "op": "DUP4"
    },
    "9767": {
      "op": "DUP4"
    },
    "9768": {
      "op": "PUSH2",
      "value": "0x259D"
    },
    "9771": {
      "jump": "i",
      "op": "JUMP"
    },
    "9772": {
      "op": "JUMPDEST"
    },
    "9773": {
      "op": "DUP9"
    },
    "9774": {
      "op": "DUP7"
    },
    "9775": {
      "op": "ADD"
    },
    "9776": {
      "op": "MLOAD"
    },
    "9777": {
      "op": "DUP9"
    },
    "9778": {
      "op": "DUP3"
    },
    "9779": {
      "op": "SUB"
    },
    "9780": {
      "op": "DUP4"
    },
    "9781": {
      "op": "ADD"
    },
    "9782": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9784": {
      "op": "DUP11"
    },
    "9785": {
      "op": "ADD"
    },
    "9786": {
      "op": "MSTORE"
    },
    "9787": {
      "op": "DUP1"
    },
    "9788": {
      "op": "MLOAD"
    },
    "9789": {
      "op": "DUP1"
    },
    "9790": {
      "op": "DUP4"
    },
    "9791": {
      "op": "MSTORE"
    },
    "9792": {
      "op": "SWAP1"
    },
    "9793": {
      "op": "DUP7"
    },
    "9794": {
      "op": "ADD"
    },
    "9795": {
      "op": "SWAP5"
    },
    "9796": {
      "op": "POP"
    },
    "9797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9799": {
      "op": "SWAP4"
    },
    "9800": {
      "op": "POP"
    },
    "9801": {
      "op": "SWAP1"
    },
    "9802": {
      "op": "DUP6"
    },
    "9803": {
      "op": "ADD"
    },
    "9804": {
      "op": "SWAP1"
    },
    "9805": {
      "op": "JUMPDEST"
    },
    "9806": {
      "op": "DUP1"
    },
    "9807": {
      "op": "DUP5"
    },
    "9808": {
      "op": "LT"
    },
    "9809": {
      "op": "ISZERO"
    },
    "9810": {
      "op": "PUSH2",
      "value": "0x267F"
    },
    "9813": {
      "op": "JUMPI"
    },
    "9814": {
      "op": "DUP5"
    },
    "9815": {
      "op": "MLOAD"
    },
    "9816": {
      "op": "DUP1"
    },
    "9817": {
      "op": "MLOAD"
    },
    "9818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9822": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9824": {
      "op": "SHL"
    },
    "9825": {
      "op": "SUB"
    },
    "9826": {
      "op": "AND"
    },
    "9827": {
      "op": "DUP4"
    },
    "9828": {
      "op": "MSTORE"
    },
    "9829": {
      "op": "DUP7"
    },
    "9830": {
      "op": "ADD"
    },
    "9831": {
      "op": "MLOAD"
    },
    "9832": {
      "op": "DUP7"
    },
    "9833": {
      "op": "DUP4"
    },
    "9834": {
      "op": "ADD"
    },
    "9835": {
      "op": "MSTORE"
    },
    "9836": {
      "op": "SWAP4"
    },
    "9837": {
      "op": "DUP6"
    },
    "9838": {
      "op": "ADD"
    },
    "9839": {
      "op": "SWAP4"
    },
    "9840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9842": {
      "op": "SWAP4"
    },
    "9843": {
      "op": "SWAP1"
    },
    "9844": {
      "op": "SWAP4"
    },
    "9845": {
      "op": "ADD"
    },
    "9846": {
      "op": "SWAP3"
    },
    "9847": {
      "op": "SWAP1"
    },
    "9848": {
      "op": "DUP7"
    },
    "9849": {
      "op": "ADD"
    },
    "9850": {
      "op": "SWAP1"
    },
    "9851": {
      "op": "PUSH2",
      "value": "0x264D"
    },
    "9854": {
      "op": "JUMP"
    },
    "9855": {
      "op": "JUMPDEST"
    },
    "9856": {
      "op": "POP"
    },
    "9857": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9859": {
      "op": "DUP10"
    },
    "9860": {
      "op": "ADD"
    },
    "9861": {
      "op": "MLOAD"
    },
    "9862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9868": {
      "op": "SHL"
    },
    "9869": {
      "op": "SUB"
    },
    "9870": {
      "op": "AND"
    },
    "9871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9873": {
      "op": "DUP10"
    },
    "9874": {
      "op": "ADD"
    },
    "9875": {
      "op": "MSTORE"
    },
    "9876": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9878": {
      "op": "DUP10"
    },
    "9879": {
      "op": "ADD"
    },
    "9880": {
      "op": "MLOAD"
    },
    "9881": {
      "op": "DUP9"
    },
    "9882": {
      "op": "DUP3"
    },
    "9883": {
      "op": "SUB"
    },
    "9884": {
      "op": "DUP4"
    },
    "9885": {
      "op": "ADD"
    },
    "9886": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9888": {
      "op": "DUP11"
    },
    "9889": {
      "op": "ADD"
    },
    "9890": {
      "op": "MSTORE"
    },
    "9891": {
      "op": "SWAP6"
    },
    "9892": {
      "op": "POP"
    },
    "9893": {
      "op": "PUSH2",
      "value": "0x26AE"
    },
    "9896": {
      "op": "DUP2"
    },
    "9897": {
      "op": "DUP8"
    },
    "9898": {
      "op": "PUSH2",
      "value": "0x259D"
    },
    "9901": {
      "jump": "i",
      "op": "JUMP"
    },
    "9902": {
      "op": "JUMPDEST"
    },
    "9903": {
      "op": "SWAP11"
    },
    "9904": {
      "op": "SWAP10"
    },
    "9905": {
      "op": "POP"
    },
    "9906": {
      "op": "POP"
    },
    "9907": {
      "op": "POP"
    },
    "9908": {
      "op": "POP"
    },
    "9909": {
      "op": "POP"
    },
    "9910": {
      "op": "POP"
    },
    "9911": {
      "op": "POP"
    },
    "9912": {
      "op": "POP"
    },
    "9913": {
      "op": "POP"
    },
    "9914": {
      "op": "POP"
    },
    "9915": {
      "jump": "o",
      "op": "JUMP"
    },
    "9916": {
      "op": "JUMPDEST"
    },
    "9917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9919": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9921": {
      "op": "DUP3"
    },
    "9922": {
      "op": "DUP5"
    },
    "9923": {
      "op": "SUB"
    },
    "9924": {
      "op": "SLT"
    },
    "9925": {
      "op": "ISZERO"
    },
    "9926": {
      "op": "PUSH2",
      "value": "0x26CE"
    },
    "9929": {
      "op": "JUMPI"
    },
    "9930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9932": {
      "op": "DUP1"
    },
    "9933": {
      "op": "REVERT"
    },
    "9934": {
      "op": "JUMPDEST"
    },
    "9935": {
      "op": "PUSH2",
      "value": "0x1DA6"
    },
    "9938": {
      "op": "DUP3"
    },
    "9939": {
      "op": "PUSH2",
      "value": "0x23C9"
    },
    "9942": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "b4c92b1f04050e46f332a2955307932b33e55de0",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\nimport {Client} from \"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol\";\nimport {CCIPReceiver} from \"@chainlink/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol\";\nimport {IRouterClient} from \"@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol\";\nimport {OwnerIsCreator} from \"@chainlink/contracts/src/v0.8/shared/access/OwnerIsCreator.sol\";\n\nimport {LinkTokenInterface} from \"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"../interfaces/ITokenMessenger.sol\";\nimport \"../interfaces/IMessageTransmitter.sol\";\nimport \"../interfaces/IPool.sol\";\nimport \"../interfaces/IPoolDataProvider.sol\";\n\ncontract Slave is CCIPReceiver {\n    // Event emitted when a message is received from another chain.\n    event MessageReceived(\n        bytes32 indexed messageId, // The unique ID of the message.\n        uint64 indexed sourceChainSelector // The chain selector of the source chain.\n    );\n    error NotEnoughBalance(uint256 currentBalance, uint256 calculatedFees); // Used to make sure contract has enough balance.\n\n    // Event emitted when a message is sent to another chain.\n    event MessageSent(\n        bytes32 indexed messageId, // The unique ID of the CCIP message.\n        uint64 indexed destinationChainSelector, // The chain selector of the destination chain.\n        address receiver, // The address of the receiver on the destination chain.\n        address feeToken, // the token address used to pay CCIP fees.\n        uint256 fees // The fees paid for sending the CCIP message.\n    );\n\n    uint64 public constant MASTER_CHAIN = 16015286601757825753; // harcoded sepolia id_cain CCIP\n    address public immutable MASTER_CONTRACT;\n    address public immutable POOL_ADDRESS_PROVIDER_ADDRESS;\n    address public immutable POOL_DATA_PROVIDER_ADDRESS;\n\n    IRouterClient private s_router;\n\n    LinkTokenInterface private s_linkToken;\n\n    address public tokenUSDC;\n    address public tokenAUSDC;\n    address public circleTokenMessengerAddress;\n    address public circleMessageTansmiterAddress;\n\n    struct WarpIdToDestinationChain {\n        uint32 circleChainId;\n        bytes32 destinationAddress;\n    }\n\n    mapping(bytes32 => WarpIdToDestinationChain)\n        public warpIdToDestinationChain;\n    bytes32[] public warpIds;\n\n    bool public isNodeActive = false;\n\n    uint256 public aUsdcTokenSupply;\n\n    ////////////////////TESTER ////////////////////////\n\n    uint256 public aWrpTotalSupplySlaveView;\n    uint128 public mainNonceDeposits;\n\n    struct NonceDataDeposits {\n        address userAddress;\n        uint256 shares;\n    }\n\n    mapping(uint128 => NonceDataDeposits) public nonceDataDeposits;\n    mapping(address => uint128[]) public userNoncesDeposits;\n\n    mapping(uint128 => address) public userNoncesWithdraw;\n\n    bool public newNonceAndSupply = true;\n\n    bool public testerSuccess;\n    uint256 public testerBalanceUsdc;\n\n    ////////////////////////// CONSTRUCTOR ///////////////////////////\n\n    /// @notice Constructor initializes the contract with the router address.\n    /// @param _router The address of the router contract (CCIP chainlink router).\n    /// @param _link The address of the LINK token contract.\n    /// @param _tokenUSDC The address of the Circle USDC token contract.\n    /// @param _tokenAUSDC The address of the ausdc provided by aave when deposit is done.\n    /// @param _circleTokenMessengerAddress The address of the Circle token messenger contract.\n    /// @param _POOL_ADDRESS_PROVIDER_ADDRESS The address of the Pool address provider contract (aave).\n    /// @param _POOL_DATA_PROVIDER_ADDRESS The address of the Pool data provider contract (aave).\n    /// @param _MASTER_CONTRACT The address of the master contract.\n\n    constructor(\n        address _router,\n        address _link,\n        address _tokenUSDC,\n        address _tokenAUSDC,\n        address _circleTokenMessengerAddress,\n        address _circleMessageTansmiterAddress,\n        address _POOL_ADDRESS_PROVIDER_ADDRESS,\n        address _POOL_DATA_PROVIDER_ADDRESS,\n        address _MASTER_CONTRACT\n    ) CCIPReceiver(_router) {\n        s_router = IRouterClient(_router);\n        s_linkToken = LinkTokenInterface(_link);\n\n        tokenUSDC = _tokenUSDC;\n        tokenAUSDC = _tokenAUSDC;\n        circleTokenMessengerAddress = _circleTokenMessengerAddress;\n        circleMessageTansmiterAddress = _circleMessageTansmiterAddress;\n        POOL_ADDRESS_PROVIDER_ADDRESS = _POOL_ADDRESS_PROVIDER_ADDRESS;\n        MASTER_CONTRACT = _MASTER_CONTRACT;\n        POOL_DATA_PROVIDER_ADDRESS = _POOL_DATA_PROVIDER_ADDRESS;\n    }\n\n    function getUserNonces(\n        address userAddress\n    ) public view returns (uint128[] memory) {\n        return userNoncesDeposits[userAddress];\n    }\n\n    function _internalCommandRouter(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    ) internal returns (uint8) {\n        uint8 command = abi.decode(_any2EvmMessage.data, (uint8));\n\n        return command;\n    }\n\n    function warpAssets(Client.Any2EVMMessage memory _any2EvmMessage) public {\n        // halt deposits????\n        isNodeActive = false;\n        (\n            ,\n            uint32 newNodeChainId,\n            uint64 newNodeChainIdCCIP,\n            bytes32 newNodeReceiver\n        ) = abi.decode(_any2EvmMessage.data, (uint8, uint32, uint64, bytes32));\n\n        uint256 balanceAusdcNode = IERC20(tokenAUSDC).balanceOf(address(this));\n        address pool = _getPool();\n\n        IERC20(tokenAUSDC).approve(pool, balanceAusdcNode);\n\n        uint256 usdcwithdrawn = _assetsAllocationWithdraw();\n\n        testerBalanceUsdc = usdcwithdrawn;\n\n        IERC20(tokenUSDC).approve(circleTokenMessengerAddress, usdcwithdrawn);\n\n        ITokenMessenger(circleTokenMessengerAddress).depositForBurn(\n            usdcwithdrawn,\n            newNodeChainId,\n            newNodeReceiver,\n            tokenUSDC\n        );\n\n        _sendSupplyAndNonce(\n            newNodeChainIdCCIP,\n            address(uint160(uint256(newNodeReceiver)))\n        );\n    }\n\n    function _sendSupplyAndNonce(\n        uint64 chainCCIPid,\n        address nodeAddressReceiver\n    ) internal {\n        uint8 command = 2;\n        bytes memory data = abi.encode(\n            command,\n            aWrpTotalSupplySlaveView,\n            mainNonceDeposits\n        );\n\n        _sendMessage(chainCCIPid, nodeAddressReceiver, data);\n    }\n\n    function setTotalSupplyAndNonce(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    ) public {\n        //resume Deposits:\n        isNodeActive = true;\n\n        (, uint256 _aWrpTotalSupplySlaveView, uint128 _mainNonceDeposits) = abi\n            .decode(_any2EvmMessage.data, (uint8, uint256, uint128));\n\n        aWrpTotalSupplySlaveView = _aWrpTotalSupplySlaveView;\n        mainNonceDeposits = _mainNonceDeposits;\n        newNonceAndSupply = true;\n    }\n\n    function withdraw(Client.Any2EVMMessage memory _any2EvmMessage) public {\n        (, address transferToUser, uint256 shares) = abi.decode(\n            _any2EvmMessage.data,\n            (uint8, address, uint256)\n        );\n\n        address pool = _getPool();\n        uint256 totalAusdc = IERC20(tokenAUSDC).balanceOf(address(this));\n\n        /// TESTING ///\n        uint256 amount = ((shares * 10 ** 18) * totalAusdc) /\n            aWrpTotalSupplySlaveView;\n\n        aWrpTotalSupplySlaveView -= shares;\n\n        IERC20(tokenAUSDC).approve(pool, amount / 10 ** 18);\n        IPool(pool).withdraw(tokenUSDC, amount / 10 ** 18, transferToUser);\n    }\n\n    //FRONTEND UTIL NO CONTRACT USE\n    function calculateSharesValue(\n        uint256 shares\n    ) external view returns (uint256) {\n        uint256 totalAusdc = IERC20(tokenAUSDC).balanceOf(address(this));\n        uint256 amount = ((shares * 10 ** 18) * totalAusdc) /\n            aWrpTotalSupplySlaveView;\n\n        return amount / 10 ** 18;\n    }\n\n    /// handle a received message\n    function _ccipReceive(\n        Client.Any2EVMMessage memory any2EvmMessage\n    ) internal override {\n        /* require(\n            abi.decode(any2EvmMessage.sender, (address)) == MASTER_CONTRACT,\n            \"MASTER CONTRACT ONLY\"\n        );\n        require(\n            any2EvmMessage.sourceChainSelector == MASTER_CHAIN,\n            \"MASTER CHAIN ONLY\"\n        ); */\n\n        uint8 command = _internalCommandRouter(any2EvmMessage);\n\n        if (command == 0) {\n            warpAssets(any2EvmMessage);\n        } else if (command == 1) {\n            withdraw(any2EvmMessage);\n        } else if (command == 2) {\n            setTotalSupplyAndNonce(any2EvmMessage);\n        } else {\n            revert(\"invalid command from Master\");\n        }\n\n        /* emit MessageReceived(\n            any2EvmMessage.messageId,\n            any2EvmMessage.sourceChainSelector // fetch the source chain identifier (aka selector)\n        ); */\n    }\n\n    function _sendMessage(\n        uint64 destinationChainSelector,\n        address receiver,\n        bytes memory _data\n    ) internal returns (bytes32 messageId) {\n        Client.EVM2AnyMessage memory evm2AnyMessage;\n\n        // Create an EVM2AnyMessage struct in memory with necessary information for sending a cross-chain message\n        evm2AnyMessage = Client.EVM2AnyMessage({\n            receiver: abi.encode(receiver), // ABI-encoded receiver address\n            data: _data, // ABI-encoded string\n            tokenAmounts: new Client.EVMTokenAmount[](0), // Empty array indicating no tokens are being sent\n            extraArgs: Client._argsToBytes(\n                // Additional arguments, setting gas limit\n                Client.EVMExtraArgsV1({gasLimit: 1_000_000})\n            ),\n            // Set the feeToken  address, indicating LINK will be used for fees\n            feeToken: address(s_linkToken)\n        });\n\n        // Get the fee required to send the message\n        uint256 fees = s_router.getFee(\n            destinationChainSelector,\n            evm2AnyMessage\n        );\n\n        if (fees > s_linkToken.balanceOf(address(this)))\n            revert NotEnoughBalance(s_linkToken.balanceOf(address(this)), fees);\n\n        // approve the Router to transfer LINK tokens on contract's behalf. It will spend the fees in LINK\n        s_linkToken.approve(address(s_router), fees);\n\n        // Send the message through the router and store the returned message ID\n        messageId = s_router.ccipSend(destinationChainSelector, evm2AnyMessage);\n\n        // Emit an event with message details\n        emit MessageSent(\n            messageId,\n            destinationChainSelector,\n            receiver,\n            address(s_linkToken),\n            fees\n        );\n\n        // Return the message ID\n        return messageId;\n    }\n\n    function _getPool() internal view returns (address) {\n        address pool = IPoolAddressesProvider(POOL_ADDRESS_PROVIDER_ADDRESS)\n            .getPool();\n\n        return pool;\n    }\n    // Add referal code as parameter in case in the future activates again\n\n    function deposit(uint256 amount) external {\n        require(\n            IERC20(tokenUSDC).transferFrom(msg.sender, address(this), amount),\n            \"Failed to transfer amount\"\n        );\n        require(isNodeActive, \"Node is not active\");\n\n        uint256 totalAusdcNode = IERC20(tokenAUSDC).balanceOf(address(this));\n\n        uint256 shares;\n        if (aWrpTotalSupplySlaveView == 0) {\n            shares = amount * 10 ** 12;\n        } else {\n            shares = (amount * aWrpTotalSupplySlaveView) / totalAusdcNode;\n        }\n        bytes memory data = abi.encode(\n            uint8(0),\n            msg.sender,\n            mainNonceDeposits,\n            shares\n        );\n\n        nonceDataDeposits[mainNonceDeposits].userAddress = msg.sender;\n        nonceDataDeposits[mainNonceDeposits].shares = shares;\n        userNoncesDeposits[msg.sender].push(mainNonceDeposits);\n\n        aWrpTotalSupplySlaveView += shares;\n        mainNonceDeposits += 1;\n        address pool = _getPool();\n        IERC20(tokenUSDC).approve(pool, amount);\n        IPool(pool).deposit(tokenUSDC, amount, address(this), 0);\n\n        _sendMessage(MASTER_CHAIN, MASTER_CONTRACT, data);\n    }\n\n    function sendDepositByNonce(uint128 _nonce) public {\n        require(\n            nonceDataDeposits[_nonce].userAddress == msg.sender,\n            \"Address not match with nonce data\"\n        );\n\n        bytes memory data = abi.encode(\n            uint8(0),\n            msg.sender,\n            _nonce,\n            nonceDataDeposits[_nonce].shares\n        );\n\n        _sendMessage(MASTER_CHAIN, MASTER_CONTRACT, data);\n    }\n\n    function sendAaveData() public {\n        (\n            ,\n            ,\n            uint256 totalUsdcSupply,\n            ,\n            uint256 totalUsdcBorrow,\n            uint256 supplyRate,\n            ,\n            ,\n            ,\n            ,\n            ,\n\n        ) = IPoolDataProvider(POOL_DATA_PROVIDER_ADDRESS).getReserveData(\n                tokenUSDC\n            );\n\n        bytes memory data = abi.encode(\n            uint8(1),\n            totalUsdcSupply,\n            totalUsdcBorrow,\n            supplyRate\n        );\n\n        _sendMessage(MASTER_CHAIN, MASTER_CONTRACT, data);\n    }\n    function claimAssetsFromBridge(\n        bytes calldata message,\n        bytes calldata attestation\n    ) public {\n        require(\n            IMessageTransmitter(circleMessageTansmiterAddress).receiveMessage(\n                message,\n                attestation\n            ),\n            \"failed from circle bridge IMessageTransmitter returned false\"\n        );\n        _assetsAllocationDeposit();\n    }\n\n    function _assetsAllocationDeposit() internal {\n        uint256 blanceUsdcNode = IERC20(tokenUSDC).balanceOf(address(this));\n        address pool = _getPool();\n\n        IERC20(tokenUSDC).approve(pool, blanceUsdcNode);\n        IPool(pool).deposit(tokenUSDC, blanceUsdcNode, address(this), 0);\n    }\n\n    function _assetsAllocationWithdraw() internal returns (uint256) {\n        uint256 balanceAusdcNode = IERC20(tokenAUSDC).balanceOf(address(this));\n        address pool = _getPool();\n\n        IERC20(tokenAUSDC).approve(pool, balanceAusdcNode);\n\n        return IPool(pool).withdraw(tokenUSDC, balanceAusdcNode, address(this));\n    }\n\n    function _resumeWithdrawsNodeActive() internal {\n        bytes memory data = abi.encode(uint8(2));\n\n        _sendMessage(MASTER_CHAIN, MASTER_CONTRACT, data);\n    }\n\n    function testingReturnFunds() public {\n        uint256 balance = IERC20(tokenAUSDC).balanceOf(address(this));\n\n        address pool = _getPool();\n\n        IERC20(tokenAUSDC).approve(pool, balance);\n        IPool(pool).withdraw(tokenUSDC, balance, msg.sender);\n    }\n\n    function testingActivateNode() public {\n        isNodeActive = true;\n    }\n}\n",
  "sourceMap": "761:14025:11:-:0;;;2400:32;;;-1:-1:-1;;2400:32:11;;;;;;2899:36;;;;;;2400:32;2899:36;;;3837:854;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4194:7;-1:-1:-1;;;;;542:20:1;;538:58;;571:25;;-1:-1:-1;;;571:25:1;;593:1;571:25;;;1241:51:18;1214:18;;571:25:1;;;;;;;538:58;-1:-1:-1;;;;;602:21:1;;;;;4213:8:11::1;:33:::0;;-1:-1:-1;;;;;;4213:33:11;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;4256:39:11;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;4306:9:::1;:22:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;4338:10:::1;:24:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;4372:27:::1;:58:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;4440:29:::1;:62:::0;;;;::::1;::::0;;::::1;;::::0;;;4512;;::::1;;::::0;4584:34;::::1;;::::0;4628:56:::1;;::::0;761:14025;;14:177:18;93:13;;-1:-1:-1;;;;;135:31:18;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:894::-;338:6;346;354;362;370;378;386;394;402;455:3;443:9;434:7;430:23;426:33;423:53;;;472:1;469;462:12;423:53;495:40;525:9;495:40;:::i;:::-;485:50;;554:49;599:2;588:9;584:18;554:49;:::i;:::-;544:59;;622:49;667:2;656:9;652:18;622:49;:::i;:::-;612:59;;690:49;735:2;724:9;720:18;690:49;:::i;:::-;680:59;;758:50;803:3;792:9;788:19;758:50;:::i;:::-;748:60;;827:50;872:3;861:9;857:19;827:50;:::i;:::-;817:60;;896:50;941:3;930:9;926:19;896:50;:::i;:::-;886:60;;965:50;1010:3;999:9;995:19;965:50;:::i;:::-;955:60;;1034:50;1079:3;1068:9;1064:19;1034:50;:::i;:::-;1024:60;;196:894;;;;;;;;;;;:::o;1095:203::-;761:14025:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Slave.sol",
  "type": "contract"
}