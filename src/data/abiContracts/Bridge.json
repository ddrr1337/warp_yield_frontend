{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_usdcAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenMessengerAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "collectFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "destinationChainId",
          "type": "uint32"
        }
      ],
      "name": "sendAssetsToBridge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenMessengerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdcAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/access/Ownable.sol",
    "1": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/utils/Context.sol",
    "2": "contracts/Bridge.sol",
    "3": "interfaces/IERC20.sol",
    "4": "interfaces/ITokenMessenger.sol"
  },
  "ast": {
    "absolutePath": "contracts/Bridge.sol",
    "exportedSymbols": {
      "Bridge": [
        124
      ],
      "Context": [
        374
      ],
      "IERC20": [
        321
      ],
      "ITokenMessenger": [
        352
      ],
      "Ownable": [
        237
      ]
    },
    "id": 125,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "absolutePath": "interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 125,
        "sourceUnit": 322,
        "src": "57:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ITokenMessenger.sol",
        "file": "../interfaces/ITokenMessenger.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 125,
        "sourceUnit": 353,
        "src": "92:43:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 125,
        "sourceUnit": 238,
        "src": "136:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "Ownable",
              "nameLocations": [
                "209:7:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 237,
              "src": "209:7:2"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "209:7:2"
          }
        ],
        "canonicalName": "Bridge",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 124,
        "linearizedBaseContracts": [
          124,
          237,
          374
        ],
        "name": "Bridge",
        "nameLocation": "199:6:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "02d45457",
            "id": 8,
            "mutability": "mutable",
            "name": "usdcAddress",
            "nameLocation": "238:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 124,
            "src": "223:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "223:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8f5c27e2",
            "id": 10,
            "mutability": "mutable",
            "name": "tokenMessengerAddress",
            "nameLocation": "270:21:2",
            "nodeType": "VariableDeclaration",
            "scope": 124,
            "src": "255:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "255:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 25,
              "nodeType": "Block",
              "src": "380:99:2",
              "statements": [
                {
                  "expression": {
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 17,
                      "name": "usdcAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "390:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 18,
                      "name": "_usdcAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "404:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "390:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20,
                  "nodeType": "ExpressionStatement",
                  "src": "390:26:2"
                },
                {
                  "expression": {
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21,
                      "name": "tokenMessengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "426:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 22,
                      "name": "_tokenMessengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "450:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "426:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "426:46:2"
                }
              ]
            },
            "id": 26,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "_usdcAddress",
                  "nameLocation": "334:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "326:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "326:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "mutability": "mutable",
                  "name": "_tokenMessengerAddress",
                  "nameLocation": "356:22:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "348:30:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "348:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "325:54:2"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "380:0:2"
            },
            "scope": 124,
            "src": "314:165:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "585:558:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 38,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "649:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 39,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "653:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "649:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 42,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "669:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Bridge_$124",
                                  "typeString": "contract Bridge"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Bridge_$124",
                                  "typeString": "contract Bridge"
                                }
                              ],
                              "id": 41,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "661:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 40,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "661:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 43,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "661:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 44,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "676:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 35,
                                "name": "usdcAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8,
                                "src": "623:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 34,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 321,
                              "src": "616:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$321_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 36,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "616:19:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$321",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "636:12:2",
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 320,
                          "src": "616:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "616:67:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207472616e736665722075736463",
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "697:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_636f9e70e8f2e2a966487c3fb33b47d3375a9dbea1d6e019ef880e62e66f1a15",
                          "typeString": "literal_string \"Failed to transfer usdc\""
                        },
                        "value": "Failed to transfer usdc"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_636f9e70e8f2e2a966487c3fb33b47d3375a9dbea1d6e019ef880e62e66f1a15",
                          "typeString": "literal_string \"Failed to transfer usdc\""
                        }
                      ],
                      "id": 33,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "595:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "595:137:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "595:137:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 50,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "750:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31",
                            "id": 51,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "759:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "id": 54,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 52,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "763:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "35",
                              "id": 53,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "769:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "src": "763:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            }
                          },
                          "src": "759:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          }
                        },
                        "src": "750:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e696d756d20616d6f756e742c206d6f7265207468616e20302e312055534443",
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "772:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_655b97436f4ef360d13016e443a65bc415fc8bfdcc4ef529b8eb99f5d0886154",
                          "typeString": "literal_string \"minimum amount, more than 0.1 USDC\""
                        },
                        "value": "minimum amount, more than 0.1 USDC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_655b97436f4ef360d13016e443a65bc415fc8bfdcc4ef529b8eb99f5d0886154",
                          "typeString": "literal_string \"minimum amount, more than 0.1 USDC\""
                        }
                      ],
                      "id": 49,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "742:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "742:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "742:67:2"
                },
                {
                  "assignments": [
                    61
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61,
                      "mutability": "mutable",
                      "name": "finalAmount",
                      "nameLocation": "828:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 95,
                      "src": "820:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "820:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 69,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 62,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "842:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "31",
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "851:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "855:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "861:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "855:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      },
                      "src": "851:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    },
                    "src": "842:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "820:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74,
                        "name": "tokenMessengerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "901:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75,
                        "name": "finalAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "924:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 71,
                            "name": "usdcAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "880:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 70,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 321,
                          "src": "873:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$321_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "873:19:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$321",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 73,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "893:7:2",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 300,
                      "src": "873:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "873:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "873:63:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82,
                        "name": "finalAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "1013:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 83,
                        "name": "destinationChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "1038:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 88,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1089:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 89,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1093:6:2",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1089:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 86,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1078:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 87,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1082:6:2",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "1078:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 90,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1078:22:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1070:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 84,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1070:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1070:31:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 92,
                        "name": "usdcAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1115:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 79,
                            "name": "tokenMessengerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "962:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 78,
                          "name": "ITokenMessenger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 352,
                          "src": "946:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ITokenMessenger_$352_$",
                            "typeString": "type(contract ITokenMessenger)"
                          }
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "946:38:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITokenMessenger_$352",
                          "typeString": "contract ITokenMessenger"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "985:14:2",
                      "memberName": "depositForBurn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 336,
                      "src": "946:53:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint32_$_t_bytes32_$_t_address_$returns$_t_uint64_$",
                        "typeString": "function (uint256,uint32,bytes32,address) external returns (uint64)"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "946:190:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "946:190:2"
                }
              ]
            },
            "functionSelector": "65c005c2",
            "id": 96,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendAssetsToBridge",
            "nameLocation": "494:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "530:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "522:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "522:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "destinationChainId",
                  "nameLocation": "553:18:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "546:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "546:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "512:65:2"
            },
            "returnParameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "585:0:2"
            },
            "scope": 124,
            "src": "485:658:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "1191:143:2",
              "statements": [
                {
                  "assignments": [
                    102
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102,
                      "mutability": "mutable",
                      "name": "balanceUsdc",
                      "nameLocation": "1209:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 122,
                      "src": "1201:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 101,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1201:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 112,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 109,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1261:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Bridge_$124",
                              "typeString": "contract Bridge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Bridge_$124",
                              "typeString": "contract Bridge"
                            }
                          ],
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1253:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 107,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1253:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1253:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 104,
                            "name": "usdcAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "1230:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 103,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 321,
                          "src": "1223:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$321_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1223:19:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$321",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1243:9:2",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 282,
                      "src": "1223:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1223:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1201:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 117,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 165,
                          "src": "1306:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1306:7:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 119,
                        "name": "balanceUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "1315:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 114,
                            "name": "usdcAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "1284:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 113,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 321,
                          "src": "1277:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$321_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1277:19:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$321",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1297:8:2",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 309,
                      "src": "1277:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1277:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1277:50:2"
                }
              ]
            },
            "functionSelector": "c8796572",
            "id": 123,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 99,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 98,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1181:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 156,
                  "src": "1181:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1181:9:2"
              }
            ],
            "name": "collectFees",
            "nameLocation": "1158:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1169:2:2"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1191:0:2"
            },
            "scope": 124,
            "src": "1149:185:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 125,
        "src": "190:1146:2",
        "usedErrors": [],
        "usedEvents": [
          138
        ]
      }
    ],
    "src": "32:1305:2"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161083838038061083883398101604081905261002f916100d5565b61003833610069565b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055610108565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100d057600080fd5b919050565b600080604083850312156100e857600080fd5b6100f1836100b9565b91506100ff602084016100b9565b90509250929050565b610721806101176000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ce5780638f5c27e2146100df578063c8796572146100f2578063f2fde38b146100fa57600080fd5b806302d454571461008257806365c005c2146100b1578063715018a6146100c6575b600080fd5b600154610095906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100c46100bf3660046105cf565b61010d565b005b6100c4610388565b6000546001600160a01b0316610095565b600254610095906001600160a01b031681565b6100c461039c565b6100c4610108366004610608565b6104ac565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610164573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101889190610638565b6101d95760405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f207472616e73666572207573646300000000000000000060448201526064015b60405180910390fd5b620186a082116102365760405162461bcd60e51b815260206004820152602260248201527f6d696e696d756d20616d6f756e742c206d6f7265207468616e20302e31205553604482015261444360f01b60648201526084016101d0565b6000610245620f42408461065a565b60015460025460405163095ea7b360e01b81526001600160a01b03918216600482015260248101849052929350169063095ea7b3906044016020604051808303816000875af115801561029c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c09190610638565b50600254604080513360208201526001600160a01b0390921691636fd3504e9184918691016040516020818303038152906040526102fd90610681565b60015460405160e086901b6001600160e01b0319168152600481019490945263ffffffff909216602484015260448301526001600160a01b031660648201526084016020604051808303816000875af115801561035e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038291906106a8565b50505050565b610390610525565b61039a600061057f565b565b6103a4610525565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156103ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041191906106d2565b6001549091506001600160a01b031663a9059cbb6104376000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610484573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a89190610638565b5050565b6104b4610525565b6001600160a01b0381166105195760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101d0565b6105228161057f565b50565b6000546001600160a01b0316331461039a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101d0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156105e257600080fd5b82359150602083013563ffffffff811681146105fd57600080fd5b809150509250929050565b60006020828403121561061a57600080fd5b81356001600160a01b038116811461063157600080fd5b9392505050565b60006020828403121561064a57600080fd5b8151801515811461063157600080fd5b8181038181111561067b57634e487b7160e01b600052601160045260246000fd5b92915050565b805160208083015191908110156106a2576000198160200360031b1b821691505b50919050565b6000602082840312156106ba57600080fd5b815167ffffffffffffffff8116811461063157600080fd5b6000602082840312156106e457600080fd5b505191905056fea2646970667358221220b06a4ad2a8abd603474f234bcf1c4da3a4245335a99f48903b84253ff1fa376764736f6c63430008190033",
  "bytecodeSha1": "6dcb15b7648a735611ddf2edf36d5130fb53d83f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.25+commit.b61c2a91"
  },
  "contractName": "Bridge",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._checkOwner": {
          "16": [
            1422,
            1445,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "15": [
            2169,
            2191,
            true
          ]
        }
      },
      "1": {},
      "2": {
        "Bridge.sendAssetsToBridge": {
          "13": [
            616,
            683,
            true
          ],
          "14": [
            750,
            770,
            true
          ]
        }
      },
      "3": {},
      "4": {}
    },
    "statements": {
      "0": {
        "Ownable._checkOwner": {
          "10": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "11": [
            2541,
            2558
          ],
          "12": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "0": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "5": [
            1895,
            1925
          ]
        },
        "Ownable.transferOwnership": {
          "7": [
            2161,
            2234
          ],
          "8": [
            2244,
            2272
          ]
        }
      },
      "1": {
        "Context._msgSender": {
          "9": [
            712,
            729
          ]
        }
      },
      "2": {
        "Bridge.collectFees": {
          "6": [
            1277,
            1327
          ]
        },
        "Bridge.sendAssetsToBridge": {
          "1": [
            595,
            732
          ],
          "2": [
            742,
            809
          ],
          "3": [
            873,
            936
          ],
          "4": [
            946,
            1136
          ]
        }
      },
      "3": {},
      "4": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.3/Context",
    "IERC20",
    "ITokenMessenger",
    "OpenZeppelin/openzeppelin-contracts@4.8.3/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ce5780638f5c27e2146100df578063c8796572146100f2578063f2fde38b146100fa57600080fd5b806302d454571461008257806365c005c2146100b1578063715018a6146100c6575b600080fd5b600154610095906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100c46100bf3660046105cf565b61010d565b005b6100c4610388565b6000546001600160a01b0316610095565b600254610095906001600160a01b031681565b6100c461039c565b6100c4610108366004610608565b6104ac565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610164573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101889190610638565b6101d95760405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f207472616e73666572207573646300000000000000000060448201526064015b60405180910390fd5b620186a082116102365760405162461bcd60e51b815260206004820152602260248201527f6d696e696d756d20616d6f756e742c206d6f7265207468616e20302e31205553604482015261444360f01b60648201526084016101d0565b6000610245620f42408461065a565b60015460025460405163095ea7b360e01b81526001600160a01b03918216600482015260248101849052929350169063095ea7b3906044016020604051808303816000875af115801561029c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c09190610638565b50600254604080513360208201526001600160a01b0390921691636fd3504e9184918691016040516020818303038152906040526102fd90610681565b60015460405160e086901b6001600160e01b0319168152600481019490945263ffffffff909216602484015260448301526001600160a01b031660648201526084016020604051808303816000875af115801561035e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038291906106a8565b50505050565b610390610525565b61039a600061057f565b565b6103a4610525565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156103ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041191906106d2565b6001549091506001600160a01b031663a9059cbb6104376000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610484573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a89190610638565b5050565b6104b4610525565b6001600160a01b0381166105195760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101d0565b6105228161057f565b50565b6000546001600160a01b0316331461039a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101d0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156105e257600080fd5b82359150602083013563ffffffff811681146105fd57600080fd5b809150509250929050565b60006020828403121561061a57600080fd5b81356001600160a01b038116811461063157600080fd5b9392505050565b60006020828403121561064a57600080fd5b8151801515811461063157600080fd5b8181038181111561067b57634e487b7160e01b600052601160045260246000fd5b92915050565b805160208083015191908110156106a2576000198160200360031b1b821691505b50919050565b6000602082840312156106ba57600080fd5b815167ffffffffffffffff8116811461063157600080fd5b6000602082840312156106e457600080fd5b505191905056fea2646970667358221220b06a4ad2a8abd603474f234bcf1c4da3a4245335a99f48903b84253ff1fa376764736f6c63430008190033",
  "deployedSourceMap": "190:1146:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;223:26;;;;;-1:-1:-1;;;;;223:26:2;;;;;;-1:-1:-1;;;;;178:32:5;;;160:51;;148:2;133:18;223:26:2;;;;;;;485:658;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;:::i;1201:85::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;255:36:2;;;;;-1:-1:-1;;;;;255:36:2;;;1149:185;;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;485:658:2:-;623:11;;616:67;;-1:-1:-1;;;616:67:2;;649:10;616:67;;;1102:34:5;669:4:2;1152:18:5;;;1145:43;1204:18;;;1197:34;;;-1:-1:-1;;;;;623:11:2;;;;616:32;;1037:18:5;;616:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;595:137;;;;-1:-1:-1;;;595:137:2;;1726:2:5;595:137:2;;;1708:21:5;1765:2;1745:18;;;1738:30;1804:25;1784:18;;;1777:53;1847:18;;595:137:2;;;;;;;;;759:11;750:6;:20;742:67;;;;-1:-1:-1;;;742:67:2;;2078:2:5;742:67:2;;;2060:21:5;2117:2;2097:18;;;2090:30;2156:34;2136:18;;;2129:62;-1:-1:-1;;;2207:18:5;;;2200:32;2249:19;;742:67:2;1876:398:5;742:67:2;820:19;842:20;851:11;842:6;:20;:::i;:::-;880:11;;901:21;;873:63;;-1:-1:-1;;;873:63:2;;-1:-1:-1;;;;;901:21:2;;;873:63;;;2683:51:5;2750:18;;;2743:34;;;820:42:2;;-1:-1:-1;880:11:2;;873:27;;2656:18:5;;873:63:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;962:21:2;;1078:22;;;1089:10;1078:22;;;160:51:5;-1:-1:-1;;;;;962:21:2;;;;946:53;;1013:11;;1038:18;;133::5;1078:22:2;;;;;;;;;;;;1070:31;;;:::i;:::-;1115:11;;946:190;;;;;;-1:-1:-1;;;;;;946:190:2;;;;;;3319:25:5;;;;3392:10;3380:23;;;3360:18;;;3353:51;3420:18;;;3413:34;-1:-1:-1;;;;;1115:11:2;3463:18:5;;;3456:60;3291:19;;946:190:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;585:558;485:658;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1149:185:2:-;1094:13:0;:11;:13::i;:::-;1230:11:2::1;::::0;1223:44:::1;::::0;-1:-1:-1;;;1223:44:2;;1261:4:::1;1223:44;::::0;::::1;160:51:5::0;1201:19:2::1;::::0;-1:-1:-1;;;;;1230:11:2::1;::::0;1223:29:::1;::::0;133:18:5;;1223:44:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1284:11;::::0;1201:66;;-1:-1:-1;;;;;;1284:11:2::1;1277:28;1306:7;1247::0::0;1273:6;-1:-1:-1;;;;;1273:6:0;;1201:85;1306:7:2::1;1277:50;::::0;-1:-1:-1;;;;;;1277:50:2::1;::::0;;;;;;-1:-1:-1;;;;;2701:32:5;;;1277:50:2::1;::::0;::::1;2683:51:5::0;2750:18;;;2743:34;;;2656:18;;1277:50:2::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1191:143;1149:185::o:0;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;4211:2:5;2161:73:0::1;::::0;::::1;4193:21:5::0;4250:2;4230:18;;;4223:30;4289:34;4269:18;;;4262:62;-1:-1:-1;;;4340:18:5;;;4333:36;4386:19;;2161:73:0::1;4009:402:5::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:1;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;4618:2:5;1414:68:0;;;4600:21:5;;;4637:18;;;4630:30;4696:34;4676:18;;;4669:62;4748:18;;1414:68:0;4416:356:5;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;222:344:5:-;289:6;297;350:2;338:9;329:7;325:23;321:32;318:52;;;366:1;363;356:12;318:52;402:9;389:23;379:33;;462:2;451:9;447:18;434:32;506:10;499:5;495:22;488:5;485:33;475:61;;532:1;529;522:12;475:61;555:5;545:15;;;222:344;;;;;:::o;571:286::-;630:6;683:2;671:9;662:7;658:23;654:32;651:52;;;699:1;696;689:12;651:52;725:23;;-1:-1:-1;;;;;777:31:5;;767:42;;757:70;;823:1;820;813:12;757:70;846:5;571:286;-1:-1:-1;;;571:286:5:o;1242:277::-;1309:6;1362:2;1350:9;1341:7;1337:23;1333:32;1330:52;;;1378:1;1375;1368:12;1330:52;1410:9;1404:16;1463:5;1456:13;1449:21;1442:5;1439:32;1429:60;;1485:1;1482;1475:12;2279:225;2346:9;;;2367:11;;;2364:134;;;2420:10;2415:3;2411:20;2408:1;2401:31;2455:4;2452:1;2445:15;2483:4;2480:1;2473:15;2364:134;2279:225;;;;:::o;2788:297::-;2906:12;;2953:4;2942:16;;;2936:23;;2906:12;2971:16;;2968:111;;;3065:1;3061:6;3051;3045:4;3041:17;3038:1;3034:25;3030:38;3023:5;3019:50;3010:59;;2968:111;;2788:297;;;:::o;3527:288::-;3596:6;3649:2;3637:9;3628:7;3624:23;3620:32;3617:52;;;3665:1;3662;3655:12;3617:52;3697:9;3691:16;3747:18;3740:5;3736:30;3729:5;3726:41;3716:69;;3781:1;3778;3771:12;3820:184;3890:6;3943:2;3931:9;3922:7;3918:23;3914:32;3911:52;;;3959:1;3956;3949:12;3911:52;-1:-1:-1;3982:16:5;;3820:184;-1:-1:-1;3820:184:5:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    190,
    1336
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x8F5C27E2 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0xC8796572 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D45457 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x65C005C2 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x95 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH2 0xBF CALLDATASIZE PUSH1 0x4 PUSH2 0x5CF JUMP JUMPDEST PUSH2 0x10D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC4 PUSH2 0x388 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x95 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x95 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xC4 PUSH2 0x39C JUMP JUMPDEST PUSH2 0xC4 PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x608 JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x164 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x1D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F207472616E736665722075736463000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x186A0 DUP3 GT PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D696E696D756D20616D6F756E742C206D6F7265207468616E20302E31205553 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x4443 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x245 PUSH3 0xF4240 DUP5 PUSH2 0x65A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x29C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x638 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x6FD3504E SWAP2 DUP5 SWAP2 DUP7 SWAP2 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x2FD SWAP1 PUSH2 0x681 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP7 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x35E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x6A8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x390 PUSH2 0x525 JUMP JUMPDEST PUSH2 0x39A PUSH1 0x0 PUSH2 0x57F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3A4 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x6D2 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x437 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x484 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A8 SWAP2 SWAP1 PUSH2 0x638 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4B4 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D0 JUMP JUMPDEST PUSH2 0x522 DUP2 PUSH2 0x57F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x39A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x5FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x61A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x67B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x6A2 JUMPI PUSH1 0x0 NOT DUP2 PUSH1 0x20 SUB PUSH1 0x3 SHL SHL DUP3 AND SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 PUSH11 0x4AD2A8ABD603474F234BCF SHR 0x4D LOG3 LOG4 0x24 MSTORE8 CALLDATALOAD 0xA9 SWAP16 BASEFEE SWAP1 EXTCODESIZE DUP5 0x25 EXTCODEHASH CALL STATICCALL CALLDATACOPY PUSH8 0x64736F6C63430008 NOT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        190,
        1336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7D"
    },
    "25": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "38": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "GT",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "49": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "EQ",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCE"
    },
    "53": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8F5C27E2"
    },
    "60": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "EQ",
      "path": "2"
    },
    "61": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF"
    },
    "64": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "66": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC8796572"
    },
    "71": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "EQ",
      "path": "2"
    },
    "72": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF2"
    },
    "75": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "EQ",
      "path": "2"
    },
    "83": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFA"
    },
    "86": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "90": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "REVERT",
      "path": "2"
    },
    "91": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "92": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "93": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2D45457"
    },
    "98": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "EQ",
      "path": "2"
    },
    "99": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82"
    },
    "102": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "103": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "104": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x65C005C2"
    },
    "109": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "EQ",
      "path": "2"
    },
    "110": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB1"
    },
    "113": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "114": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "115": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "120": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "EQ",
      "path": "2"
    },
    "121": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC6"
    },
    "124": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "125": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "126": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "128": {
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "129": {
      "first_revert": true,
      "fn": null,
      "offset": [
        190,
        1336
      ],
      "op": "REVERT",
      "path": "2"
    },
    "130": {
      "offset": [
        223,
        249
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "131": {
      "fn": null,
      "offset": [
        223,
        249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "133": {
      "fn": null,
      "offset": [
        223,
        249
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "134": {
      "fn": null,
      "offset": [
        223,
        249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x95"
    },
    "137": {
      "fn": null,
      "offset": [
        223,
        249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "144": {
      "op": "SHL"
    },
    "145": {
      "op": "SUB"
    },
    "146": {
      "offset": [
        223,
        249
      ],
      "op": "AND",
      "path": "2"
    },
    "147": {
      "fn": null,
      "offset": [
        223,
        249
      ],
      "op": "DUP2",
      "path": "2"
    },
    "148": {
      "fn": null,
      "offset": [
        223,
        249
      ],
      "op": "JUMP",
      "path": "2"
    },
    "149": {
      "fn": null,
      "offset": [
        223,
        249
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "150": {
      "fn": null,
      "offset": [
        223,
        249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "152": {
      "fn": null,
      "offset": [
        223,
        249
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "159": {
      "op": "SHL"
    },
    "160": {
      "op": "SUB"
    },
    "161": {
      "op": "SWAP1"
    },
    "162": {
      "op": "SWAP2"
    },
    "163": {
      "op": "AND"
    },
    "164": {
      "op": "DUP2"
    },
    "165": {
      "op": "MSTORE"
    },
    "166": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "168": {
      "op": "ADD"
    },
    "169": {
      "offset": [
        223,
        249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "171": {
      "fn": null,
      "offset": [
        223,
        249
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "172": {
      "fn": null,
      "offset": [
        223,
        249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "173": {
      "fn": null,
      "offset": [
        223,
        249
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "174": {
      "fn": null,
      "offset": [
        223,
        249
      ],
      "op": "SUB",
      "path": "2"
    },
    "175": {
      "fn": null,
      "offset": [
        223,
        249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "176": {
      "fn": null,
      "offset": [
        223,
        249
      ],
      "op": "RETURN",
      "path": "2"
    },
    "177": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        485,
        1143
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "178": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        485,
        1143
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC4"
    },
    "181": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        485,
        1143
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBF"
    },
    "184": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        485,
        1143
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "185": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        485,
        1143
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "187": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        485,
        1143
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5CF"
    },
    "190": {
      "fn": "Bridge.sendAssetsToBridge",
      "jump": "i",
      "offset": [
        485,
        1143
      ],
      "op": "JUMP",
      "path": "2"
    },
    "191": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        485,
        1143
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "192": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        485,
        1143
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10D"
    },
    "195": {
      "fn": "Bridge.sendAssetsToBridge",
      "jump": "i",
      "offset": [
        485,
        1143
      ],
      "op": "JUMP",
      "path": "2"
    },
    "196": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        485,
        1143
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "197": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        485,
        1143
      ],
      "op": "STOP",
      "path": "2"
    },
    "198": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "199": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC4"
    },
    "202": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x388"
    },
    "205": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "206": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "207": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "209": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "216": {
      "op": "SHL"
    },
    "217": {
      "op": "SUB"
    },
    "218": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "219": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "222": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "223": {
      "offset": [
        255,
        291
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "224": {
      "fn": "Ownable.owner",
      "offset": [
        255,
        291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "226": {
      "fn": "Ownable.owner",
      "offset": [
        255,
        291
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "227": {
      "fn": "Ownable.owner",
      "offset": [
        255,
        291
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x95"
    },
    "230": {
      "fn": "Ownable.owner",
      "offset": [
        255,
        291
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "237": {
      "op": "SHL"
    },
    "238": {
      "op": "SUB"
    },
    "239": {
      "offset": [
        255,
        291
      ],
      "op": "AND",
      "path": "2"
    },
    "240": {
      "fn": "Ownable.owner",
      "offset": [
        255,
        291
      ],
      "op": "DUP2",
      "path": "2"
    },
    "241": {
      "fn": "Ownable.owner",
      "offset": [
        255,
        291
      ],
      "op": "JUMP",
      "path": "2"
    },
    "242": {
      "fn": "Bridge.collectFees",
      "offset": [
        1149,
        1334
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "243": {
      "fn": "Bridge.collectFees",
      "offset": [
        1149,
        1334
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC4"
    },
    "246": {
      "fn": "Bridge.collectFees",
      "offset": [
        1149,
        1334
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39C"
    },
    "249": {
      "fn": "Bridge.collectFees",
      "jump": "i",
      "offset": [
        1149,
        1334
      ],
      "op": "JUMP",
      "path": "2"
    },
    "250": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "251": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC4"
    },
    "254": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x108"
    },
    "257": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "258": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "260": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x608"
    },
    "263": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "264": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "265": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AC"
    },
    "268": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "269": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        485,
        1143
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "270": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        623,
        634
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x1"
    },
    "272": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        623,
        634
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "273": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "275": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "276": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "281": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "283": {
      "op": "SHL"
    },
    "284": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "DUP2",
      "path": "2"
    },
    "285": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "286": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        649,
        659
      ],
      "op": "CALLER",
      "path": "2"
    },
    "287": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "289": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "DUP3",
      "path": "2"
    },
    "290": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "ADD",
      "path": "2"
    },
    "291": {
      "op": "MSTORE"
    },
    "292": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        669,
        673
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "293": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "295": {
      "op": "DUP3"
    },
    "296": {
      "op": "ADD"
    },
    "297": {
      "op": "MSTORE"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "300": {
      "op": "DUP2"
    },
    "301": {
      "op": "ADD"
    },
    "302": {
      "op": "DUP5"
    },
    "303": {
      "op": "SWAP1"
    },
    "304": {
      "op": "MSTORE"
    },
    "305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "311": {
      "op": "SHL"
    },
    "312": {
      "op": "SUB"
    },
    "313": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        623,
        634
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "314": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        623,
        634
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "315": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        623,
        634
      ],
      "op": "AND",
      "path": "2"
    },
    "316": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        623,
        634
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "317": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        648
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23B872DD"
    },
    "322": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        648
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "325": {
      "op": "ADD"
    },
    "326": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "328": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "330": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "331": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "DUP1",
      "path": "2"
    },
    "332": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "DUP4",
      "path": "2"
    },
    "333": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "SUB",
      "path": "2"
    },
    "334": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "DUP2",
      "path": "2"
    },
    "335": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "337": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "DUP8",
      "path": "2"
    },
    "338": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "GAS",
      "path": "2"
    },
    "339": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "CALL",
      "path": "2"
    },
    "340": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "341": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "DUP1",
      "path": "2"
    },
    "342": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "343": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x164"
    },
    "346": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "347": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "348": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "350": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "DUP1",
      "path": "2"
    },
    "351": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "352": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "353": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "355": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "356": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "357": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "POP",
      "path": "2"
    },
    "358": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "POP",
      "path": "2"
    },
    "359": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "POP",
      "path": "2"
    },
    "360": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "POP",
      "path": "2"
    },
    "361": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "363": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "364": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "365": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "367": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "NOT",
      "path": "2"
    },
    "368": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "370": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "DUP3",
      "path": "2"
    },
    "371": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "ADD",
      "path": "2"
    },
    "372": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "AND",
      "path": "2"
    },
    "373": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "DUP3",
      "path": "2"
    },
    "374": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "ADD",
      "path": "2"
    },
    "375": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "DUP1",
      "path": "2"
    },
    "376": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "378": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "379": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "POP",
      "path": "2"
    },
    "380": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "DUP2",
      "path": "2"
    },
    "381": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "ADD",
      "path": "2"
    },
    "382": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "383": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x188"
    },
    "386": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "387": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "388": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x638"
    },
    "391": {
      "fn": "Bridge.sendAssetsToBridge",
      "jump": "i",
      "offset": [
        616,
        683
      ],
      "op": "JUMP",
      "path": "2"
    },
    "392": {
      "branch": 13,
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        616,
        683
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "393": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        595,
        732
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D9"
    },
    "396": {
      "branch": 13,
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        595,
        732
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "397": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        595,
        732
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "399": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        595,
        732
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "400": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "404": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "406": {
      "op": "SHL"
    },
    "407": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        595,
        732
      ],
      "op": "DUP2",
      "path": "2"
    },
    "408": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        595,
        732
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "411": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        595,
        732
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "413": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        595,
        732
      ],
      "op": "DUP3",
      "path": "2"
    },
    "414": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        595,
        732
      ],
      "op": "ADD",
      "path": "2"
    },
    "415": {
      "op": "MSTORE"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "420": {
      "op": "DUP3"
    },
    "421": {
      "op": "ADD"
    },
    "422": {
      "op": "MSTORE"
    },
    "423": {
      "op": "PUSH32",
      "value": "0x4661696C656420746F207472616E736665722075736463000000000000000000"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "458": {
      "op": "DUP3"
    },
    "459": {
      "op": "ADD"
    },
    "460": {
      "op": "MSTORE"
    },
    "461": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "463": {
      "op": "ADD"
    },
    "464": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        595,
        732
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "465": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        595,
        732
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "467": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        595,
        732
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "468": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        595,
        732
      ],
      "op": "DUP1",
      "path": "2"
    },
    "469": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        595,
        732
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "470": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        595,
        732
      ],
      "op": "SUB",
      "path": "2"
    },
    "471": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        595,
        732
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "472": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        595,
        732
      ],
      "op": "REVERT",
      "path": "2"
    },
    "473": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        595,
        732
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "474": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        759,
        770
      ],
      "op": "PUSH3",
      "path": "2",
      "statement": 2,
      "value": "0x186A0"
    },
    "478": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        750,
        756
      ],
      "op": "DUP3",
      "path": "2"
    },
    "479": {
      "branch": 14,
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        750,
        770
      ],
      "op": "GT",
      "path": "2"
    },
    "480": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        742,
        809
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x236"
    },
    "483": {
      "branch": 14,
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        742,
        809
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "484": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        742,
        809
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "486": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        742,
        809
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "487": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "491": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "493": {
      "op": "SHL"
    },
    "494": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        742,
        809
      ],
      "op": "DUP2",
      "path": "2"
    },
    "495": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        742,
        809
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "498": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        742,
        809
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "500": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        742,
        809
      ],
      "op": "DUP3",
      "path": "2"
    },
    "501": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        742,
        809
      ],
      "op": "ADD",
      "path": "2"
    },
    "502": {
      "op": "MSTORE"
    },
    "503": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "505": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "507": {
      "op": "DUP3"
    },
    "508": {
      "op": "ADD"
    },
    "509": {
      "op": "MSTORE"
    },
    "510": {
      "op": "PUSH32",
      "value": "0x6D696E696D756D20616D6F756E742C206D6F7265207468616E20302E31205553"
    },
    "543": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "545": {
      "op": "DUP3"
    },
    "546": {
      "op": "ADD"
    },
    "547": {
      "op": "MSTORE"
    },
    "548": {
      "op": "PUSH2",
      "value": "0x4443"
    },
    "551": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "553": {
      "op": "SHL"
    },
    "554": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "556": {
      "op": "DUP3"
    },
    "557": {
      "op": "ADD"
    },
    "558": {
      "op": "MSTORE"
    },
    "559": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "561": {
      "op": "ADD"
    },
    "562": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        742,
        809
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D0"
    },
    "565": {
      "op": "JUMP"
    },
    "566": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        742,
        809
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "567": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        820,
        839
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "569": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        842,
        862
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x245"
    },
    "572": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        851,
        862
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xF4240"
    },
    "576": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        842,
        848
      ],
      "op": "DUP5",
      "path": "2"
    },
    "577": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        842,
        862
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x65A"
    },
    "580": {
      "fn": "Bridge.sendAssetsToBridge",
      "jump": "i",
      "offset": [
        842,
        862
      ],
      "op": "JUMP",
      "path": "2"
    },
    "581": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        842,
        862
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "582": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        880,
        891
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x1"
    },
    "584": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        880,
        891
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "585": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        901,
        922
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "587": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        901,
        922
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "588": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "590": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "591": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "596": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "598": {
      "op": "SHL"
    },
    "599": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "DUP2",
      "path": "2"
    },
    "600": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "605": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "607": {
      "op": "SHL"
    },
    "608": {
      "op": "SUB"
    },
    "609": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        901,
        922
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "610": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        901,
        922
      ],
      "op": "DUP3",
      "path": "2"
    },
    "611": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        901,
        922
      ],
      "op": "AND",
      "path": "2"
    },
    "612": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "614": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "DUP3",
      "path": "2"
    },
    "615": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "ADD",
      "path": "2"
    },
    "616": {
      "op": "MSTORE"
    },
    "617": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "619": {
      "op": "DUP2"
    },
    "620": {
      "op": "ADD"
    },
    "621": {
      "op": "DUP5"
    },
    "622": {
      "op": "SWAP1"
    },
    "623": {
      "op": "MSTORE"
    },
    "624": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        820,
        862
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "625": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        820,
        862
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "626": {
      "op": "POP"
    },
    "627": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        880,
        891
      ],
      "op": "AND",
      "path": "2"
    },
    "628": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        880,
        891
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "629": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        900
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x95EA7B3"
    },
    "634": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        900
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "635": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "637": {
      "op": "ADD"
    },
    "638": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "640": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "642": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "643": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "DUP1",
      "path": "2"
    },
    "644": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "DUP4",
      "path": "2"
    },
    "645": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "SUB",
      "path": "2"
    },
    "646": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "DUP2",
      "path": "2"
    },
    "647": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "649": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "DUP8",
      "path": "2"
    },
    "650": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "GAS",
      "path": "2"
    },
    "651": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "CALL",
      "path": "2"
    },
    "652": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "653": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "DUP1",
      "path": "2"
    },
    "654": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "655": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29C"
    },
    "658": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "659": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "660": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "662": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "DUP1",
      "path": "2"
    },
    "663": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "664": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "665": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "667": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "REVERT",
      "path": "2"
    },
    "668": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "669": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "POP",
      "path": "2"
    },
    "670": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "POP",
      "path": "2"
    },
    "671": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "POP",
      "path": "2"
    },
    "672": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "POP",
      "path": "2"
    },
    "673": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "675": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "676": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "677": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "679": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "NOT",
      "path": "2"
    },
    "680": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "682": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "DUP3",
      "path": "2"
    },
    "683": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "ADD",
      "path": "2"
    },
    "684": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "AND",
      "path": "2"
    },
    "685": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "DUP3",
      "path": "2"
    },
    "686": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "ADD",
      "path": "2"
    },
    "687": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "DUP1",
      "path": "2"
    },
    "688": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "690": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "691": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "POP",
      "path": "2"
    },
    "692": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "DUP2",
      "path": "2"
    },
    "693": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "ADD",
      "path": "2"
    },
    "694": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "695": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C0"
    },
    "698": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "699": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "700": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x638"
    },
    "703": {
      "fn": "Bridge.sendAssetsToBridge",
      "jump": "i",
      "offset": [
        873,
        936
      ],
      "op": "JUMP",
      "path": "2"
    },
    "704": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        873,
        936
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "705": {
      "op": "POP"
    },
    "706": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        962,
        983
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 4,
      "value": "0x2"
    },
    "708": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        962,
        983
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "709": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1078,
        1100
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "711": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1078,
        1100
      ],
      "op": "DUP1",
      "path": "2"
    },
    "712": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1078,
        1100
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "713": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1089,
        1099
      ],
      "op": "CALLER",
      "path": "2"
    },
    "714": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1078,
        1100
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "716": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1078,
        1100
      ],
      "op": "DUP3",
      "path": "2"
    },
    "717": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1078,
        1100
      ],
      "op": "ADD",
      "path": "2"
    },
    "718": {
      "op": "MSTORE"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "723": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "725": {
      "op": "SHL"
    },
    "726": {
      "op": "SUB"
    },
    "727": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        962,
        983
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "728": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        962,
        983
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "729": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        962,
        983
      ],
      "op": "AND",
      "path": "2"
    },
    "730": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        962,
        983
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "731": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        999
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6FD3504E"
    },
    "736": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        999
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "737": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1013,
        1024
      ],
      "op": "DUP5",
      "path": "2"
    },
    "738": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1013,
        1024
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "739": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1038,
        1056
      ],
      "op": "DUP7",
      "path": "2"
    },
    "740": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1038,
        1056
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "741": {
      "op": "ADD"
    },
    "742": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1078,
        1100
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "744": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1078,
        1100
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "745": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1078,
        1100
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "747": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1078,
        1100
      ],
      "op": "DUP2",
      "path": "2"
    },
    "748": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1078,
        1100
      ],
      "op": "DUP4",
      "path": "2"
    },
    "749": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1078,
        1100
      ],
      "op": "SUB",
      "path": "2"
    },
    "750": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1078,
        1100
      ],
      "op": "SUB",
      "path": "2"
    },
    "751": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1078,
        1100
      ],
      "op": "DUP2",
      "path": "2"
    },
    "752": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1078,
        1100
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "753": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1078,
        1100
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "754": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1078,
        1100
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "756": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1078,
        1100
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "757": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1070,
        1101
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FD"
    },
    "760": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1070,
        1101
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "761": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1070,
        1101
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x681"
    },
    "764": {
      "fn": "Bridge.sendAssetsToBridge",
      "jump": "i",
      "offset": [
        1070,
        1101
      ],
      "op": "JUMP",
      "path": "2"
    },
    "765": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1070,
        1101
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "766": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1115,
        1126
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "768": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1115,
        1126
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "769": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "771": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "772": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "774": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "DUP7",
      "path": "2"
    },
    "775": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "776": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "SHL",
      "path": "2"
    },
    "777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "781": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "783": {
      "op": "SHL"
    },
    "784": {
      "op": "SUB"
    },
    "785": {
      "op": "NOT"
    },
    "786": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "AND",
      "path": "2"
    },
    "787": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "DUP2",
      "path": "2"
    },
    "788": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "789": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "791": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "DUP2",
      "path": "2"
    },
    "792": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "ADD",
      "path": "2"
    },
    "793": {
      "op": "SWAP5"
    },
    "794": {
      "op": "SWAP1"
    },
    "795": {
      "op": "SWAP5"
    },
    "796": {
      "op": "MSTORE"
    },
    "797": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "802": {
      "op": "SWAP1"
    },
    "803": {
      "op": "SWAP3"
    },
    "804": {
      "op": "AND"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "807": {
      "op": "DUP5"
    },
    "808": {
      "op": "ADD"
    },
    "809": {
      "op": "MSTORE"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "812": {
      "op": "DUP4"
    },
    "813": {
      "op": "ADD"
    },
    "814": {
      "op": "MSTORE"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "821": {
      "op": "SHL"
    },
    "822": {
      "op": "SUB"
    },
    "823": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        1115,
        1126
      ],
      "op": "AND",
      "path": "2"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "826": {
      "op": "DUP3"
    },
    "827": {
      "op": "ADD"
    },
    "828": {
      "op": "MSTORE"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "831": {
      "op": "ADD"
    },
    "832": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "834": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "836": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "837": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "DUP1",
      "path": "2"
    },
    "838": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "DUP4",
      "path": "2"
    },
    "839": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "SUB",
      "path": "2"
    },
    "840": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "DUP2",
      "path": "2"
    },
    "841": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "843": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "DUP8",
      "path": "2"
    },
    "844": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "GAS",
      "path": "2"
    },
    "845": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "CALL",
      "path": "2"
    },
    "846": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "847": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "DUP1",
      "path": "2"
    },
    "848": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "849": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35E"
    },
    "852": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "853": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "854": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "856": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "DUP1",
      "path": "2"
    },
    "857": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "858": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "859": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "861": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "REVERT",
      "path": "2"
    },
    "862": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "863": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "POP",
      "path": "2"
    },
    "864": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "POP",
      "path": "2"
    },
    "865": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "POP",
      "path": "2"
    },
    "866": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "POP",
      "path": "2"
    },
    "867": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "869": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "870": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "871": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "873": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "NOT",
      "path": "2"
    },
    "874": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "876": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "DUP3",
      "path": "2"
    },
    "877": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "ADD",
      "path": "2"
    },
    "878": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "AND",
      "path": "2"
    },
    "879": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "DUP3",
      "path": "2"
    },
    "880": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "ADD",
      "path": "2"
    },
    "881": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "DUP1",
      "path": "2"
    },
    "882": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "884": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "885": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "POP",
      "path": "2"
    },
    "886": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "DUP2",
      "path": "2"
    },
    "887": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "ADD",
      "path": "2"
    },
    "888": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "889": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x382"
    },
    "892": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "893": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "894": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A8"
    },
    "897": {
      "fn": "Bridge.sendAssetsToBridge",
      "jump": "i",
      "offset": [
        946,
        1136
      ],
      "op": "JUMP",
      "path": "2"
    },
    "898": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "899": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        946,
        1136
      ],
      "op": "POP",
      "path": "2"
    },
    "900": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        585,
        1143
      ],
      "op": "POP",
      "path": "2"
    },
    "901": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        485,
        1143
      ],
      "op": "POP",
      "path": "2"
    },
    "902": {
      "fn": "Bridge.sendAssetsToBridge",
      "offset": [
        485,
        1143
      ],
      "op": "POP",
      "path": "2"
    },
    "903": {
      "fn": "Bridge.sendAssetsToBridge",
      "jump": "o",
      "offset": [
        485,
        1143
      ],
      "op": "JUMP",
      "path": "2"
    },
    "904": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "905": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x390"
    },
    "908": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x525"
    },
    "911": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "912": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "913": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x39A"
    },
    "916": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "918": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57F"
    },
    "921": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "922": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "923": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "924": {
      "fn": "Bridge.collectFees",
      "offset": [
        1149,
        1334
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "925": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A4"
    },
    "928": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x525"
    },
    "931": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "932": {
      "fn": "Bridge.collectFees",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "933": {
      "fn": "Bridge.collectFees",
      "offset": [
        1230,
        1241
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "935": {
      "fn": "Bridge.collectFees",
      "offset": [
        1230,
        1241
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "936": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "938": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "939": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "944": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "946": {
      "op": "SHL"
    },
    "947": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "DUP2",
      "path": "2"
    },
    "948": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "949": {
      "fn": "Bridge.collectFees",
      "offset": [
        1261,
        1265
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "950": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "952": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "DUP3",
      "path": "2"
    },
    "953": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "ADD",
      "path": "2"
    },
    "954": {
      "op": "MSTORE"
    },
    "955": {
      "fn": "Bridge.collectFees",
      "offset": [
        1201,
        1220
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "957": {
      "fn": "Bridge.collectFees",
      "offset": [
        1201,
        1220
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "962": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "964": {
      "op": "SHL"
    },
    "965": {
      "op": "SUB"
    },
    "966": {
      "fn": "Bridge.collectFees",
      "offset": [
        1230,
        1241
      ],
      "op": "AND",
      "path": "2"
    },
    "967": {
      "fn": "Bridge.collectFees",
      "offset": [
        1230,
        1241
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "968": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1252
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "973": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1252
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "974": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "976": {
      "op": "ADD"
    },
    "977": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "979": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "981": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "982": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "DUP1",
      "path": "2"
    },
    "983": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "DUP4",
      "path": "2"
    },
    "984": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "SUB",
      "path": "2"
    },
    "985": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "DUP2",
      "path": "2"
    },
    "986": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "DUP7",
      "path": "2"
    },
    "987": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "GAS",
      "path": "2"
    },
    "988": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "989": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "990": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "DUP1",
      "path": "2"
    },
    "991": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "992": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ED"
    },
    "995": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "996": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "997": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "999": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1000": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1001": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1002": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1004": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1005": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1006": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "POP",
      "path": "2"
    },
    "1007": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "POP",
      "path": "2"
    },
    "1008": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "POP",
      "path": "2"
    },
    "1009": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "POP",
      "path": "2"
    },
    "1010": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1012": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1013": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1014": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1016": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "NOT",
      "path": "2"
    },
    "1017": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1019": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1020": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "ADD",
      "path": "2"
    },
    "1021": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "AND",
      "path": "2"
    },
    "1022": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1023": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "ADD",
      "path": "2"
    },
    "1024": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1025": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1027": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1028": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "POP",
      "path": "2"
    },
    "1029": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1030": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "ADD",
      "path": "2"
    },
    "1031": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1032": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x411"
    },
    "1035": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1036": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1037": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6D2"
    },
    "1040": {
      "fn": "Bridge.collectFees",
      "jump": "i",
      "offset": [
        1223,
        1267
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1041": {
      "fn": "Bridge.collectFees",
      "offset": [
        1223,
        1267
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1042": {
      "fn": "Bridge.collectFees",
      "offset": [
        1284,
        1295
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x1"
    },
    "1044": {
      "fn": "Bridge.collectFees",
      "offset": [
        1284,
        1295
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1045": {
      "fn": "Bridge.collectFees",
      "offset": [
        1201,
        1267
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1046": {
      "fn": "Bridge.collectFees",
      "offset": [
        1201,
        1267
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1047": {
      "op": "POP"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1054": {
      "op": "SHL"
    },
    "1055": {
      "op": "SUB"
    },
    "1056": {
      "fn": "Bridge.collectFees",
      "offset": [
        1284,
        1295
      ],
      "op": "AND",
      "path": "2"
    },
    "1057": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1305
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "1062": {
      "fn": "Bridge.collectFees",
      "offset": [
        1306,
        1313
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x437"
    },
    "1065": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1067": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1074": {
      "op": "SHL"
    },
    "1075": {
      "op": "SUB"
    },
    "1076": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "1077": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1078": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1079": {
      "fn": "Bridge.collectFees",
      "offset": [
        1306,
        1313
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1080": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1082": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1089": {
      "op": "SHL"
    },
    "1090": {
      "op": "SUB"
    },
    "1091": {
      "op": "NOT"
    },
    "1092": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "1094": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1095": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1096": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "SHL",
      "path": "2"
    },
    "1097": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "AND",
      "path": "2"
    },
    "1098": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1099": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1106": {
      "op": "SHL"
    },
    "1107": {
      "op": "SUB"
    },
    "1108": {
      "op": "SWAP1"
    },
    "1109": {
      "op": "SWAP2"
    },
    "1110": {
      "op": "AND"
    },
    "1111": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1113": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1114": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "ADD",
      "path": "2"
    },
    "1115": {
      "op": "MSTORE"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1118": {
      "op": "DUP2"
    },
    "1119": {
      "op": "ADD"
    },
    "1120": {
      "op": "DUP5"
    },
    "1121": {
      "op": "SWAP1"
    },
    "1122": {
      "op": "MSTORE"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1125": {
      "op": "ADD"
    },
    "1126": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1128": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1130": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1131": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1132": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1133": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "SUB",
      "path": "2"
    },
    "1134": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1135": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1137": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1138": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "GAS",
      "path": "2"
    },
    "1139": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "CALL",
      "path": "2"
    },
    "1140": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1141": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1142": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1143": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x484"
    },
    "1146": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1147": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1148": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1150": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1151": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1152": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1153": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1155": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1156": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1157": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "POP",
      "path": "2"
    },
    "1158": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "POP",
      "path": "2"
    },
    "1159": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "POP",
      "path": "2"
    },
    "1160": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "POP",
      "path": "2"
    },
    "1161": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1163": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1164": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1165": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1167": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "NOT",
      "path": "2"
    },
    "1168": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1170": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1171": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "ADD",
      "path": "2"
    },
    "1172": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "AND",
      "path": "2"
    },
    "1173": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1174": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "ADD",
      "path": "2"
    },
    "1175": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1176": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1178": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1179": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "POP",
      "path": "2"
    },
    "1180": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1181": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "ADD",
      "path": "2"
    },
    "1182": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1183": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4A8"
    },
    "1186": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1187": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1188": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x638"
    },
    "1191": {
      "fn": "Bridge.collectFees",
      "jump": "i",
      "offset": [
        1277,
        1327
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1192": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1193": {
      "fn": "Bridge.collectFees",
      "offset": [
        1277,
        1327
      ],
      "op": "POP",
      "path": "2"
    },
    "1194": {
      "fn": "Bridge.collectFees",
      "offset": [
        1191,
        1334
      ],
      "op": "POP",
      "path": "2"
    },
    "1195": {
      "fn": "Bridge.collectFees",
      "jump": "o",
      "offset": [
        1149,
        1334
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1196": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1197": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B4"
    },
    "1200": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x525"
    },
    "1203": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1204": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1211": {
      "op": "SHL"
    },
    "1212": {
      "op": "SUB"
    },
    "1213": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 7
    },
    "1214": {
      "branch": 15,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "AND",
      "path": "0"
    },
    "1215": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x519"
    },
    "1218": {
      "branch": 15,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1219": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1221": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1222": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1228": {
      "op": "SHL"
    },
    "1229": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1230": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1233": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1235": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1236": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "ADD",
      "path": "0"
    },
    "1237": {
      "op": "MSTORE"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1242": {
      "op": "DUP3"
    },
    "1243": {
      "op": "ADD"
    },
    "1244": {
      "op": "MSTORE"
    },
    "1245": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1280": {
      "op": "DUP3"
    },
    "1281": {
      "op": "ADD"
    },
    "1282": {
      "op": "MSTORE"
    },
    "1283": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1292": {
      "op": "SHL"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1295": {
      "op": "DUP3"
    },
    "1296": {
      "op": "ADD"
    },
    "1297": {
      "op": "MSTORE"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1300": {
      "op": "ADD"
    },
    "1301": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D0"
    },
    "1304": {
      "op": "JUMP"
    },
    "1305": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1306": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 8,
      "value": "0x522"
    },
    "1309": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2263,
        2271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1310": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57F"
    },
    "1313": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1314": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1315": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "POP",
      "path": "0"
    },
    "1316": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1317": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1318": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1320": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1327": {
      "op": "SHL"
    },
    "1328": {
      "op": "SUB"
    },
    "1329": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "1330": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 9
    },
    "1331": {
      "branch": 16,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "0",
      "statement": 10
    },
    "1332": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39A"
    },
    "1335": {
      "branch": 16,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1336": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1338": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1339": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1345": {
      "op": "SHL"
    },
    "1346": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1347": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1350": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1352": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1353": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "0"
    },
    "1354": {
      "op": "DUP2"
    },
    "1355": {
      "op": "SWAP1"
    },
    "1356": {
      "op": "MSTORE"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1359": {
      "op": "DUP3"
    },
    "1360": {
      "op": "ADD"
    },
    "1361": {
      "op": "MSTORE"
    },
    "1362": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1397": {
      "op": "DUP3"
    },
    "1398": {
      "op": "ADD"
    },
    "1399": {
      "op": "MSTORE"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1402": {
      "op": "ADD"
    },
    "1403": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D0"
    },
    "1406": {
      "op": "JUMP"
    },
    "1407": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1408": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1410": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1411": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1418": {
      "op": "SHL"
    },
    "1419": {
      "op": "SUB"
    },
    "1420": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 11
    },
    "1421": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1422": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1429": {
      "op": "SHL"
    },
    "1430": {
      "op": "SUB"
    },
    "1431": {
      "op": "NOT"
    },
    "1432": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1433": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "1434": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1435": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "0"
    },
    "1436": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1437": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1438": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x40"
    },
    "1440": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1441": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1442": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1443": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1444": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "0"
    },
    "1445": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1446": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1447": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1448": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1481": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1482": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1483": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1484": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2496,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "1485": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "1486": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1487": {
      "op": "JUMPDEST"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1490": {
      "op": "DUP1"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1493": {
      "op": "DUP4"
    },
    "1494": {
      "op": "DUP6"
    },
    "1495": {
      "op": "SUB"
    },
    "1496": {
      "op": "SLT"
    },
    "1497": {
      "op": "ISZERO"
    },
    "1498": {
      "op": "PUSH2",
      "value": "0x5E2"
    },
    "1501": {
      "op": "JUMPI"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1504": {
      "op": "DUP1"
    },
    "1505": {
      "op": "REVERT"
    },
    "1506": {
      "op": "JUMPDEST"
    },
    "1507": {
      "op": "DUP3"
    },
    "1508": {
      "op": "CALLDATALOAD"
    },
    "1509": {
      "op": "SWAP2"
    },
    "1510": {
      "op": "POP"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1513": {
      "op": "DUP4"
    },
    "1514": {
      "op": "ADD"
    },
    "1515": {
      "op": "CALLDATALOAD"
    },
    "1516": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1521": {
      "op": "DUP2"
    },
    "1522": {
      "op": "AND"
    },
    "1523": {
      "op": "DUP2"
    },
    "1524": {
      "op": "EQ"
    },
    "1525": {
      "op": "PUSH2",
      "value": "0x5FD"
    },
    "1528": {
      "op": "JUMPI"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1531": {
      "op": "DUP1"
    },
    "1532": {
      "op": "REVERT"
    },
    "1533": {
      "op": "JUMPDEST"
    },
    "1534": {
      "op": "DUP1"
    },
    "1535": {
      "op": "SWAP2"
    },
    "1536": {
      "op": "POP"
    },
    "1537": {
      "op": "POP"
    },
    "1538": {
      "op": "SWAP3"
    },
    "1539": {
      "op": "POP"
    },
    "1540": {
      "op": "SWAP3"
    },
    "1541": {
      "op": "SWAP1"
    },
    "1542": {
      "op": "POP"
    },
    "1543": {
      "jump": "o",
      "op": "JUMP"
    },
    "1544": {
      "op": "JUMPDEST"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1549": {
      "op": "DUP3"
    },
    "1550": {
      "op": "DUP5"
    },
    "1551": {
      "op": "SUB"
    },
    "1552": {
      "op": "SLT"
    },
    "1553": {
      "op": "ISZERO"
    },
    "1554": {
      "op": "PUSH2",
      "value": "0x61A"
    },
    "1557": {
      "op": "JUMPI"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1560": {
      "op": "DUP1"
    },
    "1561": {
      "op": "REVERT"
    },
    "1562": {
      "op": "JUMPDEST"
    },
    "1563": {
      "op": "DUP2"
    },
    "1564": {
      "op": "CALLDATALOAD"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1571": {
      "op": "SHL"
    },
    "1572": {
      "op": "SUB"
    },
    "1573": {
      "op": "DUP2"
    },
    "1574": {
      "op": "AND"
    },
    "1575": {
      "op": "DUP2"
    },
    "1576": {
      "op": "EQ"
    },
    "1577": {
      "op": "PUSH2",
      "value": "0x631"
    },
    "1580": {
      "op": "JUMPI"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1583": {
      "op": "DUP1"
    },
    "1584": {
      "op": "REVERT"
    },
    "1585": {
      "op": "JUMPDEST"
    },
    "1586": {
      "op": "SWAP4"
    },
    "1587": {
      "op": "SWAP3"
    },
    "1588": {
      "op": "POP"
    },
    "1589": {
      "op": "POP"
    },
    "1590": {
      "op": "POP"
    },
    "1591": {
      "jump": "o",
      "op": "JUMP"
    },
    "1592": {
      "op": "JUMPDEST"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1597": {
      "op": "DUP3"
    },
    "1598": {
      "op": "DUP5"
    },
    "1599": {
      "op": "SUB"
    },
    "1600": {
      "op": "SLT"
    },
    "1601": {
      "op": "ISZERO"
    },
    "1602": {
      "op": "PUSH2",
      "value": "0x64A"
    },
    "1605": {
      "op": "JUMPI"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1608": {
      "op": "DUP1"
    },
    "1609": {
      "op": "REVERT"
    },
    "1610": {
      "op": "JUMPDEST"
    },
    "1611": {
      "op": "DUP2"
    },
    "1612": {
      "op": "MLOAD"
    },
    "1613": {
      "op": "DUP1"
    },
    "1614": {
      "op": "ISZERO"
    },
    "1615": {
      "op": "ISZERO"
    },
    "1616": {
      "op": "DUP2"
    },
    "1617": {
      "op": "EQ"
    },
    "1618": {
      "op": "PUSH2",
      "value": "0x631"
    },
    "1621": {
      "op": "JUMPI"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1624": {
      "op": "DUP1"
    },
    "1625": {
      "op": "REVERT"
    },
    "1626": {
      "op": "JUMPDEST"
    },
    "1627": {
      "op": "DUP2"
    },
    "1628": {
      "op": "DUP2"
    },
    "1629": {
      "op": "SUB"
    },
    "1630": {
      "op": "DUP2"
    },
    "1631": {
      "op": "DUP2"
    },
    "1632": {
      "op": "GT"
    },
    "1633": {
      "op": "ISZERO"
    },
    "1634": {
      "op": "PUSH2",
      "value": "0x67B"
    },
    "1637": {
      "op": "JUMPI"
    },
    "1638": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1645": {
      "op": "SHL"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1648": {
      "op": "MSTORE"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1653": {
      "op": "MSTORE"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1658": {
      "op": "REVERT"
    },
    "1659": {
      "op": "JUMPDEST"
    },
    "1660": {
      "op": "SWAP3"
    },
    "1661": {
      "op": "SWAP2"
    },
    "1662": {
      "op": "POP"
    },
    "1663": {
      "op": "POP"
    },
    "1664": {
      "jump": "o",
      "op": "JUMP"
    },
    "1665": {
      "op": "JUMPDEST"
    },
    "1666": {
      "op": "DUP1"
    },
    "1667": {
      "op": "MLOAD"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1670": {
      "op": "DUP1"
    },
    "1671": {
      "op": "DUP4"
    },
    "1672": {
      "op": "ADD"
    },
    "1673": {
      "op": "MLOAD"
    },
    "1674": {
      "op": "SWAP2"
    },
    "1675": {
      "op": "SWAP1"
    },
    "1676": {
      "op": "DUP2"
    },
    "1677": {
      "op": "LT"
    },
    "1678": {
      "op": "ISZERO"
    },
    "1679": {
      "op": "PUSH2",
      "value": "0x6A2"
    },
    "1682": {
      "op": "JUMPI"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1685": {
      "op": "NOT"
    },
    "1686": {
      "op": "DUP2"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1689": {
      "op": "SUB"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "1692": {
      "op": "SHL"
    },
    "1693": {
      "op": "SHL"
    },
    "1694": {
      "op": "DUP3"
    },
    "1695": {
      "op": "AND"
    },
    "1696": {
      "op": "SWAP2"
    },
    "1697": {
      "op": "POP"
    },
    "1698": {
      "op": "JUMPDEST"
    },
    "1699": {
      "op": "POP"
    },
    "1700": {
      "op": "SWAP2"
    },
    "1701": {
      "op": "SWAP1"
    },
    "1702": {
      "op": "POP"
    },
    "1703": {
      "jump": "o",
      "op": "JUMP"
    },
    "1704": {
      "op": "JUMPDEST"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1709": {
      "op": "DUP3"
    },
    "1710": {
      "op": "DUP5"
    },
    "1711": {
      "op": "SUB"
    },
    "1712": {
      "op": "SLT"
    },
    "1713": {
      "op": "ISZERO"
    },
    "1714": {
      "op": "PUSH2",
      "value": "0x6BA"
    },
    "1717": {
      "op": "JUMPI"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1720": {
      "op": "DUP1"
    },
    "1721": {
      "op": "REVERT"
    },
    "1722": {
      "op": "JUMPDEST"
    },
    "1723": {
      "op": "DUP2"
    },
    "1724": {
      "op": "MLOAD"
    },
    "1725": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1734": {
      "op": "DUP2"
    },
    "1735": {
      "op": "AND"
    },
    "1736": {
      "op": "DUP2"
    },
    "1737": {
      "op": "EQ"
    },
    "1738": {
      "op": "PUSH2",
      "value": "0x631"
    },
    "1741": {
      "op": "JUMPI"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1744": {
      "op": "DUP1"
    },
    "1745": {
      "op": "REVERT"
    },
    "1746": {
      "op": "JUMPDEST"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1751": {
      "op": "DUP3"
    },
    "1752": {
      "op": "DUP5"
    },
    "1753": {
      "op": "SUB"
    },
    "1754": {
      "op": "SLT"
    },
    "1755": {
      "op": "ISZERO"
    },
    "1756": {
      "op": "PUSH2",
      "value": "0x6E4"
    },
    "1759": {
      "op": "JUMPI"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1762": {
      "op": "DUP1"
    },
    "1763": {
      "op": "REVERT"
    },
    "1764": {
      "op": "JUMPDEST"
    },
    "1765": {
      "op": "POP"
    },
    "1766": {
      "op": "MLOAD"
    },
    "1767": {
      "op": "SWAP2"
    },
    "1768": {
      "op": "SWAP1"
    },
    "1769": {
      "op": "POP"
    },
    "1770": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "87bcf80bd45539435e2440785dc905a076349133",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../interfaces/IERC20.sol\";\nimport \"../interfaces/ITokenMessenger.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Bridge is Ownable {\n    address public usdcAddress;\n    address public tokenMessengerAddress; //arbirtum_side\n\n    constructor(address _usdcAddress, address _tokenMessengerAddress) {\n        usdcAddress = _usdcAddress;\n        tokenMessengerAddress = _tokenMessengerAddress;\n    }\n\n    function sendAssetsToBridge(\n        uint256 amount,\n        uint32 destinationChainId\n    ) public {\n        require(\n            IERC20(usdcAddress).transferFrom(msg.sender, address(this), amount),\n            \"Failed to transfer usdc\"\n        );\n        require(amount > 1 * 10 ** 5, \"minimum amount, more than 0.1 USDC\");\n\n        uint256 finalAmount = amount - 1 * 10 ** 6;\n\n        IERC20(usdcAddress).approve(tokenMessengerAddress, finalAmount);\n        ITokenMessenger(tokenMessengerAddress).depositForBurn(\n            finalAmount,\n            destinationChainId,\n            bytes32(abi.encode(msg.sender)),\n            usdcAddress\n        );\n    }\n\n    function collectFees() external onlyOwner {\n        uint256 balanceUsdc = IERC20(usdcAddress).balanceOf(address(this));\n        IERC20(usdcAddress).transfer(owner(), balanceUsdc);\n    }\n}\n",
  "sourceMap": "190:1146:2:-:0;;;314:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:1;936:18:0;:32::i;:::-;390:11:2;:26;;-1:-1:-1;;;;;390:26:2;;;-1:-1:-1;;;;;;390:26:2;;;;;;;426:21;:46;;;;;;;;;;;190:1146;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:177:5:-;93:13;;-1:-1:-1;;;;;135:31:5;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;190:1146:2;;;;;;",
  "sourcePath": "contracts/Bridge.sol",
  "type": "contract"
}